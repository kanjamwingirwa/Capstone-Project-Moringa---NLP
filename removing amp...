{
  "nbformat": 4,
  "nbformat_minor": 0,
  "metadata": {
    "colab": {
      "name": "Copy of Copy of Edited Pro Dev Project Current 17/2",
      "provenance": [],
      "include_colab_link": true
    },
    "kernelspec": {
      "name": "python3",
      "display_name": "Python 3"
    },
    "language_info": {
      "name": "python"
    },
    "accelerator": "GPU"
  },
  "cells": [
    {
      "cell_type": "markdown",
      "metadata": {
        "id": "view-in-github",
        "colab_type": "text"
      },
      "source": [
        "<a href=\"https://colab.research.google.com/github/kanjamwingirwa/Capstone-Project-Moringa---NLP/blob/main/removing%20amp...\" target=\"_parent\"><img src=\"https://colab.research.google.com/assets/colab-badge.svg\" alt=\"Open In Colab\"/></a>"
      ]
    },
    {
      "cell_type": "markdown",
      "source": [
        "# Professional Development : Capstone Project\n",
        "\n",
        "Team Members \n",
        "\n",
        "\n",
        "\n",
        "1.   Kevin Kilonzo\n",
        "\n",
        "2.   Rachel Juma\n",
        "\n",
        "3.   Farnadis Kanja\n",
        "\n",
        "4.   Ted Kimani\n",
        "\n"
      ],
      "metadata": {
        "id": "_PpPNtsCtNo-"
      }
    },
    {
      "cell_type": "markdown",
      "source": [
        "# Problem Statement \n",
        "\n",
        "With the help of this dataset, one can understand more about human sentiments and also analyse the situation when a particular person intends to make use of hatred/racist comments"
      ],
      "metadata": {
        "id": "bi30eBcptsHn"
      }
    },
    {
      "cell_type": "markdown",
      "source": [
        "# Main Objective \n",
        "\n",
        "**The creation of a model that can identify hateful tweets**"
      ],
      "metadata": {
        "id": "MlfCeiYctxO9"
      }
    },
    {
      "cell_type": "markdown",
      "source": [
        "# Business Understanding\n",
        "\n",
        "Social media, twitter in particular, has now become an integral part of how news is delivered. The demand for information continues to grow as has the sources of this news and thus creating a need for news classification. Using machine learning, news can be classified, therefore, enabling the user to access information that is interesting to them quickly and efficiently. \n"
      ],
      "metadata": {
        "id": "cZynmegFs1bf"
      }
    },
    {
      "cell_type": "code",
      "execution_count": 5,
      "metadata": {
        "id": "cRNbzBL5yUZ6"
      },
      "outputs": [],
      "source": [
        "import pandas as pd\n",
        "import numpy as np\n",
        "import matplotlib.pyplot as plt\n",
        "import seaborn as sb\n",
        "import warnings\n",
        "import re\n",
        "import string\n",
        "from wordcloud import WordCloud\n",
        "warnings.filterwarnings('ignore')"
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "train = pd.read_csv(\"train_tweet.csv\")\n",
        "test = pd.read_csv(\"test_tweets.csv\")"
      ],
      "metadata": {
        "id": "_brZr-6UzO4t"
      },
      "execution_count": 6,
      "outputs": []
    },
    {
      "cell_type": "code",
      "source": [
        "train.head(10)"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 335
        },
        "id": "VDGJ1ZqEJKiF",
        "outputId": "b3c9a1eb-1c2d-4a77-e661-4de4a09e268c"
      },
      "execution_count": 7,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/html": [
              "\n",
              "  <div id=\"df-a3acbd47-ad97-40d2-a0c0-52765b0e86e6\">\n",
              "    <div class=\"colab-df-container\">\n",
              "      <div>\n",
              "<style scoped>\n",
              "    .dataframe tbody tr th:only-of-type {\n",
              "        vertical-align: middle;\n",
              "    }\n",
              "\n",
              "    .dataframe tbody tr th {\n",
              "        vertical-align: top;\n",
              "    }\n",
              "\n",
              "    .dataframe thead th {\n",
              "        text-align: right;\n",
              "    }\n",
              "</style>\n",
              "<table border=\"1\" class=\"dataframe\">\n",
              "  <thead>\n",
              "    <tr style=\"text-align: right;\">\n",
              "      <th></th>\n",
              "      <th>id</th>\n",
              "      <th>label</th>\n",
              "      <th>tweet</th>\n",
              "    </tr>\n",
              "  </thead>\n",
              "  <tbody>\n",
              "    <tr>\n",
              "      <th>0</th>\n",
              "      <td>1</td>\n",
              "      <td>0</td>\n",
              "      <td>@user when a father is dysfunctional and is s...</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>1</th>\n",
              "      <td>2</td>\n",
              "      <td>0</td>\n",
              "      <td>@user @user thanks for #lyft credit i can't us...</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>2</th>\n",
              "      <td>3</td>\n",
              "      <td>0</td>\n",
              "      <td>bihday your majesty</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>3</th>\n",
              "      <td>4</td>\n",
              "      <td>0</td>\n",
              "      <td>#model   i love u take with u all the time in ...</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>4</th>\n",
              "      <td>5</td>\n",
              "      <td>0</td>\n",
              "      <td>factsguide: society now    #motivation</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>5</th>\n",
              "      <td>6</td>\n",
              "      <td>0</td>\n",
              "      <td>[2/2] huge fan fare and big talking before the...</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>6</th>\n",
              "      <td>7</td>\n",
              "      <td>0</td>\n",
              "      <td>@user camping tomorrow @user @user @user @use...</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>7</th>\n",
              "      <td>8</td>\n",
              "      <td>0</td>\n",
              "      <td>the next school year is the year for exams.ð...</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>8</th>\n",
              "      <td>9</td>\n",
              "      <td>0</td>\n",
              "      <td>we won!!! love the land!!! #allin #cavs #champ...</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>9</th>\n",
              "      <td>10</td>\n",
              "      <td>0</td>\n",
              "      <td>@user @user welcome here !  i'm   it's so #gr...</td>\n",
              "    </tr>\n",
              "  </tbody>\n",
              "</table>\n",
              "</div>\n",
              "      <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-a3acbd47-ad97-40d2-a0c0-52765b0e86e6')\"\n",
              "              title=\"Convert this dataframe to an interactive table.\"\n",
              "              style=\"display:none;\">\n",
              "        \n",
              "  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n",
              "       width=\"24px\">\n",
              "    <path d=\"M0 0h24v24H0V0z\" fill=\"none\"/>\n",
              "    <path d=\"M18.56 5.44l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94zm-11 1L8.5 8.5l.94-2.06 2.06-.94-2.06-.94L8.5 2.5l-.94 2.06-2.06.94zm10 10l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94z\"/><path d=\"M17.41 7.96l-1.37-1.37c-.4-.4-.92-.59-1.43-.59-.52 0-1.04.2-1.43.59L10.3 9.45l-7.72 7.72c-.78.78-.78 2.05 0 2.83L4 21.41c.39.39.9.59 1.41.59.51 0 1.02-.2 1.41-.59l7.78-7.78 2.81-2.81c.8-.78.8-2.07 0-2.86zM5.41 20L4 18.59l7.72-7.72 1.47 1.35L5.41 20z\"/>\n",
              "  </svg>\n",
              "      </button>\n",
              "      \n",
              "  <style>\n",
              "    .colab-df-container {\n",
              "      display:flex;\n",
              "      flex-wrap:wrap;\n",
              "      gap: 12px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert {\n",
              "      background-color: #E8F0FE;\n",
              "      border: none;\n",
              "      border-radius: 50%;\n",
              "      cursor: pointer;\n",
              "      display: none;\n",
              "      fill: #1967D2;\n",
              "      height: 32px;\n",
              "      padding: 0 0 0 0;\n",
              "      width: 32px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert:hover {\n",
              "      background-color: #E2EBFA;\n",
              "      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n",
              "      fill: #174EA6;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert {\n",
              "      background-color: #3B4455;\n",
              "      fill: #D2E3FC;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert:hover {\n",
              "      background-color: #434B5C;\n",
              "      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n",
              "      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n",
              "      fill: #FFFFFF;\n",
              "    }\n",
              "  </style>\n",
              "\n",
              "      <script>\n",
              "        const buttonEl =\n",
              "          document.querySelector('#df-a3acbd47-ad97-40d2-a0c0-52765b0e86e6 button.colab-df-convert');\n",
              "        buttonEl.style.display =\n",
              "          google.colab.kernel.accessAllowed ? 'block' : 'none';\n",
              "\n",
              "        async function convertToInteractive(key) {\n",
              "          const element = document.querySelector('#df-a3acbd47-ad97-40d2-a0c0-52765b0e86e6');\n",
              "          const dataTable =\n",
              "            await google.colab.kernel.invokeFunction('convertToInteractive',\n",
              "                                                     [key], {});\n",
              "          if (!dataTable) return;\n",
              "\n",
              "          const docLinkHtml = 'Like what you see? Visit the ' +\n",
              "            '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n",
              "            + ' to learn more about interactive tables.';\n",
              "          element.innerHTML = '';\n",
              "          dataTable['output_type'] = 'display_data';\n",
              "          await google.colab.output.renderOutput(dataTable, element);\n",
              "          const docLink = document.createElement('div');\n",
              "          docLink.innerHTML = docLinkHtml;\n",
              "          element.appendChild(docLink);\n",
              "        }\n",
              "      </script>\n",
              "    </div>\n",
              "  </div>\n",
              "  "
            ],
            "text/plain": [
              "   id  label                                              tweet\n",
              "0   1      0   @user when a father is dysfunctional and is s...\n",
              "1   2      0  @user @user thanks for #lyft credit i can't us...\n",
              "2   3      0                                bihday your majesty\n",
              "3   4      0  #model   i love u take with u all the time in ...\n",
              "4   5      0             factsguide: society now    #motivation\n",
              "5   6      0  [2/2] huge fan fare and big talking before the...\n",
              "6   7      0   @user camping tomorrow @user @user @user @use...\n",
              "7   8      0  the next school year is the year for exams.ð...\n",
              "8   9      0  we won!!! love the land!!! #allin #cavs #champ...\n",
              "9  10      0   @user @user welcome here !  i'm   it's so #gr..."
            ]
          },
          "metadata": {},
          "execution_count": 7
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "test.head(10)"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 335
        },
        "id": "1g0Kd0qjJNJ_",
        "outputId": "ca82eac2-1b8a-4240-de4d-9e0daba46a8d"
      },
      "execution_count": 8,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/html": [
              "\n",
              "  <div id=\"df-a2fa1d37-12f5-4996-b714-cb0ccbbb3ecd\">\n",
              "    <div class=\"colab-df-container\">\n",
              "      <div>\n",
              "<style scoped>\n",
              "    .dataframe tbody tr th:only-of-type {\n",
              "        vertical-align: middle;\n",
              "    }\n",
              "\n",
              "    .dataframe tbody tr th {\n",
              "        vertical-align: top;\n",
              "    }\n",
              "\n",
              "    .dataframe thead th {\n",
              "        text-align: right;\n",
              "    }\n",
              "</style>\n",
              "<table border=\"1\" class=\"dataframe\">\n",
              "  <thead>\n",
              "    <tr style=\"text-align: right;\">\n",
              "      <th></th>\n",
              "      <th>id</th>\n",
              "      <th>tweet</th>\n",
              "    </tr>\n",
              "  </thead>\n",
              "  <tbody>\n",
              "    <tr>\n",
              "      <th>0</th>\n",
              "      <td>31963</td>\n",
              "      <td>#studiolife #aislife #requires #passion #dedic...</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>1</th>\n",
              "      <td>31964</td>\n",
              "      <td>@user #white #supremacists want everyone to s...</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>2</th>\n",
              "      <td>31965</td>\n",
              "      <td>safe ways to heal your #acne!!    #altwaystohe...</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>3</th>\n",
              "      <td>31966</td>\n",
              "      <td>is the hp and the cursed child book up for res...</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>4</th>\n",
              "      <td>31967</td>\n",
              "      <td>3rd #bihday to my amazing, hilarious #nephew...</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>5</th>\n",
              "      <td>31968</td>\n",
              "      <td>choose to be   :) #momtips</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>6</th>\n",
              "      <td>31969</td>\n",
              "      <td>something inside me dies ð¦ð¿â¨  eyes nes...</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>7</th>\n",
              "      <td>31970</td>\n",
              "      <td>#finished#tattoo#inked#ink#loveitâ¤ï¸ #â¤ï¸...</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>8</th>\n",
              "      <td>31971</td>\n",
              "      <td>@user @user @user i will never understand why...</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>9</th>\n",
              "      <td>31972</td>\n",
              "      <td>#delicious   #food #lovelife #capetown mannaep...</td>\n",
              "    </tr>\n",
              "  </tbody>\n",
              "</table>\n",
              "</div>\n",
              "      <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-a2fa1d37-12f5-4996-b714-cb0ccbbb3ecd')\"\n",
              "              title=\"Convert this dataframe to an interactive table.\"\n",
              "              style=\"display:none;\">\n",
              "        \n",
              "  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n",
              "       width=\"24px\">\n",
              "    <path d=\"M0 0h24v24H0V0z\" fill=\"none\"/>\n",
              "    <path d=\"M18.56 5.44l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94zm-11 1L8.5 8.5l.94-2.06 2.06-.94-2.06-.94L8.5 2.5l-.94 2.06-2.06.94zm10 10l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94z\"/><path d=\"M17.41 7.96l-1.37-1.37c-.4-.4-.92-.59-1.43-.59-.52 0-1.04.2-1.43.59L10.3 9.45l-7.72 7.72c-.78.78-.78 2.05 0 2.83L4 21.41c.39.39.9.59 1.41.59.51 0 1.02-.2 1.41-.59l7.78-7.78 2.81-2.81c.8-.78.8-2.07 0-2.86zM5.41 20L4 18.59l7.72-7.72 1.47 1.35L5.41 20z\"/>\n",
              "  </svg>\n",
              "      </button>\n",
              "      \n",
              "  <style>\n",
              "    .colab-df-container {\n",
              "      display:flex;\n",
              "      flex-wrap:wrap;\n",
              "      gap: 12px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert {\n",
              "      background-color: #E8F0FE;\n",
              "      border: none;\n",
              "      border-radius: 50%;\n",
              "      cursor: pointer;\n",
              "      display: none;\n",
              "      fill: #1967D2;\n",
              "      height: 32px;\n",
              "      padding: 0 0 0 0;\n",
              "      width: 32px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert:hover {\n",
              "      background-color: #E2EBFA;\n",
              "      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n",
              "      fill: #174EA6;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert {\n",
              "      background-color: #3B4455;\n",
              "      fill: #D2E3FC;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert:hover {\n",
              "      background-color: #434B5C;\n",
              "      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n",
              "      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n",
              "      fill: #FFFFFF;\n",
              "    }\n",
              "  </style>\n",
              "\n",
              "      <script>\n",
              "        const buttonEl =\n",
              "          document.querySelector('#df-a2fa1d37-12f5-4996-b714-cb0ccbbb3ecd button.colab-df-convert');\n",
              "        buttonEl.style.display =\n",
              "          google.colab.kernel.accessAllowed ? 'block' : 'none';\n",
              "\n",
              "        async function convertToInteractive(key) {\n",
              "          const element = document.querySelector('#df-a2fa1d37-12f5-4996-b714-cb0ccbbb3ecd');\n",
              "          const dataTable =\n",
              "            await google.colab.kernel.invokeFunction('convertToInteractive',\n",
              "                                                     [key], {});\n",
              "          if (!dataTable) return;\n",
              "\n",
              "          const docLinkHtml = 'Like what you see? Visit the ' +\n",
              "            '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n",
              "            + ' to learn more about interactive tables.';\n",
              "          element.innerHTML = '';\n",
              "          dataTable['output_type'] = 'display_data';\n",
              "          await google.colab.output.renderOutput(dataTable, element);\n",
              "          const docLink = document.createElement('div');\n",
              "          docLink.innerHTML = docLinkHtml;\n",
              "          element.appendChild(docLink);\n",
              "        }\n",
              "      </script>\n",
              "    </div>\n",
              "  </div>\n",
              "  "
            ],
            "text/plain": [
              "      id                                              tweet\n",
              "0  31963  #studiolife #aislife #requires #passion #dedic...\n",
              "1  31964   @user #white #supremacists want everyone to s...\n",
              "2  31965  safe ways to heal your #acne!!    #altwaystohe...\n",
              "3  31966  is the hp and the cursed child book up for res...\n",
              "4  31967    3rd #bihday to my amazing, hilarious #nephew...\n",
              "5  31968                        choose to be   :) #momtips \n",
              "6  31969  something inside me dies ð¦ð¿â¨  eyes nes...\n",
              "7  31970  #finished#tattoo#inked#ink#loveitâ¤ï¸ #â¤ï¸...\n",
              "8  31971   @user @user @user i will never understand why...\n",
              "9  31972  #delicious   #food #lovelife #capetown mannaep..."
            ]
          },
          "metadata": {},
          "execution_count": 8
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "train.shape"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "Tiv3UeE6JPV9",
        "outputId": "fe4d46b1-bf26-471c-a52e-aa68012c197a"
      },
      "execution_count": 9,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "(31962, 3)"
            ]
          },
          "metadata": {},
          "execution_count": 9
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "test.shape"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "IzYRJEc0JQvj",
        "outputId": "4f6c4602-b7ad-4a38-ded1-71a81bda95a5"
      },
      "execution_count": 10,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "(17197, 2)"
            ]
          },
          "metadata": {},
          "execution_count": 10
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "train.dtypes"
      ],
      "metadata": {
        "id": "pCesh13kBnmH",
        "outputId": "6622b2ba-0db4-48a6-fc73-c01acec4e0ff",
        "colab": {
          "base_uri": "https://localhost:8080/"
        }
      },
      "execution_count": 11,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "id        int64\n",
              "label     int64\n",
              "tweet    object\n",
              "dtype: object"
            ]
          },
          "metadata": {},
          "execution_count": 11
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "#Lets see how the hateful and non-hateful comments are distributed\n",
        "train['label'].unique()"
      ],
      "metadata": {
        "id": "M0r2j97_yLbS",
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "outputId": "b14d3cd6-13e8-44e4-97d9-4ecc313d2de1"
      },
      "execution_count": 12,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "array([0, 1])"
            ]
          },
          "metadata": {},
          "execution_count": 12
        }
      ]
    },
    {
      "cell_type": "markdown",
      "source": [
        "# Data Cleaning"
      ],
      "metadata": {
        "id": "acg1EqzV_R-8"
      }
    },
    {
      "cell_type": "code",
      "source": [
        "df = train\n",
        "df.head(2)"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 105
        },
        "id": "IVm6lQaO_V5S",
        "outputId": "94bd1140-49f2-40b4-88c3-d361cdba4346"
      },
      "execution_count": 13,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/html": [
              "\n",
              "  <div id=\"df-5ecc8476-a097-4dcf-9bc1-2a6778c89cef\">\n",
              "    <div class=\"colab-df-container\">\n",
              "      <div>\n",
              "<style scoped>\n",
              "    .dataframe tbody tr th:only-of-type {\n",
              "        vertical-align: middle;\n",
              "    }\n",
              "\n",
              "    .dataframe tbody tr th {\n",
              "        vertical-align: top;\n",
              "    }\n",
              "\n",
              "    .dataframe thead th {\n",
              "        text-align: right;\n",
              "    }\n",
              "</style>\n",
              "<table border=\"1\" class=\"dataframe\">\n",
              "  <thead>\n",
              "    <tr style=\"text-align: right;\">\n",
              "      <th></th>\n",
              "      <th>id</th>\n",
              "      <th>label</th>\n",
              "      <th>tweet</th>\n",
              "    </tr>\n",
              "  </thead>\n",
              "  <tbody>\n",
              "    <tr>\n",
              "      <th>0</th>\n",
              "      <td>1</td>\n",
              "      <td>0</td>\n",
              "      <td>@user when a father is dysfunctional and is s...</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>1</th>\n",
              "      <td>2</td>\n",
              "      <td>0</td>\n",
              "      <td>@user @user thanks for #lyft credit i can't us...</td>\n",
              "    </tr>\n",
              "  </tbody>\n",
              "</table>\n",
              "</div>\n",
              "      <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-5ecc8476-a097-4dcf-9bc1-2a6778c89cef')\"\n",
              "              title=\"Convert this dataframe to an interactive table.\"\n",
              "              style=\"display:none;\">\n",
              "        \n",
              "  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n",
              "       width=\"24px\">\n",
              "    <path d=\"M0 0h24v24H0V0z\" fill=\"none\"/>\n",
              "    <path d=\"M18.56 5.44l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94zm-11 1L8.5 8.5l.94-2.06 2.06-.94-2.06-.94L8.5 2.5l-.94 2.06-2.06.94zm10 10l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94z\"/><path d=\"M17.41 7.96l-1.37-1.37c-.4-.4-.92-.59-1.43-.59-.52 0-1.04.2-1.43.59L10.3 9.45l-7.72 7.72c-.78.78-.78 2.05 0 2.83L4 21.41c.39.39.9.59 1.41.59.51 0 1.02-.2 1.41-.59l7.78-7.78 2.81-2.81c.8-.78.8-2.07 0-2.86zM5.41 20L4 18.59l7.72-7.72 1.47 1.35L5.41 20z\"/>\n",
              "  </svg>\n",
              "      </button>\n",
              "      \n",
              "  <style>\n",
              "    .colab-df-container {\n",
              "      display:flex;\n",
              "      flex-wrap:wrap;\n",
              "      gap: 12px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert {\n",
              "      background-color: #E8F0FE;\n",
              "      border: none;\n",
              "      border-radius: 50%;\n",
              "      cursor: pointer;\n",
              "      display: none;\n",
              "      fill: #1967D2;\n",
              "      height: 32px;\n",
              "      padding: 0 0 0 0;\n",
              "      width: 32px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert:hover {\n",
              "      background-color: #E2EBFA;\n",
              "      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n",
              "      fill: #174EA6;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert {\n",
              "      background-color: #3B4455;\n",
              "      fill: #D2E3FC;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert:hover {\n",
              "      background-color: #434B5C;\n",
              "      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n",
              "      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n",
              "      fill: #FFFFFF;\n",
              "    }\n",
              "  </style>\n",
              "\n",
              "      <script>\n",
              "        const buttonEl =\n",
              "          document.querySelector('#df-5ecc8476-a097-4dcf-9bc1-2a6778c89cef button.colab-df-convert');\n",
              "        buttonEl.style.display =\n",
              "          google.colab.kernel.accessAllowed ? 'block' : 'none';\n",
              "\n",
              "        async function convertToInteractive(key) {\n",
              "          const element = document.querySelector('#df-5ecc8476-a097-4dcf-9bc1-2a6778c89cef');\n",
              "          const dataTable =\n",
              "            await google.colab.kernel.invokeFunction('convertToInteractive',\n",
              "                                                     [key], {});\n",
              "          if (!dataTable) return;\n",
              "\n",
              "          const docLinkHtml = 'Like what you see? Visit the ' +\n",
              "            '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n",
              "            + ' to learn more about interactive tables.';\n",
              "          element.innerHTML = '';\n",
              "          dataTable['output_type'] = 'display_data';\n",
              "          await google.colab.output.renderOutput(dataTable, element);\n",
              "          const docLink = document.createElement('div');\n",
              "          docLink.innerHTML = docLinkHtml;\n",
              "          element.appendChild(docLink);\n",
              "        }\n",
              "      </script>\n",
              "    </div>\n",
              "  </div>\n",
              "  "
            ],
            "text/plain": [
              "   id  label                                              tweet\n",
              "0   1      0   @user when a father is dysfunctional and is s...\n",
              "1   2      0  @user @user thanks for #lyft credit i can't us..."
            ]
          },
          "metadata": {},
          "execution_count": 13
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "#Removing links \n",
        "df[\"clean_tweets\"] = df[\"tweet\"].apply(lambda s: ' '.join(re.sub(\"(w+://S+)\", \" \", s).split()))\n",
        "df[['tweet','clean_tweets']].iloc[9]\n"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "MUm1rnQRQzXy",
        "outputId": "d1f3ba5b-8422-42b2-a4b0-0223fdfbb448"
      },
      "execution_count": 14,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "tweet            @user @user welcome here !  i'm   it's so #gr...\n",
              "clean_tweets        @user @user welcome here ! i'm it's so #gr8 !\n",
              "Name: 9, dtype: object"
            ]
          },
          "metadata": {},
          "execution_count": 14
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "#Changing all the letter to lower case\n",
        "df['clean_tweets'] = df.tweet.map(lambda x: x.lower())\n",
        "train.head()"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 191
        },
        "id": "bJlHAhVmrw52",
        "outputId": "ae2c434b-7e3a-49d5-c28a-3d9fe5fa6146"
      },
      "execution_count": 15,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/html": [
              "\n",
              "  <div id=\"df-13d7ca41-8038-4189-b2b5-9351bf24a56f\">\n",
              "    <div class=\"colab-df-container\">\n",
              "      <div>\n",
              "<style scoped>\n",
              "    .dataframe tbody tr th:only-of-type {\n",
              "        vertical-align: middle;\n",
              "    }\n",
              "\n",
              "    .dataframe tbody tr th {\n",
              "        vertical-align: top;\n",
              "    }\n",
              "\n",
              "    .dataframe thead th {\n",
              "        text-align: right;\n",
              "    }\n",
              "</style>\n",
              "<table border=\"1\" class=\"dataframe\">\n",
              "  <thead>\n",
              "    <tr style=\"text-align: right;\">\n",
              "      <th></th>\n",
              "      <th>id</th>\n",
              "      <th>label</th>\n",
              "      <th>tweet</th>\n",
              "      <th>clean_tweets</th>\n",
              "    </tr>\n",
              "  </thead>\n",
              "  <tbody>\n",
              "    <tr>\n",
              "      <th>0</th>\n",
              "      <td>1</td>\n",
              "      <td>0</td>\n",
              "      <td>@user when a father is dysfunctional and is s...</td>\n",
              "      <td>@user when a father is dysfunctional and is s...</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>1</th>\n",
              "      <td>2</td>\n",
              "      <td>0</td>\n",
              "      <td>@user @user thanks for #lyft credit i can't us...</td>\n",
              "      <td>@user @user thanks for #lyft credit i can't us...</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>2</th>\n",
              "      <td>3</td>\n",
              "      <td>0</td>\n",
              "      <td>bihday your majesty</td>\n",
              "      <td>bihday your majesty</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>3</th>\n",
              "      <td>4</td>\n",
              "      <td>0</td>\n",
              "      <td>#model   i love u take with u all the time in ...</td>\n",
              "      <td>#model   i love u take with u all the time in ...</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>4</th>\n",
              "      <td>5</td>\n",
              "      <td>0</td>\n",
              "      <td>factsguide: society now    #motivation</td>\n",
              "      <td>factsguide: society now    #motivation</td>\n",
              "    </tr>\n",
              "  </tbody>\n",
              "</table>\n",
              "</div>\n",
              "      <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-13d7ca41-8038-4189-b2b5-9351bf24a56f')\"\n",
              "              title=\"Convert this dataframe to an interactive table.\"\n",
              "              style=\"display:none;\">\n",
              "        \n",
              "  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n",
              "       width=\"24px\">\n",
              "    <path d=\"M0 0h24v24H0V0z\" fill=\"none\"/>\n",
              "    <path d=\"M18.56 5.44l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94zm-11 1L8.5 8.5l.94-2.06 2.06-.94-2.06-.94L8.5 2.5l-.94 2.06-2.06.94zm10 10l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94z\"/><path d=\"M17.41 7.96l-1.37-1.37c-.4-.4-.92-.59-1.43-.59-.52 0-1.04.2-1.43.59L10.3 9.45l-7.72 7.72c-.78.78-.78 2.05 0 2.83L4 21.41c.39.39.9.59 1.41.59.51 0 1.02-.2 1.41-.59l7.78-7.78 2.81-2.81c.8-.78.8-2.07 0-2.86zM5.41 20L4 18.59l7.72-7.72 1.47 1.35L5.41 20z\"/>\n",
              "  </svg>\n",
              "      </button>\n",
              "      \n",
              "  <style>\n",
              "    .colab-df-container {\n",
              "      display:flex;\n",
              "      flex-wrap:wrap;\n",
              "      gap: 12px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert {\n",
              "      background-color: #E8F0FE;\n",
              "      border: none;\n",
              "      border-radius: 50%;\n",
              "      cursor: pointer;\n",
              "      display: none;\n",
              "      fill: #1967D2;\n",
              "      height: 32px;\n",
              "      padding: 0 0 0 0;\n",
              "      width: 32px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert:hover {\n",
              "      background-color: #E2EBFA;\n",
              "      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n",
              "      fill: #174EA6;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert {\n",
              "      background-color: #3B4455;\n",
              "      fill: #D2E3FC;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert:hover {\n",
              "      background-color: #434B5C;\n",
              "      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n",
              "      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n",
              "      fill: #FFFFFF;\n",
              "    }\n",
              "  </style>\n",
              "\n",
              "      <script>\n",
              "        const buttonEl =\n",
              "          document.querySelector('#df-13d7ca41-8038-4189-b2b5-9351bf24a56f button.colab-df-convert');\n",
              "        buttonEl.style.display =\n",
              "          google.colab.kernel.accessAllowed ? 'block' : 'none';\n",
              "\n",
              "        async function convertToInteractive(key) {\n",
              "          const element = document.querySelector('#df-13d7ca41-8038-4189-b2b5-9351bf24a56f');\n",
              "          const dataTable =\n",
              "            await google.colab.kernel.invokeFunction('convertToInteractive',\n",
              "                                                     [key], {});\n",
              "          if (!dataTable) return;\n",
              "\n",
              "          const docLinkHtml = 'Like what you see? Visit the ' +\n",
              "            '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n",
              "            + ' to learn more about interactive tables.';\n",
              "          element.innerHTML = '';\n",
              "          dataTable['output_type'] = 'display_data';\n",
              "          await google.colab.output.renderOutput(dataTable, element);\n",
              "          const docLink = document.createElement('div');\n",
              "          docLink.innerHTML = docLinkHtml;\n",
              "          element.appendChild(docLink);\n",
              "        }\n",
              "      </script>\n",
              "    </div>\n",
              "  </div>\n",
              "  "
            ],
            "text/plain": [
              "   id  ...                                       clean_tweets\n",
              "0   1  ...   @user when a father is dysfunctional and is s...\n",
              "1   2  ...  @user @user thanks for #lyft credit i can't us...\n",
              "2   3  ...                                bihday your majesty\n",
              "3   4  ...  #model   i love u take with u all the time in ...\n",
              "4   5  ...             factsguide: society now    #motivation\n",
              "\n",
              "[5 rows x 4 columns]"
            ]
          },
          "metadata": {},
          "execution_count": 15
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "#Removing the punctuation\n",
        "df['clean_tweets'] = df['clean_tweets'].apply(lambda x: re.sub('[%s]' % re.escape(string.punctuation), '' , x))\n",
        "df['clean_tweets'] = df['clean_tweets'].str.replace('user','')\n",
        "df['clean_tweets']\n",
        "\n"
      ],
      "metadata": {
        "id": "hswyzQnasUem",
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "outputId": "77024710-f67e-451b-c777-06eddaae6576"
      },
      "execution_count": 16,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "0          when a father is dysfunctional and is so sel...\n",
              "1          thanks for lyft credit i cant use cause they...\n",
              "2                                      bihday your majesty\n",
              "3        model   i love u take with u all the time in u...\n",
              "4                     factsguide society now    motivation\n",
              "                               ...                        \n",
              "31957    ate  isz that youuuððððððð...\n",
              "31958      to see nina turner on the airwaves trying to...\n",
              "31959    listening to sad songs on a monday morning otw...\n",
              "31960     sikh temple vandalised in in calgary wso cond...\n",
              "31961                          thank you  for you follow  \n",
              "Name: clean_tweets, Length: 31962, dtype: object"
            ]
          },
          "metadata": {},
          "execution_count": 16
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "df.tail(12)"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 392
        },
        "id": "QR2gySXbMXOV",
        "outputId": "59b6cbfe-fbbd-48c6-88bb-3096d4ca95c1"
      },
      "execution_count": 17,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/html": [
              "\n",
              "  <div id=\"df-82cd71f4-04ac-4b19-94ca-3a3aca55c532\">\n",
              "    <div class=\"colab-df-container\">\n",
              "      <div>\n",
              "<style scoped>\n",
              "    .dataframe tbody tr th:only-of-type {\n",
              "        vertical-align: middle;\n",
              "    }\n",
              "\n",
              "    .dataframe tbody tr th {\n",
              "        vertical-align: top;\n",
              "    }\n",
              "\n",
              "    .dataframe thead th {\n",
              "        text-align: right;\n",
              "    }\n",
              "</style>\n",
              "<table border=\"1\" class=\"dataframe\">\n",
              "  <thead>\n",
              "    <tr style=\"text-align: right;\">\n",
              "      <th></th>\n",
              "      <th>id</th>\n",
              "      <th>label</th>\n",
              "      <th>tweet</th>\n",
              "      <th>clean_tweets</th>\n",
              "    </tr>\n",
              "  </thead>\n",
              "  <tbody>\n",
              "    <tr>\n",
              "      <th>31950</th>\n",
              "      <td>31951</td>\n",
              "      <td>0</td>\n",
              "      <td>@user you can try to 'tail' us to stop, 'butt...</td>\n",
              "      <td>you can try to tail us to stop butt were jus...</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>31951</th>\n",
              "      <td>31952</td>\n",
              "      <td>0</td>\n",
              "      <td>i've just posted a new blog: #secondlife #lone...</td>\n",
              "      <td>ive just posted a new blog secondlife lonely n...</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>31952</th>\n",
              "      <td>31953</td>\n",
              "      <td>0</td>\n",
              "      <td>@user you went too far with @user</td>\n",
              "      <td>you went too far with</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>31953</th>\n",
              "      <td>31954</td>\n",
              "      <td>0</td>\n",
              "      <td>good morning #instagram #shower #water #berlin...</td>\n",
              "      <td>good morning instagram shower water berlin ber...</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>31954</th>\n",
              "      <td>31955</td>\n",
              "      <td>0</td>\n",
              "      <td>#holiday   bull up: you will dominate your bul...</td>\n",
              "      <td>holiday   bull up you will dominate your bull ...</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>31955</th>\n",
              "      <td>31956</td>\n",
              "      <td>0</td>\n",
              "      <td>less than 2 weeks ððð¼ð¹ððµ @us...</td>\n",
              "      <td>less than 2 weeks ððð¼ð¹ððµ  ib...</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>31956</th>\n",
              "      <td>31957</td>\n",
              "      <td>0</td>\n",
              "      <td>off fishing tomorrow @user carnt wait first ti...</td>\n",
              "      <td>off fishing tomorrow  carnt wait first time in...</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>31957</th>\n",
              "      <td>31958</td>\n",
              "      <td>0</td>\n",
              "      <td>ate @user isz that youuu?ðððððð...</td>\n",
              "      <td>ate  isz that youuuððððððð...</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>31958</th>\n",
              "      <td>31959</td>\n",
              "      <td>0</td>\n",
              "      <td>to see nina turner on the airwaves trying to...</td>\n",
              "      <td>to see nina turner on the airwaves trying to...</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>31959</th>\n",
              "      <td>31960</td>\n",
              "      <td>0</td>\n",
              "      <td>listening to sad songs on a monday morning otw...</td>\n",
              "      <td>listening to sad songs on a monday morning otw...</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>31960</th>\n",
              "      <td>31961</td>\n",
              "      <td>1</td>\n",
              "      <td>@user #sikh #temple vandalised in in #calgary,...</td>\n",
              "      <td>sikh temple vandalised in in calgary wso cond...</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>31961</th>\n",
              "      <td>31962</td>\n",
              "      <td>0</td>\n",
              "      <td>thank you @user for you follow</td>\n",
              "      <td>thank you  for you follow</td>\n",
              "    </tr>\n",
              "  </tbody>\n",
              "</table>\n",
              "</div>\n",
              "      <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-82cd71f4-04ac-4b19-94ca-3a3aca55c532')\"\n",
              "              title=\"Convert this dataframe to an interactive table.\"\n",
              "              style=\"display:none;\">\n",
              "        \n",
              "  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n",
              "       width=\"24px\">\n",
              "    <path d=\"M0 0h24v24H0V0z\" fill=\"none\"/>\n",
              "    <path d=\"M18.56 5.44l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94zm-11 1L8.5 8.5l.94-2.06 2.06-.94-2.06-.94L8.5 2.5l-.94 2.06-2.06.94zm10 10l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94z\"/><path d=\"M17.41 7.96l-1.37-1.37c-.4-.4-.92-.59-1.43-.59-.52 0-1.04.2-1.43.59L10.3 9.45l-7.72 7.72c-.78.78-.78 2.05 0 2.83L4 21.41c.39.39.9.59 1.41.59.51 0 1.02-.2 1.41-.59l7.78-7.78 2.81-2.81c.8-.78.8-2.07 0-2.86zM5.41 20L4 18.59l7.72-7.72 1.47 1.35L5.41 20z\"/>\n",
              "  </svg>\n",
              "      </button>\n",
              "      \n",
              "  <style>\n",
              "    .colab-df-container {\n",
              "      display:flex;\n",
              "      flex-wrap:wrap;\n",
              "      gap: 12px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert {\n",
              "      background-color: #E8F0FE;\n",
              "      border: none;\n",
              "      border-radius: 50%;\n",
              "      cursor: pointer;\n",
              "      display: none;\n",
              "      fill: #1967D2;\n",
              "      height: 32px;\n",
              "      padding: 0 0 0 0;\n",
              "      width: 32px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert:hover {\n",
              "      background-color: #E2EBFA;\n",
              "      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n",
              "      fill: #174EA6;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert {\n",
              "      background-color: #3B4455;\n",
              "      fill: #D2E3FC;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert:hover {\n",
              "      background-color: #434B5C;\n",
              "      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n",
              "      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n",
              "      fill: #FFFFFF;\n",
              "    }\n",
              "  </style>\n",
              "\n",
              "      <script>\n",
              "        const buttonEl =\n",
              "          document.querySelector('#df-82cd71f4-04ac-4b19-94ca-3a3aca55c532 button.colab-df-convert');\n",
              "        buttonEl.style.display =\n",
              "          google.colab.kernel.accessAllowed ? 'block' : 'none';\n",
              "\n",
              "        async function convertToInteractive(key) {\n",
              "          const element = document.querySelector('#df-82cd71f4-04ac-4b19-94ca-3a3aca55c532');\n",
              "          const dataTable =\n",
              "            await google.colab.kernel.invokeFunction('convertToInteractive',\n",
              "                                                     [key], {});\n",
              "          if (!dataTable) return;\n",
              "\n",
              "          const docLinkHtml = 'Like what you see? Visit the ' +\n",
              "            '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n",
              "            + ' to learn more about interactive tables.';\n",
              "          element.innerHTML = '';\n",
              "          dataTable['output_type'] = 'display_data';\n",
              "          await google.colab.output.renderOutput(dataTable, element);\n",
              "          const docLink = document.createElement('div');\n",
              "          docLink.innerHTML = docLinkHtml;\n",
              "          element.appendChild(docLink);\n",
              "        }\n",
              "      </script>\n",
              "    </div>\n",
              "  </div>\n",
              "  "
            ],
            "text/plain": [
              "          id  ...                                       clean_tweets\n",
              "31950  31951  ...    you can try to tail us to stop butt were jus...\n",
              "31951  31952  ...  ive just posted a new blog secondlife lonely n...\n",
              "31952  31953  ...                           you went too far with   \n",
              "31953  31954  ...  good morning instagram shower water berlin ber...\n",
              "31954  31955  ...  holiday   bull up you will dominate your bull ...\n",
              "31955  31956  ...  less than 2 weeks ð\n",
              "ðð¼ð¹ððµ  ib...\n",
              "31956  31957  ...  off fishing tomorrow  carnt wait first time in...\n",
              "31957  31958  ...  ate  isz that youuuððððððð...\n",
              "31958  31959  ...    to see nina turner on the airwaves trying to...\n",
              "31959  31960  ...  listening to sad songs on a monday morning otw...\n",
              "31960  31961  ...   sikh temple vandalised in in calgary wso cond...\n",
              "31961  31962  ...                        thank you  for you follow  \n",
              "\n",
              "[12 rows x 4 columns]"
            ]
          },
          "metadata": {},
          "execution_count": 17
        }
      ]
    },
    {
      "cell_type": "markdown",
      "source": [
        "# Removing emojis"
      ],
      "metadata": {
        "id": "s7dwz0GJMk6D"
      }
    },
    {
      "cell_type": "code",
      "source": [
        "df.head(12)"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 0
        },
        "id": "XYX_jgsuCFMa",
        "outputId": "99b10a89-ec9f-4acc-c3ce-8bbb04f21f98"
      },
      "execution_count": 18,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/html": [
              "\n",
              "  <div id=\"df-04d7df90-e9c3-48a0-8de8-a89e2ec98f23\">\n",
              "    <div class=\"colab-df-container\">\n",
              "      <div>\n",
              "<style scoped>\n",
              "    .dataframe tbody tr th:only-of-type {\n",
              "        vertical-align: middle;\n",
              "    }\n",
              "\n",
              "    .dataframe tbody tr th {\n",
              "        vertical-align: top;\n",
              "    }\n",
              "\n",
              "    .dataframe thead th {\n",
              "        text-align: right;\n",
              "    }\n",
              "</style>\n",
              "<table border=\"1\" class=\"dataframe\">\n",
              "  <thead>\n",
              "    <tr style=\"text-align: right;\">\n",
              "      <th></th>\n",
              "      <th>id</th>\n",
              "      <th>label</th>\n",
              "      <th>tweet</th>\n",
              "      <th>clean_tweets</th>\n",
              "    </tr>\n",
              "  </thead>\n",
              "  <tbody>\n",
              "    <tr>\n",
              "      <th>0</th>\n",
              "      <td>1</td>\n",
              "      <td>0</td>\n",
              "      <td>@user when a father is dysfunctional and is s...</td>\n",
              "      <td>when a father is dysfunctional and is so sel...</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>1</th>\n",
              "      <td>2</td>\n",
              "      <td>0</td>\n",
              "      <td>@user @user thanks for #lyft credit i can't us...</td>\n",
              "      <td>thanks for lyft credit i cant use cause they...</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>2</th>\n",
              "      <td>3</td>\n",
              "      <td>0</td>\n",
              "      <td>bihday your majesty</td>\n",
              "      <td>bihday your majesty</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>3</th>\n",
              "      <td>4</td>\n",
              "      <td>0</td>\n",
              "      <td>#model   i love u take with u all the time in ...</td>\n",
              "      <td>model   i love u take with u all the time in u...</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>4</th>\n",
              "      <td>5</td>\n",
              "      <td>0</td>\n",
              "      <td>factsguide: society now    #motivation</td>\n",
              "      <td>factsguide society now    motivation</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>5</th>\n",
              "      <td>6</td>\n",
              "      <td>0</td>\n",
              "      <td>[2/2] huge fan fare and big talking before the...</td>\n",
              "      <td>22 huge fan fare and big talking before they l...</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>6</th>\n",
              "      <td>7</td>\n",
              "      <td>0</td>\n",
              "      <td>@user camping tomorrow @user @user @user @use...</td>\n",
              "      <td>camping tomorrow        dannyâ¦</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>7</th>\n",
              "      <td>8</td>\n",
              "      <td>0</td>\n",
              "      <td>the next school year is the year for exams.ð...</td>\n",
              "      <td>the next school year is the year for examsð¯...</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>8</th>\n",
              "      <td>9</td>\n",
              "      <td>0</td>\n",
              "      <td>we won!!! love the land!!! #allin #cavs #champ...</td>\n",
              "      <td>we won love the land allin cavs champions clev...</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>9</th>\n",
              "      <td>10</td>\n",
              "      <td>0</td>\n",
              "      <td>@user @user welcome here !  i'm   it's so #gr...</td>\n",
              "      <td>welcome here   im   its so gr8</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>10</th>\n",
              "      <td>11</td>\n",
              "      <td>0</td>\n",
              "      <td>â #ireland consumer price index (mom) climb...</td>\n",
              "      <td>â ireland consumer price index mom climbed ...</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>11</th>\n",
              "      <td>12</td>\n",
              "      <td>0</td>\n",
              "      <td>we are so selfish. #orlando #standwithorlando ...</td>\n",
              "      <td>we are so selfish orlando standwithorlando pul...</td>\n",
              "    </tr>\n",
              "  </tbody>\n",
              "</table>\n",
              "</div>\n",
              "      <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-04d7df90-e9c3-48a0-8de8-a89e2ec98f23')\"\n",
              "              title=\"Convert this dataframe to an interactive table.\"\n",
              "              style=\"display:none;\">\n",
              "        \n",
              "  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n",
              "       width=\"24px\">\n",
              "    <path d=\"M0 0h24v24H0V0z\" fill=\"none\"/>\n",
              "    <path d=\"M18.56 5.44l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94zm-11 1L8.5 8.5l.94-2.06 2.06-.94-2.06-.94L8.5 2.5l-.94 2.06-2.06.94zm10 10l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94z\"/><path d=\"M17.41 7.96l-1.37-1.37c-.4-.4-.92-.59-1.43-.59-.52 0-1.04.2-1.43.59L10.3 9.45l-7.72 7.72c-.78.78-.78 2.05 0 2.83L4 21.41c.39.39.9.59 1.41.59.51 0 1.02-.2 1.41-.59l7.78-7.78 2.81-2.81c.8-.78.8-2.07 0-2.86zM5.41 20L4 18.59l7.72-7.72 1.47 1.35L5.41 20z\"/>\n",
              "  </svg>\n",
              "      </button>\n",
              "      \n",
              "  <style>\n",
              "    .colab-df-container {\n",
              "      display:flex;\n",
              "      flex-wrap:wrap;\n",
              "      gap: 12px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert {\n",
              "      background-color: #E8F0FE;\n",
              "      border: none;\n",
              "      border-radius: 50%;\n",
              "      cursor: pointer;\n",
              "      display: none;\n",
              "      fill: #1967D2;\n",
              "      height: 32px;\n",
              "      padding: 0 0 0 0;\n",
              "      width: 32px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert:hover {\n",
              "      background-color: #E2EBFA;\n",
              "      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n",
              "      fill: #174EA6;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert {\n",
              "      background-color: #3B4455;\n",
              "      fill: #D2E3FC;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert:hover {\n",
              "      background-color: #434B5C;\n",
              "      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n",
              "      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n",
              "      fill: #FFFFFF;\n",
              "    }\n",
              "  </style>\n",
              "\n",
              "      <script>\n",
              "        const buttonEl =\n",
              "          document.querySelector('#df-04d7df90-e9c3-48a0-8de8-a89e2ec98f23 button.colab-df-convert');\n",
              "        buttonEl.style.display =\n",
              "          google.colab.kernel.accessAllowed ? 'block' : 'none';\n",
              "\n",
              "        async function convertToInteractive(key) {\n",
              "          const element = document.querySelector('#df-04d7df90-e9c3-48a0-8de8-a89e2ec98f23');\n",
              "          const dataTable =\n",
              "            await google.colab.kernel.invokeFunction('convertToInteractive',\n",
              "                                                     [key], {});\n",
              "          if (!dataTable) return;\n",
              "\n",
              "          const docLinkHtml = 'Like what you see? Visit the ' +\n",
              "            '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n",
              "            + ' to learn more about interactive tables.';\n",
              "          element.innerHTML = '';\n",
              "          dataTable['output_type'] = 'display_data';\n",
              "          await google.colab.output.renderOutput(dataTable, element);\n",
              "          const docLink = document.createElement('div');\n",
              "          docLink.innerHTML = docLinkHtml;\n",
              "          element.appendChild(docLink);\n",
              "        }\n",
              "      </script>\n",
              "    </div>\n",
              "  </div>\n",
              "  "
            ],
            "text/plain": [
              "    id  ...                                       clean_tweets\n",
              "0    1  ...    when a father is dysfunctional and is so sel...\n",
              "1    2  ...    thanks for lyft credit i cant use cause they...\n",
              "2    3  ...                                bihday your majesty\n",
              "3    4  ...  model   i love u take with u all the time in u...\n",
              "4    5  ...               factsguide society now    motivation\n",
              "5    6  ...  22 huge fan fare and big talking before they l...\n",
              "6    7  ...                   camping tomorrow        dannyâ¦\n",
              "7    8  ...  the next school year is the year for examsð¯...\n",
              "8    9  ...  we won love the land allin cavs champions clev...\n",
              "9   10  ...                   welcome here   im   its so gr8  \n",
              "10  11  ...   â ireland consumer price index mom climbed ...\n",
              "11  12  ...  we are so selfish orlando standwithorlando pul...\n",
              "\n",
              "[12 rows x 4 columns]"
            ]
          },
          "metadata": {},
          "execution_count": 18
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "def deEmojify(inputString):\n",
        "    return inputString.encode('ascii', 'ignore').decode('ascii')\n",
        "df[\"clean_tweets\"] = df[\"clean_tweets\"].apply(lambda s: deEmojify(s))\n",
        "df.head(12)"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 0
        },
        "id": "c0lYs7iRQZ87",
        "outputId": "7feedbd0-3fc2-4783-9463-62525b6a9109"
      },
      "execution_count": 19,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/html": [
              "\n",
              "  <div id=\"df-dabe9572-f6e6-4cc5-972d-920425d84ef6\">\n",
              "    <div class=\"colab-df-container\">\n",
              "      <div>\n",
              "<style scoped>\n",
              "    .dataframe tbody tr th:only-of-type {\n",
              "        vertical-align: middle;\n",
              "    }\n",
              "\n",
              "    .dataframe tbody tr th {\n",
              "        vertical-align: top;\n",
              "    }\n",
              "\n",
              "    .dataframe thead th {\n",
              "        text-align: right;\n",
              "    }\n",
              "</style>\n",
              "<table border=\"1\" class=\"dataframe\">\n",
              "  <thead>\n",
              "    <tr style=\"text-align: right;\">\n",
              "      <th></th>\n",
              "      <th>id</th>\n",
              "      <th>label</th>\n",
              "      <th>tweet</th>\n",
              "      <th>clean_tweets</th>\n",
              "    </tr>\n",
              "  </thead>\n",
              "  <tbody>\n",
              "    <tr>\n",
              "      <th>0</th>\n",
              "      <td>1</td>\n",
              "      <td>0</td>\n",
              "      <td>@user when a father is dysfunctional and is s...</td>\n",
              "      <td>when a father is dysfunctional and is so sel...</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>1</th>\n",
              "      <td>2</td>\n",
              "      <td>0</td>\n",
              "      <td>@user @user thanks for #lyft credit i can't us...</td>\n",
              "      <td>thanks for lyft credit i cant use cause they...</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>2</th>\n",
              "      <td>3</td>\n",
              "      <td>0</td>\n",
              "      <td>bihday your majesty</td>\n",
              "      <td>bihday your majesty</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>3</th>\n",
              "      <td>4</td>\n",
              "      <td>0</td>\n",
              "      <td>#model   i love u take with u all the time in ...</td>\n",
              "      <td>model   i love u take with u all the time in u...</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>4</th>\n",
              "      <td>5</td>\n",
              "      <td>0</td>\n",
              "      <td>factsguide: society now    #motivation</td>\n",
              "      <td>factsguide society now    motivation</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>5</th>\n",
              "      <td>6</td>\n",
              "      <td>0</td>\n",
              "      <td>[2/2] huge fan fare and big talking before the...</td>\n",
              "      <td>22 huge fan fare and big talking before they l...</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>6</th>\n",
              "      <td>7</td>\n",
              "      <td>0</td>\n",
              "      <td>@user camping tomorrow @user @user @user @use...</td>\n",
              "      <td>camping tomorrow        danny</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>7</th>\n",
              "      <td>8</td>\n",
              "      <td>0</td>\n",
              "      <td>the next school year is the year for exams.ð...</td>\n",
              "      <td>the next school year is the year for exams can...</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>8</th>\n",
              "      <td>9</td>\n",
              "      <td>0</td>\n",
              "      <td>we won!!! love the land!!! #allin #cavs #champ...</td>\n",
              "      <td>we won love the land allin cavs champions clev...</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>9</th>\n",
              "      <td>10</td>\n",
              "      <td>0</td>\n",
              "      <td>@user @user welcome here !  i'm   it's so #gr...</td>\n",
              "      <td>welcome here   im   its so gr8</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>10</th>\n",
              "      <td>11</td>\n",
              "      <td>0</td>\n",
              "      <td>â #ireland consumer price index (mom) climb...</td>\n",
              "      <td>ireland consumer price index mom climbed fro...</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>11</th>\n",
              "      <td>12</td>\n",
              "      <td>0</td>\n",
              "      <td>we are so selfish. #orlando #standwithorlando ...</td>\n",
              "      <td>we are so selfish orlando standwithorlando pul...</td>\n",
              "    </tr>\n",
              "  </tbody>\n",
              "</table>\n",
              "</div>\n",
              "      <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-dabe9572-f6e6-4cc5-972d-920425d84ef6')\"\n",
              "              title=\"Convert this dataframe to an interactive table.\"\n",
              "              style=\"display:none;\">\n",
              "        \n",
              "  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n",
              "       width=\"24px\">\n",
              "    <path d=\"M0 0h24v24H0V0z\" fill=\"none\"/>\n",
              "    <path d=\"M18.56 5.44l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94zm-11 1L8.5 8.5l.94-2.06 2.06-.94-2.06-.94L8.5 2.5l-.94 2.06-2.06.94zm10 10l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94z\"/><path d=\"M17.41 7.96l-1.37-1.37c-.4-.4-.92-.59-1.43-.59-.52 0-1.04.2-1.43.59L10.3 9.45l-7.72 7.72c-.78.78-.78 2.05 0 2.83L4 21.41c.39.39.9.59 1.41.59.51 0 1.02-.2 1.41-.59l7.78-7.78 2.81-2.81c.8-.78.8-2.07 0-2.86zM5.41 20L4 18.59l7.72-7.72 1.47 1.35L5.41 20z\"/>\n",
              "  </svg>\n",
              "      </button>\n",
              "      \n",
              "  <style>\n",
              "    .colab-df-container {\n",
              "      display:flex;\n",
              "      flex-wrap:wrap;\n",
              "      gap: 12px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert {\n",
              "      background-color: #E8F0FE;\n",
              "      border: none;\n",
              "      border-radius: 50%;\n",
              "      cursor: pointer;\n",
              "      display: none;\n",
              "      fill: #1967D2;\n",
              "      height: 32px;\n",
              "      padding: 0 0 0 0;\n",
              "      width: 32px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert:hover {\n",
              "      background-color: #E2EBFA;\n",
              "      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n",
              "      fill: #174EA6;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert {\n",
              "      background-color: #3B4455;\n",
              "      fill: #D2E3FC;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert:hover {\n",
              "      background-color: #434B5C;\n",
              "      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n",
              "      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n",
              "      fill: #FFFFFF;\n",
              "    }\n",
              "  </style>\n",
              "\n",
              "      <script>\n",
              "        const buttonEl =\n",
              "          document.querySelector('#df-dabe9572-f6e6-4cc5-972d-920425d84ef6 button.colab-df-convert');\n",
              "        buttonEl.style.display =\n",
              "          google.colab.kernel.accessAllowed ? 'block' : 'none';\n",
              "\n",
              "        async function convertToInteractive(key) {\n",
              "          const element = document.querySelector('#df-dabe9572-f6e6-4cc5-972d-920425d84ef6');\n",
              "          const dataTable =\n",
              "            await google.colab.kernel.invokeFunction('convertToInteractive',\n",
              "                                                     [key], {});\n",
              "          if (!dataTable) return;\n",
              "\n",
              "          const docLinkHtml = 'Like what you see? Visit the ' +\n",
              "            '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n",
              "            + ' to learn more about interactive tables.';\n",
              "          element.innerHTML = '';\n",
              "          dataTable['output_type'] = 'display_data';\n",
              "          await google.colab.output.renderOutput(dataTable, element);\n",
              "          const docLink = document.createElement('div');\n",
              "          docLink.innerHTML = docLinkHtml;\n",
              "          element.appendChild(docLink);\n",
              "        }\n",
              "      </script>\n",
              "    </div>\n",
              "  </div>\n",
              "  "
            ],
            "text/plain": [
              "    id  ...                                       clean_tweets\n",
              "0    1  ...    when a father is dysfunctional and is so sel...\n",
              "1    2  ...    thanks for lyft credit i cant use cause they...\n",
              "2    3  ...                                bihday your majesty\n",
              "3    4  ...  model   i love u take with u all the time in u...\n",
              "4    5  ...               factsguide society now    motivation\n",
              "5    6  ...  22 huge fan fare and big talking before they l...\n",
              "6    7  ...                      camping tomorrow        danny\n",
              "7    8  ...  the next school year is the year for exams can...\n",
              "8    9  ...  we won love the land allin cavs champions clev...\n",
              "9   10  ...                   welcome here   im   its so gr8  \n",
              "10  11  ...    ireland consumer price index mom climbed fro...\n",
              "11  12  ...  we are so selfish orlando standwithorlando pul...\n",
              "\n",
              "[12 rows x 4 columns]"
            ]
          },
          "metadata": {},
          "execution_count": 19
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "df.head(12)"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 0
        },
        "id": "4jWsDiGMFt36",
        "outputId": "c9f0eee6-4a78-4e6f-d659-5df262636424"
      },
      "execution_count": 20,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/html": [
              "\n",
              "  <div id=\"df-f9bacdff-bc54-43db-af4b-67ce9abc97b2\">\n",
              "    <div class=\"colab-df-container\">\n",
              "      <div>\n",
              "<style scoped>\n",
              "    .dataframe tbody tr th:only-of-type {\n",
              "        vertical-align: middle;\n",
              "    }\n",
              "\n",
              "    .dataframe tbody tr th {\n",
              "        vertical-align: top;\n",
              "    }\n",
              "\n",
              "    .dataframe thead th {\n",
              "        text-align: right;\n",
              "    }\n",
              "</style>\n",
              "<table border=\"1\" class=\"dataframe\">\n",
              "  <thead>\n",
              "    <tr style=\"text-align: right;\">\n",
              "      <th></th>\n",
              "      <th>id</th>\n",
              "      <th>label</th>\n",
              "      <th>tweet</th>\n",
              "      <th>clean_tweets</th>\n",
              "    </tr>\n",
              "  </thead>\n",
              "  <tbody>\n",
              "    <tr>\n",
              "      <th>0</th>\n",
              "      <td>1</td>\n",
              "      <td>0</td>\n",
              "      <td>@user when a father is dysfunctional and is s...</td>\n",
              "      <td>when a father is dysfunctional and is so sel...</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>1</th>\n",
              "      <td>2</td>\n",
              "      <td>0</td>\n",
              "      <td>@user @user thanks for #lyft credit i can't us...</td>\n",
              "      <td>thanks for lyft credit i cant use cause they...</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>2</th>\n",
              "      <td>3</td>\n",
              "      <td>0</td>\n",
              "      <td>bihday your majesty</td>\n",
              "      <td>bihday your majesty</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>3</th>\n",
              "      <td>4</td>\n",
              "      <td>0</td>\n",
              "      <td>#model   i love u take with u all the time in ...</td>\n",
              "      <td>model   i love u take with u all the time in u...</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>4</th>\n",
              "      <td>5</td>\n",
              "      <td>0</td>\n",
              "      <td>factsguide: society now    #motivation</td>\n",
              "      <td>factsguide society now    motivation</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>5</th>\n",
              "      <td>6</td>\n",
              "      <td>0</td>\n",
              "      <td>[2/2] huge fan fare and big talking before the...</td>\n",
              "      <td>22 huge fan fare and big talking before they l...</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>6</th>\n",
              "      <td>7</td>\n",
              "      <td>0</td>\n",
              "      <td>@user camping tomorrow @user @user @user @use...</td>\n",
              "      <td>camping tomorrow        danny</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>7</th>\n",
              "      <td>8</td>\n",
              "      <td>0</td>\n",
              "      <td>the next school year is the year for exams.ð...</td>\n",
              "      <td>the next school year is the year for exams can...</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>8</th>\n",
              "      <td>9</td>\n",
              "      <td>0</td>\n",
              "      <td>we won!!! love the land!!! #allin #cavs #champ...</td>\n",
              "      <td>we won love the land allin cavs champions clev...</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>9</th>\n",
              "      <td>10</td>\n",
              "      <td>0</td>\n",
              "      <td>@user @user welcome here !  i'm   it's so #gr...</td>\n",
              "      <td>welcome here   im   its so gr8</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>10</th>\n",
              "      <td>11</td>\n",
              "      <td>0</td>\n",
              "      <td>â #ireland consumer price index (mom) climb...</td>\n",
              "      <td>ireland consumer price index mom climbed fro...</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>11</th>\n",
              "      <td>12</td>\n",
              "      <td>0</td>\n",
              "      <td>we are so selfish. #orlando #standwithorlando ...</td>\n",
              "      <td>we are so selfish orlando standwithorlando pul...</td>\n",
              "    </tr>\n",
              "  </tbody>\n",
              "</table>\n",
              "</div>\n",
              "      <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-f9bacdff-bc54-43db-af4b-67ce9abc97b2')\"\n",
              "              title=\"Convert this dataframe to an interactive table.\"\n",
              "              style=\"display:none;\">\n",
              "        \n",
              "  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n",
              "       width=\"24px\">\n",
              "    <path d=\"M0 0h24v24H0V0z\" fill=\"none\"/>\n",
              "    <path d=\"M18.56 5.44l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94zm-11 1L8.5 8.5l.94-2.06 2.06-.94-2.06-.94L8.5 2.5l-.94 2.06-2.06.94zm10 10l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94z\"/><path d=\"M17.41 7.96l-1.37-1.37c-.4-.4-.92-.59-1.43-.59-.52 0-1.04.2-1.43.59L10.3 9.45l-7.72 7.72c-.78.78-.78 2.05 0 2.83L4 21.41c.39.39.9.59 1.41.59.51 0 1.02-.2 1.41-.59l7.78-7.78 2.81-2.81c.8-.78.8-2.07 0-2.86zM5.41 20L4 18.59l7.72-7.72 1.47 1.35L5.41 20z\"/>\n",
              "  </svg>\n",
              "      </button>\n",
              "      \n",
              "  <style>\n",
              "    .colab-df-container {\n",
              "      display:flex;\n",
              "      flex-wrap:wrap;\n",
              "      gap: 12px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert {\n",
              "      background-color: #E8F0FE;\n",
              "      border: none;\n",
              "      border-radius: 50%;\n",
              "      cursor: pointer;\n",
              "      display: none;\n",
              "      fill: #1967D2;\n",
              "      height: 32px;\n",
              "      padding: 0 0 0 0;\n",
              "      width: 32px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert:hover {\n",
              "      background-color: #E2EBFA;\n",
              "      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n",
              "      fill: #174EA6;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert {\n",
              "      background-color: #3B4455;\n",
              "      fill: #D2E3FC;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert:hover {\n",
              "      background-color: #434B5C;\n",
              "      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n",
              "      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n",
              "      fill: #FFFFFF;\n",
              "    }\n",
              "  </style>\n",
              "\n",
              "      <script>\n",
              "        const buttonEl =\n",
              "          document.querySelector('#df-f9bacdff-bc54-43db-af4b-67ce9abc97b2 button.colab-df-convert');\n",
              "        buttonEl.style.display =\n",
              "          google.colab.kernel.accessAllowed ? 'block' : 'none';\n",
              "\n",
              "        async function convertToInteractive(key) {\n",
              "          const element = document.querySelector('#df-f9bacdff-bc54-43db-af4b-67ce9abc97b2');\n",
              "          const dataTable =\n",
              "            await google.colab.kernel.invokeFunction('convertToInteractive',\n",
              "                                                     [key], {});\n",
              "          if (!dataTable) return;\n",
              "\n",
              "          const docLinkHtml = 'Like what you see? Visit the ' +\n",
              "            '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n",
              "            + ' to learn more about interactive tables.';\n",
              "          element.innerHTML = '';\n",
              "          dataTable['output_type'] = 'display_data';\n",
              "          await google.colab.output.renderOutput(dataTable, element);\n",
              "          const docLink = document.createElement('div');\n",
              "          docLink.innerHTML = docLinkHtml;\n",
              "          element.appendChild(docLink);\n",
              "        }\n",
              "      </script>\n",
              "    </div>\n",
              "  </div>\n",
              "  "
            ],
            "text/plain": [
              "    id  ...                                       clean_tweets\n",
              "0    1  ...    when a father is dysfunctional and is so sel...\n",
              "1    2  ...    thanks for lyft credit i cant use cause they...\n",
              "2    3  ...                                bihday your majesty\n",
              "3    4  ...  model   i love u take with u all the time in u...\n",
              "4    5  ...               factsguide society now    motivation\n",
              "5    6  ...  22 huge fan fare and big talking before they l...\n",
              "6    7  ...                      camping tomorrow        danny\n",
              "7    8  ...  the next school year is the year for exams can...\n",
              "8    9  ...  we won love the land allin cavs champions clev...\n",
              "9   10  ...                   welcome here   im   its so gr8  \n",
              "10  11  ...    ireland consumer price index mom climbed fro...\n",
              "11  12  ...  we are so selfish orlando standwithorlando pul...\n",
              "\n",
              "[12 rows x 4 columns]"
            ]
          },
          "metadata": {},
          "execution_count": 20
        }
      ]
    },
    {
      "cell_type": "markdown",
      "source": [
        "# Begin Tokenization"
      ],
      "metadata": {
        "id": "0JrpPl8lTagb"
      }
    },
    {
      "cell_type": "code",
      "source": [
        "# We will also download and import nlkt which is a tokenizer. \n",
        "# This library will help us break (messages) into individual linguistic units i.e. words.\n",
        "#\n",
        "# Applying the tokenization\n",
        "import nltk\n",
        "from nltk.corpus import stopwords\n",
        "nltk.download('stopwords')\n",
        "stopwords = stopwords.words('english')\n",
        "print(stopwords)\n",
        "nltk.download('punkt')"
      ],
      "metadata": {
        "id": "ZLoUNdGcsreu",
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "outputId": "ae594676-420e-49bc-dd09-f7652a82f3f9"
      },
      "execution_count": 60,
      "outputs": [
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "[nltk_data] Downloading package stopwords to /root/nltk_data...\n",
            "[nltk_data]   Package stopwords is already up-to-date!\n",
            "['i', 'me', 'my', 'myself', 'we', 'our', 'ours', 'ourselves', 'you', \"you're\", \"you've\", \"you'll\", \"you'd\", 'your', 'yours', 'yourself', 'yourselves', 'he', 'him', 'his', 'himself', 'she', \"she's\", 'her', 'hers', 'herself', 'it', \"it's\", 'its', 'itself', 'they', 'them', 'their', 'theirs', 'themselves', 'what', 'which', 'who', 'whom', 'this', 'that', \"that'll\", 'these', 'those', 'am', 'is', 'are', 'was', 'were', 'be', 'been', 'being', 'have', 'has', 'had', 'having', 'do', 'does', 'did', 'doing', 'a', 'an', 'the', 'and', 'but', 'if', 'or', 'because', 'as', 'until', 'while', 'of', 'at', 'by', 'for', 'with', 'about', 'against', 'between', 'into', 'through', 'during', 'before', 'after', 'above', 'below', 'to', 'from', 'up', 'down', 'in', 'out', 'on', 'off', 'over', 'under', 'again', 'further', 'then', 'once', 'here', 'there', 'when', 'where', 'why', 'how', 'all', 'any', 'both', 'each', 'few', 'more', 'most', 'other', 'some', 'such', 'no', 'nor', 'not', 'only', 'own', 'same', 'so', 'than', 'too', 'very', 's', 't', 'can', 'will', 'just', 'don', \"don't\", 'should', \"should've\", 'now', 'd', 'll', 'm', 'o', 're', 've', 'y', 'ain', 'aren', \"aren't\", 'couldn', \"couldn't\", 'didn', \"didn't\", 'doesn', \"doesn't\", 'hadn', \"hadn't\", 'hasn', \"hasn't\", 'haven', \"haven't\", 'isn', \"isn't\", 'ma', 'mightn', \"mightn't\", 'mustn', \"mustn't\", 'needn', \"needn't\", 'shan', \"shan't\", 'shouldn', \"shouldn't\", 'wasn', \"wasn't\", 'weren', \"weren't\", 'won', \"won't\", 'wouldn', \"wouldn't\"]\n",
            "[nltk_data] Downloading package punkt to /root/nltk_data...\n",
            "[nltk_data]   Package punkt is already up-to-date!\n"
          ]
        },
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "True"
            ]
          },
          "metadata": {},
          "execution_count": 60
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "#adding the list of stopwords\n",
        "CustomListofWordstoExclude = ['amp', 'rt', 'im', 'u', 'ur'] \n",
        "stopwords.extend(CustomListofWordstoExclude)"
      ],
      "metadata": {
        "id": "YGumMr1BoZMA"
      },
      "execution_count": 63,
      "outputs": []
    },
    {
      "cell_type": "code",
      "source": [
        "# to remove stop words\n",
        "df['clean_tweets'] = df['clean_tweets'].apply(lambda x: ' '.join([word for word in x.split() if word not in (stopwords)]))\n"
      ],
      "metadata": {
        "id": "RRAO9XA7C419"
      },
      "execution_count": 65,
      "outputs": []
    },
    {
      "cell_type": "code",
      "source": [
        ""
      ],
      "metadata": {
        "id": "IXdxMfbfm8Jd"
      },
      "execution_count": null,
      "outputs": []
    },
    {
      "cell_type": "code",
      "source": [
        "#tweets_space = [tweet for word in df.split() if word.lower() not in sw_spacy]\n",
        "df.head(60)"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 1000
        },
        "id": "DsTxgRxuFbRz",
        "outputId": "9a9b701f-b7b5-464f-b8ca-eb58c76c502d"
      },
      "execution_count": 66,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/html": [
              "\n",
              "  <div id=\"df-6bf96e9a-de76-4985-85ed-baf75591f75b\">\n",
              "    <div class=\"colab-df-container\">\n",
              "      <div>\n",
              "<style scoped>\n",
              "    .dataframe tbody tr th:only-of-type {\n",
              "        vertical-align: middle;\n",
              "    }\n",
              "\n",
              "    .dataframe tbody tr th {\n",
              "        vertical-align: top;\n",
              "    }\n",
              "\n",
              "    .dataframe thead th {\n",
              "        text-align: right;\n",
              "    }\n",
              "</style>\n",
              "<table border=\"1\" class=\"dataframe\">\n",
              "  <thead>\n",
              "    <tr style=\"text-align: right;\">\n",
              "      <th></th>\n",
              "      <th>id</th>\n",
              "      <th>label</th>\n",
              "      <th>tweet</th>\n",
              "      <th>clean_tweets</th>\n",
              "    </tr>\n",
              "  </thead>\n",
              "  <tbody>\n",
              "    <tr>\n",
              "      <th>0</th>\n",
              "      <td>1</td>\n",
              "      <td>0</td>\n",
              "      <td>@user when a father is dysfunctional and is s...</td>\n",
              "      <td>father dysfunctional selfish drag kid dysfunct...</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>1</th>\n",
              "      <td>2</td>\n",
              "      <td>0</td>\n",
              "      <td>@user @user thanks for #lyft credit i can't us...</td>\n",
              "      <td>thank lyft credit cant use cause dont offer wh...</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>2</th>\n",
              "      <td>3</td>\n",
              "      <td>0</td>\n",
              "      <td>bihday your majesty</td>\n",
              "      <td>bihday majesty</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>3</th>\n",
              "      <td>4</td>\n",
              "      <td>0</td>\n",
              "      <td>#model   i love u take with u all the time in ...</td>\n",
              "      <td>model love take time</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>4</th>\n",
              "      <td>5</td>\n",
              "      <td>0</td>\n",
              "      <td>factsguide: society now    #motivation</td>\n",
              "      <td>factsguide society motivation</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>5</th>\n",
              "      <td>6</td>\n",
              "      <td>0</td>\n",
              "      <td>[2/2] huge fan fare and big talking before the...</td>\n",
              "      <td>22 huge fan fare big talk leave chaos pay disp...</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>6</th>\n",
              "      <td>7</td>\n",
              "      <td>0</td>\n",
              "      <td>@user camping tomorrow @user @user @user @use...</td>\n",
              "      <td>camp tomorrow danny</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>7</th>\n",
              "      <td>8</td>\n",
              "      <td>0</td>\n",
              "      <td>the next school year is the year for exams.ð...</td>\n",
              "      <td>next school year year exams cant think school ...</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>8</th>\n",
              "      <td>9</td>\n",
              "      <td>0</td>\n",
              "      <td>we won!!! love the land!!! #allin #cavs #champ...</td>\n",
              "      <td>love land allin cavs champion cleveland clevel...</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>9</th>\n",
              "      <td>10</td>\n",
              "      <td>0</td>\n",
              "      <td>@user @user welcome here !  i'm   it's so #gr...</td>\n",
              "      <td>welcome gr8</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>10</th>\n",
              "      <td>11</td>\n",
              "      <td>0</td>\n",
              "      <td>â #ireland consumer price index (mom) climb...</td>\n",
              "      <td>ireland consumer price index mom climb previou...</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>11</th>\n",
              "      <td>12</td>\n",
              "      <td>0</td>\n",
              "      <td>we are so selfish. #orlando #standwithorlando ...</td>\n",
              "      <td>selfish orlando standwithorlando pulseshooting...</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>12</th>\n",
              "      <td>13</td>\n",
              "      <td>0</td>\n",
              "      <td>i get to see my daddy today!!   #80days #getti...</td>\n",
              "      <td>get see daddy today 80days gettingfed</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>13</th>\n",
              "      <td>14</td>\n",
              "      <td>1</td>\n",
              "      <td>@user #cnn calls #michigan middle school 'buil...</td>\n",
              "      <td>cnn call michigan middle school build wall cha...</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>14</th>\n",
              "      <td>15</td>\n",
              "      <td>1</td>\n",
              "      <td>no comment!  in #australia   #opkillingbay #se...</td>\n",
              "      <td>comment australia opkillingbay seashepherd hel...</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>15</th>\n",
              "      <td>16</td>\n",
              "      <td>0</td>\n",
              "      <td>ouch...junior is angryð#got7 #junior #yugyo...</td>\n",
              "      <td>ouchjunior angrygot7 junior yugyoem omg</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>16</th>\n",
              "      <td>17</td>\n",
              "      <td>0</td>\n",
              "      <td>i am thankful for having a paner. #thankful #p...</td>\n",
              "      <td>thankful paner thankful positive</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>17</th>\n",
              "      <td>18</td>\n",
              "      <td>1</td>\n",
              "      <td>retweet if you agree!</td>\n",
              "      <td>retweet agree</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>18</th>\n",
              "      <td>19</td>\n",
              "      <td>0</td>\n",
              "      <td>its #friday! ð smiles all around via ig use...</td>\n",
              "      <td>friday smile around via ig cookies make people</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>19</th>\n",
              "      <td>20</td>\n",
              "      <td>0</td>\n",
              "      <td>as we all know, essential oils are not made of...</td>\n",
              "      <td>know essential oil make chemicals</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>20</th>\n",
              "      <td>21</td>\n",
              "      <td>0</td>\n",
              "      <td>#euro2016 people blaming ha for conceded goal ...</td>\n",
              "      <td>euro2016 people blame ha concede goal fat roon...</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>21</th>\n",
              "      <td>22</td>\n",
              "      <td>0</td>\n",
              "      <td>sad little dude..   #badday #coneofshame #cats...</td>\n",
              "      <td>sad little dude badday coneofshame cat piss fu...</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>22</th>\n",
              "      <td>23</td>\n",
              "      <td>0</td>\n",
              "      <td>product of the day: happy man #wine tool  who'...</td>\n",
              "      <td>product day happy man wine tool whos weekend t...</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>23</th>\n",
              "      <td>24</td>\n",
              "      <td>1</td>\n",
              "      <td>@user @user lumpy says i am a . prove it lumpy.</td>\n",
              "      <td>lumpy say prove lumpy</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>24</th>\n",
              "      <td>25</td>\n",
              "      <td>0</td>\n",
              "      <td>@user #tgif   #ff to my #gamedev #indiedev #i...</td>\n",
              "      <td>tgif ff gamedev indiedev indiegamedev squad</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>25</th>\n",
              "      <td>26</td>\n",
              "      <td>0</td>\n",
              "      <td>beautiful sign by vendor 80 for $45.00!! #upsi...</td>\n",
              "      <td>beautiful sign vendor 80 4500 upsideofflorida ...</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>26</th>\n",
              "      <td>27</td>\n",
              "      <td>0</td>\n",
              "      <td>@user all #smiles when #media is   !! ðð...</td>\n",
              "      <td>smile media pressconference antalya turkey sun...</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>27</th>\n",
              "      <td>28</td>\n",
              "      <td>0</td>\n",
              "      <td>we had a great panel on the mediatization of t...</td>\n",
              "      <td>great panel mediatization public service ica16</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>28</th>\n",
              "      <td>29</td>\n",
              "      <td>0</td>\n",
              "      <td>happy father's day @user ðððð</td>\n",
              "      <td>happy father day</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>29</th>\n",
              "      <td>30</td>\n",
              "      <td>0</td>\n",
              "      <td>50 people went to nightclub to have a good nig...</td>\n",
              "      <td>50 people go nightclub good night 1 man action...</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>30</th>\n",
              "      <td>31</td>\n",
              "      <td>0</td>\n",
              "      <td>i have never had a chance to vote for a presid...</td>\n",
              "      <td>never chance vote presidential candidate excit...</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>31</th>\n",
              "      <td>32</td>\n",
              "      <td>0</td>\n",
              "      <td>#alohafriday #time does #not #exist #positiv...</td>\n",
              "      <td>alohafriday time exist positivevibes hawaiian</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>32</th>\n",
              "      <td>33</td>\n",
              "      <td>0</td>\n",
              "      <td>@user rip to the fellow nohern ireland fan wh...</td>\n",
              "      <td>rip fellow nohern ireland fan sadley pass away...</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>33</th>\n",
              "      <td>34</td>\n",
              "      <td>0</td>\n",
              "      <td>it was a hard monday due to cloudy weather. di...</td>\n",
              "      <td>hard monday due cloudy weather disable oxygen ...</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>34</th>\n",
              "      <td>35</td>\n",
              "      <td>1</td>\n",
              "      <td>it's unbelievable that in the 21st century we'...</td>\n",
              "      <td>unbelievable 21st century wed need something l...</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>35</th>\n",
              "      <td>36</td>\n",
              "      <td>0</td>\n",
              "      <td>#taylorswift1989   bull up: you will dominate ...</td>\n",
              "      <td>taylorswift1989 bull dominate bull direct what...</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>36</th>\n",
              "      <td>37</td>\n",
              "      <td>0</td>\n",
              "      <td>morning~~ #travelingram #dalat   #ripinkylife</td>\n",
              "      <td>morning travelingram dalat ripinkylife</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>37</th>\n",
              "      <td>38</td>\n",
              "      <td>0</td>\n",
              "      <td>@user once more only one word tells it all: #p...</td>\n",
              "      <td>one word tell photoshop enoughisenough dontpho...</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>38</th>\n",
              "      <td>39</td>\n",
              "      <td>0</td>\n",
              "      <td>oh, #cedarpoint. waited 2 hours in the valravn...</td>\n",
              "      <td>oh cedarpoint wait 2 hours valravn line stop w...</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>39</th>\n",
              "      <td>40</td>\n",
              "      <td>0</td>\n",
              "      <td>i am thankful for sunshine. #thankful #positiv...</td>\n",
              "      <td>thankful sunshine thankful positive</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>40</th>\n",
              "      <td>41</td>\n",
              "      <td>0</td>\n",
              "      <td>when you finally finish a book you've been wor...</td>\n",
              "      <td>finally finish book youve work awhile bookworm...</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>41</th>\n",
              "      <td>42</td>\n",
              "      <td>0</td>\n",
              "      <td>yup, being a knicks fan is hard, so its easier...</td>\n",
              "      <td>yup knicks fan hard easier nba fan playoffs ro...</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>42</th>\n",
              "      <td>43</td>\n",
              "      <td>0</td>\n",
              "      <td>there is life after social networking. embrace...</td>\n",
              "      <td>life social network embrace day</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>43</th>\n",
              "      <td>44</td>\n",
              "      <td>0</td>\n",
              "      <td>my mom shares the same bihday as @user   bihda...</td>\n",
              "      <td>mom share bihday bihday snake see weekend</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>44</th>\n",
              "      <td>45</td>\n",
              "      <td>0</td>\n",
              "      <td>lovely echeveria blooms#flowers #grow #gardeni...</td>\n",
              "      <td>lovely echeveria bloomsflowers grow garden iph...</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>45</th>\n",
              "      <td>46</td>\n",
              "      <td>0</td>\n",
              "      <td>i am amazing. #i_am #positive #affirmation</td>\n",
              "      <td>amaze iam positive affirmation</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>46</th>\n",
              "      <td>47</td>\n",
              "      <td>0</td>\n",
              "      <td>#model   i love u take with u all the time in ...</td>\n",
              "      <td>model love take time</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>47</th>\n",
              "      <td>48</td>\n",
              "      <td>0</td>\n",
              "      <td>#whenever im   and #something goes #wrong  |</td>\n",
              "      <td>whenever something go wrong</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>48</th>\n",
              "      <td>49</td>\n",
              "      <td>0</td>\n",
              "      <td>feeling blue #illustration</td>\n",
              "      <td>feel blue illustration</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>49</th>\n",
              "      <td>50</td>\n",
              "      <td>0</td>\n",
              "      <td>the best pa about life is knowing who you are!...</td>\n",
              "      <td>best pa life know</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>50</th>\n",
              "      <td>51</td>\n",
              "      <td>0</td>\n",
              "      <td>#abc2020 getting ready 2 remove the victums fr...</td>\n",
              "      <td>abc2020 get ready 2 remove victums frm pulsecl...</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>51</th>\n",
              "      <td>52</td>\n",
              "      <td>0</td>\n",
              "      <td>for her #bihday we got her a #nose #job @user ...</td>\n",
              "      <td>bihday get nose job bihday petunia love</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>52</th>\n",
              "      <td>53</td>\n",
              "      <td>0</td>\n",
              "      <td>off to concelebrate at the #albanpilgrimage fo...</td>\n",
              "      <td>concelebrate albanpilgrimage first time</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>53</th>\n",
              "      <td>54</td>\n",
              "      <td>0</td>\n",
              "      <td>@user let the scum-baggery begin.....</td>\n",
              "      <td>let scumbaggery begin</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>54</th>\n",
              "      <td>55</td>\n",
              "      <td>0</td>\n",
              "      <td>thank you! ðð super love it! â¤ï¸ zpam...</td>\n",
              "      <td>thank super love zpamdelacruz wed dolores capa...</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>55</th>\n",
              "      <td>56</td>\n",
              "      <td>0</td>\n",
              "      <td>a scourge on those playing baroque pieces on p...</td>\n",
              "      <td>scourge play baroque piece piano beyond belief</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>56</th>\n",
              "      <td>57</td>\n",
              "      <td>1</td>\n",
              "      <td>@user lets fight against  #love #peace</td>\n",
              "      <td>let fight love peace</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>57</th>\n",
              "      <td>58</td>\n",
              "      <td>0</td>\n",
              "      <td>happy fatherâs day, mr. rayos #video   #fat...</td>\n",
              "      <td>happy father day mr rayos video father day ray...</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>58</th>\n",
              "      <td>59</td>\n",
              "      <td>0</td>\n",
              "      <td>@user ascot times with this babe â¤ï¸â¤ï¸...</td>\n",
              "      <td>ascot time babe ascot fashion monochrome style...</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>59</th>\n",
              "      <td>60</td>\n",
              "      <td>0</td>\n",
              "      <td>the weekend..is here!!ððððð #se...</td>\n",
              "      <td>weekendis selfie yolo xoxo like4like</td>\n",
              "    </tr>\n",
              "  </tbody>\n",
              "</table>\n",
              "</div>\n",
              "      <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-6bf96e9a-de76-4985-85ed-baf75591f75b')\"\n",
              "              title=\"Convert this dataframe to an interactive table.\"\n",
              "              style=\"display:none;\">\n",
              "        \n",
              "  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n",
              "       width=\"24px\">\n",
              "    <path d=\"M0 0h24v24H0V0z\" fill=\"none\"/>\n",
              "    <path d=\"M18.56 5.44l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94zm-11 1L8.5 8.5l.94-2.06 2.06-.94-2.06-.94L8.5 2.5l-.94 2.06-2.06.94zm10 10l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94z\"/><path d=\"M17.41 7.96l-1.37-1.37c-.4-.4-.92-.59-1.43-.59-.52 0-1.04.2-1.43.59L10.3 9.45l-7.72 7.72c-.78.78-.78 2.05 0 2.83L4 21.41c.39.39.9.59 1.41.59.51 0 1.02-.2 1.41-.59l7.78-7.78 2.81-2.81c.8-.78.8-2.07 0-2.86zM5.41 20L4 18.59l7.72-7.72 1.47 1.35L5.41 20z\"/>\n",
              "  </svg>\n",
              "      </button>\n",
              "      \n",
              "  <style>\n",
              "    .colab-df-container {\n",
              "      display:flex;\n",
              "      flex-wrap:wrap;\n",
              "      gap: 12px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert {\n",
              "      background-color: #E8F0FE;\n",
              "      border: none;\n",
              "      border-radius: 50%;\n",
              "      cursor: pointer;\n",
              "      display: none;\n",
              "      fill: #1967D2;\n",
              "      height: 32px;\n",
              "      padding: 0 0 0 0;\n",
              "      width: 32px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert:hover {\n",
              "      background-color: #E2EBFA;\n",
              "      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n",
              "      fill: #174EA6;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert {\n",
              "      background-color: #3B4455;\n",
              "      fill: #D2E3FC;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert:hover {\n",
              "      background-color: #434B5C;\n",
              "      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n",
              "      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n",
              "      fill: #FFFFFF;\n",
              "    }\n",
              "  </style>\n",
              "\n",
              "      <script>\n",
              "        const buttonEl =\n",
              "          document.querySelector('#df-6bf96e9a-de76-4985-85ed-baf75591f75b button.colab-df-convert');\n",
              "        buttonEl.style.display =\n",
              "          google.colab.kernel.accessAllowed ? 'block' : 'none';\n",
              "\n",
              "        async function convertToInteractive(key) {\n",
              "          const element = document.querySelector('#df-6bf96e9a-de76-4985-85ed-baf75591f75b');\n",
              "          const dataTable =\n",
              "            await google.colab.kernel.invokeFunction('convertToInteractive',\n",
              "                                                     [key], {});\n",
              "          if (!dataTable) return;\n",
              "\n",
              "          const docLinkHtml = 'Like what you see? Visit the ' +\n",
              "            '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n",
              "            + ' to learn more about interactive tables.';\n",
              "          element.innerHTML = '';\n",
              "          dataTable['output_type'] = 'display_data';\n",
              "          await google.colab.output.renderOutput(dataTable, element);\n",
              "          const docLink = document.createElement('div');\n",
              "          docLink.innerHTML = docLinkHtml;\n",
              "          element.appendChild(docLink);\n",
              "        }\n",
              "      </script>\n",
              "    </div>\n",
              "  </div>\n",
              "  "
            ],
            "text/plain": [
              "    id  ...                                       clean_tweets\n",
              "0    1  ...  father dysfunctional selfish drag kid dysfunct...\n",
              "1    2  ...  thank lyft credit cant use cause dont offer wh...\n",
              "2    3  ...                                     bihday majesty\n",
              "3    4  ...                               model love take time\n",
              "4    5  ...                      factsguide society motivation\n",
              "5    6  ...  22 huge fan fare big talk leave chaos pay disp...\n",
              "6    7  ...                                camp tomorrow danny\n",
              "7    8  ...  next school year year exams cant think school ...\n",
              "8    9  ...  love land allin cavs champion cleveland clevel...\n",
              "9   10  ...                                        welcome gr8\n",
              "10  11  ...  ireland consumer price index mom climb previou...\n",
              "11  12  ...  selfish orlando standwithorlando pulseshooting...\n",
              "12  13  ...              get see daddy today 80days gettingfed\n",
              "13  14  ...  cnn call michigan middle school build wall cha...\n",
              "14  15  ...  comment australia opkillingbay seashepherd hel...\n",
              "15  16  ...            ouchjunior angrygot7 junior yugyoem omg\n",
              "16  17  ...                   thankful paner thankful positive\n",
              "17  18  ...                                      retweet agree\n",
              "18  19  ...     friday smile around via ig cookies make people\n",
              "19  20  ...                  know essential oil make chemicals\n",
              "20  21  ...  euro2016 people blame ha concede goal fat roon...\n",
              "21  22  ...  sad little dude badday coneofshame cat piss fu...\n",
              "22  23  ...  product day happy man wine tool whos weekend t...\n",
              "23  24  ...                              lumpy say prove lumpy\n",
              "24  25  ...        tgif ff gamedev indiedev indiegamedev squad\n",
              "25  26  ...  beautiful sign vendor 80 4500 upsideofflorida ...\n",
              "26  27  ...  smile media pressconference antalya turkey sun...\n",
              "27  28  ...     great panel mediatization public service ica16\n",
              "28  29  ...                                   happy father day\n",
              "29  30  ...  50 people go nightclub good night 1 man action...\n",
              "30  31  ...  never chance vote presidential candidate excit...\n",
              "31  32  ...      alohafriday time exist positivevibes hawaiian\n",
              "32  33  ...  rip fellow nohern ireland fan sadley pass away...\n",
              "33  34  ...  hard monday due cloudy weather disable oxygen ...\n",
              "34  35  ...  unbelievable 21st century wed need something l...\n",
              "35  36  ...  taylorswift1989 bull dominate bull direct what...\n",
              "36  37  ...             morning travelingram dalat ripinkylife\n",
              "37  38  ...  one word tell photoshop enoughisenough dontpho...\n",
              "38  39  ...  oh cedarpoint wait 2 hours valravn line stop w...\n",
              "39  40  ...                thankful sunshine thankful positive\n",
              "40  41  ...  finally finish book youve work awhile bookworm...\n",
              "41  42  ...  yup knicks fan hard easier nba fan playoffs ro...\n",
              "42  43  ...                    life social network embrace day\n",
              "43  44  ...          mom share bihday bihday snake see weekend\n",
              "44  45  ...  lovely echeveria bloomsflowers grow garden iph...\n",
              "45  46  ...                     amaze iam positive affirmation\n",
              "46  47  ...                               model love take time\n",
              "47  48  ...                        whenever something go wrong\n",
              "48  49  ...                             feel blue illustration\n",
              "49  50  ...                                  best pa life know\n",
              "50  51  ...  abc2020 get ready 2 remove victums frm pulsecl...\n",
              "51  52  ...            bihday get nose job bihday petunia love\n",
              "52  53  ...            concelebrate albanpilgrimage first time\n",
              "53  54  ...                              let scumbaggery begin\n",
              "54  55  ...  thank super love zpamdelacruz wed dolores capa...\n",
              "55  56  ...     scourge play baroque piece piano beyond belief\n",
              "56  57  ...                               let fight love peace\n",
              "57  58  ...  happy father day mr rayos video father day ray...\n",
              "58  59  ...  ascot time babe ascot fashion monochrome style...\n",
              "59  60  ...               weekendis selfie yolo xoxo like4like\n",
              "\n",
              "[60 rows x 4 columns]"
            ]
          },
          "metadata": {},
          "execution_count": 66
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "df.head(50)"
      ],
      "metadata": {
        "id": "W5cwf9_kkKAt",
        "outputId": "b747200e-6490-4e0c-d59d-ed9c4ab4b4c4",
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 1000
        }
      },
      "execution_count": 24,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/html": [
              "\n",
              "  <div id=\"df-3410b37c-a5ee-4dd1-90e7-f6d0417fe065\">\n",
              "    <div class=\"colab-df-container\">\n",
              "      <div>\n",
              "<style scoped>\n",
              "    .dataframe tbody tr th:only-of-type {\n",
              "        vertical-align: middle;\n",
              "    }\n",
              "\n",
              "    .dataframe tbody tr th {\n",
              "        vertical-align: top;\n",
              "    }\n",
              "\n",
              "    .dataframe thead th {\n",
              "        text-align: right;\n",
              "    }\n",
              "</style>\n",
              "<table border=\"1\" class=\"dataframe\">\n",
              "  <thead>\n",
              "    <tr style=\"text-align: right;\">\n",
              "      <th></th>\n",
              "      <th>id</th>\n",
              "      <th>label</th>\n",
              "      <th>tweet</th>\n",
              "      <th>clean_tweets</th>\n",
              "    </tr>\n",
              "  </thead>\n",
              "  <tbody>\n",
              "    <tr>\n",
              "      <th>0</th>\n",
              "      <td>1</td>\n",
              "      <td>0</td>\n",
              "      <td>@user when a father is dysfunctional and is s...</td>\n",
              "      <td>father dysfunctional selfish drags kids dysfun...</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>1</th>\n",
              "      <td>2</td>\n",
              "      <td>0</td>\n",
              "      <td>@user @user thanks for #lyft credit i can't us...</td>\n",
              "      <td>thanks lyft credit cant use cause dont offer w...</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>2</th>\n",
              "      <td>3</td>\n",
              "      <td>0</td>\n",
              "      <td>bihday your majesty</td>\n",
              "      <td>bihday majesty</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>3</th>\n",
              "      <td>4</td>\n",
              "      <td>0</td>\n",
              "      <td>#model   i love u take with u all the time in ...</td>\n",
              "      <td>model love u take u time ur</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>4</th>\n",
              "      <td>5</td>\n",
              "      <td>0</td>\n",
              "      <td>factsguide: society now    #motivation</td>\n",
              "      <td>factsguide society motivation</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>5</th>\n",
              "      <td>6</td>\n",
              "      <td>0</td>\n",
              "      <td>[2/2] huge fan fare and big talking before the...</td>\n",
              "      <td>22 huge fan fare big talking leave chaos pay d...</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>6</th>\n",
              "      <td>7</td>\n",
              "      <td>0</td>\n",
              "      <td>@user camping tomorrow @user @user @user @use...</td>\n",
              "      <td>camping tomorrow danny</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>7</th>\n",
              "      <td>8</td>\n",
              "      <td>0</td>\n",
              "      <td>the next school year is the year for exams.ð...</td>\n",
              "      <td>next school year year exams cant think school ...</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>8</th>\n",
              "      <td>9</td>\n",
              "      <td>0</td>\n",
              "      <td>we won!!! love the land!!! #allin #cavs #champ...</td>\n",
              "      <td>love land allin cavs champions cleveland cleve...</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>9</th>\n",
              "      <td>10</td>\n",
              "      <td>0</td>\n",
              "      <td>@user @user welcome here !  i'm   it's so #gr...</td>\n",
              "      <td>welcome im gr8</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>10</th>\n",
              "      <td>11</td>\n",
              "      <td>0</td>\n",
              "      <td>â #ireland consumer price index (mom) climb...</td>\n",
              "      <td>ireland consumer price index mom climbed previ...</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>11</th>\n",
              "      <td>12</td>\n",
              "      <td>0</td>\n",
              "      <td>we are so selfish. #orlando #standwithorlando ...</td>\n",
              "      <td>selfish orlando standwithorlando pulseshooting...</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>12</th>\n",
              "      <td>13</td>\n",
              "      <td>0</td>\n",
              "      <td>i get to see my daddy today!!   #80days #getti...</td>\n",
              "      <td>get see daddy today 80days gettingfed</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>13</th>\n",
              "      <td>14</td>\n",
              "      <td>1</td>\n",
              "      <td>@user #cnn calls #michigan middle school 'buil...</td>\n",
              "      <td>cnn calls michigan middle school build wall ch...</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>14</th>\n",
              "      <td>15</td>\n",
              "      <td>1</td>\n",
              "      <td>no comment!  in #australia   #opkillingbay #se...</td>\n",
              "      <td>comment australia opkillingbay seashepherd hel...</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>15</th>\n",
              "      <td>16</td>\n",
              "      <td>0</td>\n",
              "      <td>ouch...junior is angryð#got7 #junior #yugyo...</td>\n",
              "      <td>ouchjunior angrygot7 junior yugyoem omg</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>16</th>\n",
              "      <td>17</td>\n",
              "      <td>0</td>\n",
              "      <td>i am thankful for having a paner. #thankful #p...</td>\n",
              "      <td>thankful paner thankful positive</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>17</th>\n",
              "      <td>18</td>\n",
              "      <td>1</td>\n",
              "      <td>retweet if you agree!</td>\n",
              "      <td>retweet agree</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>18</th>\n",
              "      <td>19</td>\n",
              "      <td>0</td>\n",
              "      <td>its #friday! ð smiles all around via ig use...</td>\n",
              "      <td>friday smiles around via ig cookies make people</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>19</th>\n",
              "      <td>20</td>\n",
              "      <td>0</td>\n",
              "      <td>as we all know, essential oils are not made of...</td>\n",
              "      <td>know essential oils made chemicals</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>20</th>\n",
              "      <td>21</td>\n",
              "      <td>0</td>\n",
              "      <td>#euro2016 people blaming ha for conceded goal ...</td>\n",
              "      <td>euro2016 people blaming ha conceded goal fat r...</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>21</th>\n",
              "      <td>22</td>\n",
              "      <td>0</td>\n",
              "      <td>sad little dude..   #badday #coneofshame #cats...</td>\n",
              "      <td>sad little dude badday coneofshame cats pissed...</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>22</th>\n",
              "      <td>23</td>\n",
              "      <td>0</td>\n",
              "      <td>product of the day: happy man #wine tool  who'...</td>\n",
              "      <td>product day happy man wine tool whos weekend t...</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>23</th>\n",
              "      <td>24</td>\n",
              "      <td>1</td>\n",
              "      <td>@user @user lumpy says i am a . prove it lumpy.</td>\n",
              "      <td>lumpy says prove lumpy</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>24</th>\n",
              "      <td>25</td>\n",
              "      <td>0</td>\n",
              "      <td>@user #tgif   #ff to my #gamedev #indiedev #i...</td>\n",
              "      <td>tgif ff gamedev indiedev indiegamedev squad</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>25</th>\n",
              "      <td>26</td>\n",
              "      <td>0</td>\n",
              "      <td>beautiful sign by vendor 80 for $45.00!! #upsi...</td>\n",
              "      <td>beautiful sign vendor 80 4500 upsideofflorida ...</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>26</th>\n",
              "      <td>27</td>\n",
              "      <td>0</td>\n",
              "      <td>@user all #smiles when #media is   !! ðð...</td>\n",
              "      <td>smiles media pressconference antalya turkey su...</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>27</th>\n",
              "      <td>28</td>\n",
              "      <td>0</td>\n",
              "      <td>we had a great panel on the mediatization of t...</td>\n",
              "      <td>great panel mediatization public service ica16</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>28</th>\n",
              "      <td>29</td>\n",
              "      <td>0</td>\n",
              "      <td>happy father's day @user ðððð</td>\n",
              "      <td>happy fathers day</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>29</th>\n",
              "      <td>30</td>\n",
              "      <td>0</td>\n",
              "      <td>50 people went to nightclub to have a good nig...</td>\n",
              "      <td>50 people went nightclub good night 1 mans act...</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>30</th>\n",
              "      <td>31</td>\n",
              "      <td>0</td>\n",
              "      <td>i have never had a chance to vote for a presid...</td>\n",
              "      <td>never chance vote presidential candidate excit...</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>31</th>\n",
              "      <td>32</td>\n",
              "      <td>0</td>\n",
              "      <td>#alohafriday #time does #not #exist #positiv...</td>\n",
              "      <td>alohafriday time exist positivevibes hawaiian</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>32</th>\n",
              "      <td>33</td>\n",
              "      <td>0</td>\n",
              "      <td>@user rip to the fellow nohern ireland fan wh...</td>\n",
              "      <td>rip fellow nohern ireland fan sadley passed aw...</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>33</th>\n",
              "      <td>34</td>\n",
              "      <td>0</td>\n",
              "      <td>it was a hard monday due to cloudy weather. di...</td>\n",
              "      <td>hard monday due cloudy weather disabling oxyge...</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>34</th>\n",
              "      <td>35</td>\n",
              "      <td>1</td>\n",
              "      <td>it's unbelievable that in the 21st century we'...</td>\n",
              "      <td>unbelievable 21st century wed need something l...</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>35</th>\n",
              "      <td>36</td>\n",
              "      <td>0</td>\n",
              "      <td>#taylorswift1989   bull up: you will dominate ...</td>\n",
              "      <td>taylorswift1989 bull dominate bull direct what...</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>36</th>\n",
              "      <td>37</td>\n",
              "      <td>0</td>\n",
              "      <td>morning~~ #travelingram #dalat   #ripinkylife</td>\n",
              "      <td>morning travelingram dalat ripinkylife</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>37</th>\n",
              "      <td>38</td>\n",
              "      <td>0</td>\n",
              "      <td>@user once more only one word tells it all: #p...</td>\n",
              "      <td>one word tells photoshop enoughisenough dontph...</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>38</th>\n",
              "      <td>39</td>\n",
              "      <td>0</td>\n",
              "      <td>oh, #cedarpoint. waited 2 hours in the valravn...</td>\n",
              "      <td>oh cedarpoint waited 2 hours valravn line stop...</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>39</th>\n",
              "      <td>40</td>\n",
              "      <td>0</td>\n",
              "      <td>i am thankful for sunshine. #thankful #positiv...</td>\n",
              "      <td>thankful sunshine thankful positive</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>40</th>\n",
              "      <td>41</td>\n",
              "      <td>0</td>\n",
              "      <td>when you finally finish a book you've been wor...</td>\n",
              "      <td>finally finish book youve working awhile bookw...</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>41</th>\n",
              "      <td>42</td>\n",
              "      <td>0</td>\n",
              "      <td>yup, being a knicks fan is hard, so its easier...</td>\n",
              "      <td>yup knicks fan hard easier nba fan playoffs ro...</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>42</th>\n",
              "      <td>43</td>\n",
              "      <td>0</td>\n",
              "      <td>there is life after social networking. embrace...</td>\n",
              "      <td>life social networking embrace day</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>43</th>\n",
              "      <td>44</td>\n",
              "      <td>0</td>\n",
              "      <td>my mom shares the same bihday as @user   bihda...</td>\n",
              "      <td>mom shares bihday bihday snake see weekend</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>44</th>\n",
              "      <td>45</td>\n",
              "      <td>0</td>\n",
              "      <td>lovely echeveria blooms#flowers #grow #gardeni...</td>\n",
              "      <td>lovely echeveria bloomsflowers grow gardening ...</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>45</th>\n",
              "      <td>46</td>\n",
              "      <td>0</td>\n",
              "      <td>i am amazing. #i_am #positive #affirmation</td>\n",
              "      <td>amazing iam positive affirmation</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>46</th>\n",
              "      <td>47</td>\n",
              "      <td>0</td>\n",
              "      <td>#model   i love u take with u all the time in ...</td>\n",
              "      <td>model love u take u time ur</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>47</th>\n",
              "      <td>48</td>\n",
              "      <td>0</td>\n",
              "      <td>#whenever im   and #something goes #wrong  |</td>\n",
              "      <td>whenever im something goes wrong</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>48</th>\n",
              "      <td>49</td>\n",
              "      <td>0</td>\n",
              "      <td>feeling blue #illustration</td>\n",
              "      <td>feeling blue illustration</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>49</th>\n",
              "      <td>50</td>\n",
              "      <td>0</td>\n",
              "      <td>the best pa about life is knowing who you are!...</td>\n",
              "      <td>best pa life knowing</td>\n",
              "    </tr>\n",
              "  </tbody>\n",
              "</table>\n",
              "</div>\n",
              "      <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-3410b37c-a5ee-4dd1-90e7-f6d0417fe065')\"\n",
              "              title=\"Convert this dataframe to an interactive table.\"\n",
              "              style=\"display:none;\">\n",
              "        \n",
              "  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n",
              "       width=\"24px\">\n",
              "    <path d=\"M0 0h24v24H0V0z\" fill=\"none\"/>\n",
              "    <path d=\"M18.56 5.44l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94zm-11 1L8.5 8.5l.94-2.06 2.06-.94-2.06-.94L8.5 2.5l-.94 2.06-2.06.94zm10 10l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94z\"/><path d=\"M17.41 7.96l-1.37-1.37c-.4-.4-.92-.59-1.43-.59-.52 0-1.04.2-1.43.59L10.3 9.45l-7.72 7.72c-.78.78-.78 2.05 0 2.83L4 21.41c.39.39.9.59 1.41.59.51 0 1.02-.2 1.41-.59l7.78-7.78 2.81-2.81c.8-.78.8-2.07 0-2.86zM5.41 20L4 18.59l7.72-7.72 1.47 1.35L5.41 20z\"/>\n",
              "  </svg>\n",
              "      </button>\n",
              "      \n",
              "  <style>\n",
              "    .colab-df-container {\n",
              "      display:flex;\n",
              "      flex-wrap:wrap;\n",
              "      gap: 12px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert {\n",
              "      background-color: #E8F0FE;\n",
              "      border: none;\n",
              "      border-radius: 50%;\n",
              "      cursor: pointer;\n",
              "      display: none;\n",
              "      fill: #1967D2;\n",
              "      height: 32px;\n",
              "      padding: 0 0 0 0;\n",
              "      width: 32px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert:hover {\n",
              "      background-color: #E2EBFA;\n",
              "      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n",
              "      fill: #174EA6;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert {\n",
              "      background-color: #3B4455;\n",
              "      fill: #D2E3FC;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert:hover {\n",
              "      background-color: #434B5C;\n",
              "      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n",
              "      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n",
              "      fill: #FFFFFF;\n",
              "    }\n",
              "  </style>\n",
              "\n",
              "      <script>\n",
              "        const buttonEl =\n",
              "          document.querySelector('#df-3410b37c-a5ee-4dd1-90e7-f6d0417fe065 button.colab-df-convert');\n",
              "        buttonEl.style.display =\n",
              "          google.colab.kernel.accessAllowed ? 'block' : 'none';\n",
              "\n",
              "        async function convertToInteractive(key) {\n",
              "          const element = document.querySelector('#df-3410b37c-a5ee-4dd1-90e7-f6d0417fe065');\n",
              "          const dataTable =\n",
              "            await google.colab.kernel.invokeFunction('convertToInteractive',\n",
              "                                                     [key], {});\n",
              "          if (!dataTable) return;\n",
              "\n",
              "          const docLinkHtml = 'Like what you see? Visit the ' +\n",
              "            '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n",
              "            + ' to learn more about interactive tables.';\n",
              "          element.innerHTML = '';\n",
              "          dataTable['output_type'] = 'display_data';\n",
              "          await google.colab.output.renderOutput(dataTable, element);\n",
              "          const docLink = document.createElement('div');\n",
              "          docLink.innerHTML = docLinkHtml;\n",
              "          element.appendChild(docLink);\n",
              "        }\n",
              "      </script>\n",
              "    </div>\n",
              "  </div>\n",
              "  "
            ],
            "text/plain": [
              "    id  ...                                       clean_tweets\n",
              "0    1  ...  father dysfunctional selfish drags kids dysfun...\n",
              "1    2  ...  thanks lyft credit cant use cause dont offer w...\n",
              "2    3  ...                                     bihday majesty\n",
              "3    4  ...                        model love u take u time ur\n",
              "4    5  ...                      factsguide society motivation\n",
              "5    6  ...  22 huge fan fare big talking leave chaos pay d...\n",
              "6    7  ...                             camping tomorrow danny\n",
              "7    8  ...  next school year year exams cant think school ...\n",
              "8    9  ...  love land allin cavs champions cleveland cleve...\n",
              "9   10  ...                                     welcome im gr8\n",
              "10  11  ...  ireland consumer price index mom climbed previ...\n",
              "11  12  ...  selfish orlando standwithorlando pulseshooting...\n",
              "12  13  ...              get see daddy today 80days gettingfed\n",
              "13  14  ...  cnn calls michigan middle school build wall ch...\n",
              "14  15  ...  comment australia opkillingbay seashepherd hel...\n",
              "15  16  ...            ouchjunior angrygot7 junior yugyoem omg\n",
              "16  17  ...                   thankful paner thankful positive\n",
              "17  18  ...                                      retweet agree\n",
              "18  19  ...    friday smiles around via ig cookies make people\n",
              "19  20  ...                 know essential oils made chemicals\n",
              "20  21  ...  euro2016 people blaming ha conceded goal fat r...\n",
              "21  22  ...  sad little dude badday coneofshame cats pissed...\n",
              "22  23  ...  product day happy man wine tool whos weekend t...\n",
              "23  24  ...                             lumpy says prove lumpy\n",
              "24  25  ...        tgif ff gamedev indiedev indiegamedev squad\n",
              "25  26  ...  beautiful sign vendor 80 4500 upsideofflorida ...\n",
              "26  27  ...  smiles media pressconference antalya turkey su...\n",
              "27  28  ...     great panel mediatization public service ica16\n",
              "28  29  ...                                  happy fathers day\n",
              "29  30  ...  50 people went nightclub good night 1 mans act...\n",
              "30  31  ...  never chance vote presidential candidate excit...\n",
              "31  32  ...      alohafriday time exist positivevibes hawaiian\n",
              "32  33  ...  rip fellow nohern ireland fan sadley passed aw...\n",
              "33  34  ...  hard monday due cloudy weather disabling oxyge...\n",
              "34  35  ...  unbelievable 21st century wed need something l...\n",
              "35  36  ...  taylorswift1989 bull dominate bull direct what...\n",
              "36  37  ...             morning travelingram dalat ripinkylife\n",
              "37  38  ...  one word tells photoshop enoughisenough dontph...\n",
              "38  39  ...  oh cedarpoint waited 2 hours valravn line stop...\n",
              "39  40  ...                thankful sunshine thankful positive\n",
              "40  41  ...  finally finish book youve working awhile bookw...\n",
              "41  42  ...  yup knicks fan hard easier nba fan playoffs ro...\n",
              "42  43  ...                 life social networking embrace day\n",
              "43  44  ...         mom shares bihday bihday snake see weekend\n",
              "44  45  ...  lovely echeveria bloomsflowers grow gardening ...\n",
              "45  46  ...                   amazing iam positive affirmation\n",
              "46  47  ...                        model love u take u time ur\n",
              "47  48  ...                   whenever im something goes wrong\n",
              "48  49  ...                          feeling blue illustration\n",
              "49  50  ...                               best pa life knowing\n",
              "\n",
              "[50 rows x 4 columns]"
            ]
          },
          "metadata": {},
          "execution_count": 24
        }
      ]
    },
    {
      "cell_type": "markdown",
      "source": [
        "# Exploratory Data Analysis"
      ],
      "metadata": {
        "id": "be3AGnY_E0Rc"
      }
    },
    {
      "cell_type": "code",
      "source": [
        "# EDA dataframe\n",
        "df_eda = df.copy()\n",
        "df_eda.head()"
      ],
      "metadata": {
        "id": "5udYkDrCjzRH",
        "outputId": "54efe99e-c920-46ab-b8d4-ed6be95cf132",
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 191
        }
      },
      "execution_count": 67,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/html": [
              "\n",
              "  <div id=\"df-3b19ae28-baae-486a-9807-b5f08eae86b5\">\n",
              "    <div class=\"colab-df-container\">\n",
              "      <div>\n",
              "<style scoped>\n",
              "    .dataframe tbody tr th:only-of-type {\n",
              "        vertical-align: middle;\n",
              "    }\n",
              "\n",
              "    .dataframe tbody tr th {\n",
              "        vertical-align: top;\n",
              "    }\n",
              "\n",
              "    .dataframe thead th {\n",
              "        text-align: right;\n",
              "    }\n",
              "</style>\n",
              "<table border=\"1\" class=\"dataframe\">\n",
              "  <thead>\n",
              "    <tr style=\"text-align: right;\">\n",
              "      <th></th>\n",
              "      <th>id</th>\n",
              "      <th>label</th>\n",
              "      <th>tweet</th>\n",
              "      <th>clean_tweets</th>\n",
              "    </tr>\n",
              "  </thead>\n",
              "  <tbody>\n",
              "    <tr>\n",
              "      <th>0</th>\n",
              "      <td>1</td>\n",
              "      <td>0</td>\n",
              "      <td>@user when a father is dysfunctional and is s...</td>\n",
              "      <td>father dysfunctional selfish drag kid dysfunct...</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>1</th>\n",
              "      <td>2</td>\n",
              "      <td>0</td>\n",
              "      <td>@user @user thanks for #lyft credit i can't us...</td>\n",
              "      <td>thank lyft credit cant use cause dont offer wh...</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>2</th>\n",
              "      <td>3</td>\n",
              "      <td>0</td>\n",
              "      <td>bihday your majesty</td>\n",
              "      <td>bihday majesty</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>3</th>\n",
              "      <td>4</td>\n",
              "      <td>0</td>\n",
              "      <td>#model   i love u take with u all the time in ...</td>\n",
              "      <td>model love take time</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>4</th>\n",
              "      <td>5</td>\n",
              "      <td>0</td>\n",
              "      <td>factsguide: society now    #motivation</td>\n",
              "      <td>factsguide society motivation</td>\n",
              "    </tr>\n",
              "  </tbody>\n",
              "</table>\n",
              "</div>\n",
              "      <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-3b19ae28-baae-486a-9807-b5f08eae86b5')\"\n",
              "              title=\"Convert this dataframe to an interactive table.\"\n",
              "              style=\"display:none;\">\n",
              "        \n",
              "  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n",
              "       width=\"24px\">\n",
              "    <path d=\"M0 0h24v24H0V0z\" fill=\"none\"/>\n",
              "    <path d=\"M18.56 5.44l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94zm-11 1L8.5 8.5l.94-2.06 2.06-.94-2.06-.94L8.5 2.5l-.94 2.06-2.06.94zm10 10l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94z\"/><path d=\"M17.41 7.96l-1.37-1.37c-.4-.4-.92-.59-1.43-.59-.52 0-1.04.2-1.43.59L10.3 9.45l-7.72 7.72c-.78.78-.78 2.05 0 2.83L4 21.41c.39.39.9.59 1.41.59.51 0 1.02-.2 1.41-.59l7.78-7.78 2.81-2.81c.8-.78.8-2.07 0-2.86zM5.41 20L4 18.59l7.72-7.72 1.47 1.35L5.41 20z\"/>\n",
              "  </svg>\n",
              "      </button>\n",
              "      \n",
              "  <style>\n",
              "    .colab-df-container {\n",
              "      display:flex;\n",
              "      flex-wrap:wrap;\n",
              "      gap: 12px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert {\n",
              "      background-color: #E8F0FE;\n",
              "      border: none;\n",
              "      border-radius: 50%;\n",
              "      cursor: pointer;\n",
              "      display: none;\n",
              "      fill: #1967D2;\n",
              "      height: 32px;\n",
              "      padding: 0 0 0 0;\n",
              "      width: 32px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert:hover {\n",
              "      background-color: #E2EBFA;\n",
              "      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n",
              "      fill: #174EA6;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert {\n",
              "      background-color: #3B4455;\n",
              "      fill: #D2E3FC;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert:hover {\n",
              "      background-color: #434B5C;\n",
              "      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n",
              "      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n",
              "      fill: #FFFFFF;\n",
              "    }\n",
              "  </style>\n",
              "\n",
              "      <script>\n",
              "        const buttonEl =\n",
              "          document.querySelector('#df-3b19ae28-baae-486a-9807-b5f08eae86b5 button.colab-df-convert');\n",
              "        buttonEl.style.display =\n",
              "          google.colab.kernel.accessAllowed ? 'block' : 'none';\n",
              "\n",
              "        async function convertToInteractive(key) {\n",
              "          const element = document.querySelector('#df-3b19ae28-baae-486a-9807-b5f08eae86b5');\n",
              "          const dataTable =\n",
              "            await google.colab.kernel.invokeFunction('convertToInteractive',\n",
              "                                                     [key], {});\n",
              "          if (!dataTable) return;\n",
              "\n",
              "          const docLinkHtml = 'Like what you see? Visit the ' +\n",
              "            '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n",
              "            + ' to learn more about interactive tables.';\n",
              "          element.innerHTML = '';\n",
              "          dataTable['output_type'] = 'display_data';\n",
              "          await google.colab.output.renderOutput(dataTable, element);\n",
              "          const docLink = document.createElement('div');\n",
              "          docLink.innerHTML = docLinkHtml;\n",
              "          element.appendChild(docLink);\n",
              "        }\n",
              "      </script>\n",
              "    </div>\n",
              "  </div>\n",
              "  "
            ],
            "text/plain": [
              "   id  ...                                       clean_tweets\n",
              "0   1  ...  father dysfunctional selfish drag kid dysfunct...\n",
              "1   2  ...  thank lyft credit cant use cause dont offer wh...\n",
              "2   3  ...                                     bihday majesty\n",
              "3   4  ...                               model love take time\n",
              "4   5  ...                      factsguide society motivation\n",
              "\n",
              "[5 rows x 4 columns]"
            ]
          },
          "metadata": {},
          "execution_count": 67
        }
      ]
    },
    {
      "cell_type": "markdown",
      "source": [
        "## Univariate"
      ],
      "metadata": {
        "id": "_jlT9x8CE_xv"
      }
    },
    {
      "cell_type": "code",
      "source": [
        "# Count plot of label column(0-Non hateful, 1-hateful)\n",
        "sb.countplot(df_eda['label'])"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 295
        },
        "id": "Aln5wmgavhSw",
        "outputId": "29e92fe1-9831-4736-d4d7-da3e66e0727a"
      },
      "execution_count": 68,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "<matplotlib.axes._subplots.AxesSubplot at 0x7f702fdeab10>"
            ]
          },
          "metadata": {},
          "execution_count": 68
        },
        {
          "output_type": "display_data",
          "data": {
            "image/png": "iVBORw0KGgoAAAANSUhEUgAAAZEAAAEGCAYAAACkQqisAAAABHNCSVQICAgIfAhkiAAAAAlwSFlzAAALEgAACxIB0t1+/AAAADh0RVh0U29mdHdhcmUAbWF0cGxvdGxpYiB2ZXJzaW9uMy4yLjIsIGh0dHA6Ly9tYXRwbG90bGliLm9yZy+WH4yJAAAS0UlEQVR4nO3df6xf9X3f8ecrNiTpUooTPEZtU6PG6uZkKwlXQNtpyg8VDNJm0tEIuhUvRXWlmK2Roqmkf4wMwtRoTaOSBSRXeJgui8OSZniTW89iqFGm8uOSUMC4iDtChi2CXUxCsihkJu/98f3c8pV9r7n+2N/v1zf3+ZC+uue8z+ec8z6S5ZfOj+/5pqqQJKnHGybdgCRp8TJEJEndDBFJUjdDRJLUzRCRJHVbPukGxu2cc86ptWvXTroNSVpUHnnkkb+uqpVH15dciKxdu5bp6elJtyFJi0qSb85V93KWJKmbISJJ6maISJK6GSKSpG4jC5Ekb0ryUJK/TLI3yb9t9QuSPJhkJskXkpzZ6m9s8zNt+dqhbX2s1Z9KcvlQfUOrzSS5cVTHIkma2yjPRF4B3ldVPw9cCGxIcinwSeDTVfV24CXg+jb+euClVv90G0eS9cA1wDuADcDtSZYlWQZ8FrgCWA9c28ZKksZkZCFSA99rs2e0TwHvA77Y6tuBq9r0xjZPW/7+JGn1HVX1SlV9A5gBLm6fmap6pqp+COxoYyVJYzLSeyLtjOFR4CCwB/jfwLer6kgbsh9Y1aZXAc8BtOXfAd42XD9qnfnqc/WxOcl0kulDhw6dikOTJDHiEKmqV6vqQmA1gzOHvzvK/R2nj61VNVVVUytXHvOFS0lSp7F8Y72qvp3kfuAXgLOTLG9nG6uBA23YAWANsD/JcuCngBeH6rOG15mvPjIX/eu7R70LLUKP/PvrJt2CNBGjfDprZZKz2/SbgV8G9gH3A1e3YZuAe9v0zjZPW/4/a/CzizuBa9rTWxcA64CHgIeBde1przMZ3HzfOarjkSQda5RnIucB29tTVG8A7qmq/57kSWBHkk8AXwfubOPvBP44yQxwmEEoUFV7k9wDPAkcAbZU1asASW4AdgPLgG1VtXeExyNJOsrIQqSqHgPeNUf9GQb3R46u/wD41Xm2dStw6xz1XcCuk25WktTFb6xLkroZIpKkboaIJKmbISJJ6maISJK6GSKSpG6GiCSpmyEiSepmiEiSuhkikqRuhogkqZshIknqZohIkroZIpKkboaIJKmbISJJ6maISJK6GSKSpG6GiCSpmyEiSepmiEiSuhkikqRuhogkqZshIknqZohIkrqNLESSrElyf5Ink+xN8tut/vEkB5I82j5XDq3zsSQzSZ5KcvlQfUOrzSS5cah+QZIHW/0LSc4c1fFIko41yjORI8BHq2o9cCmwJcn6tuzTVXVh++wCaMuuAd4BbABuT7IsyTLgs8AVwHrg2qHtfLJt6+3AS8D1IzweSdJRRhYiVfV8VX2tTX8X2AesOs4qG4EdVfVKVX0DmAEubp+Zqnqmqn4I7AA2JgnwPuCLbf3twFWjORpJ0lzGck8kyVrgXcCDrXRDkseSbEuyotVWAc8Nrba/1earvw34dlUdOaouSRqTkYdIkrcAXwI+UlUvA3cAPwtcCDwPfGoMPWxOMp1k+tChQ6PenSQtGSMNkSRnMAiQz1XVnwBU1QtV9WpV/Qj4IwaXqwAOAGuGVl/davPVXwTOTrL8qPoxqmprVU1V1dTKlStPzcFJkkb6dFaAO4F9VfUHQ/XzhoZ9AHiiTe8ErknyxiQXAOuAh4CHgXXtSawzGdx831lVBdwPXN3W3wTcO6rjkSQda/nrD+n2S8CvA48nebTVfpfB01UXAgU8C/wWQFXtTXIP8CSDJ7u2VNWrAEluAHYDy4BtVbW3be93gB1JPgF8nUFoSZLGZGQhUlVfBTLHol3HWedW4NY56rvmWq+qnuG1y2GSpDHzG+uSpG6GiCSpmyEiSepmiEiSuhkikqRuhogkqZshIknqZohIkroZIpKkboaIJKmbISJJ6maISJK6GSKSpG6GiCSpmyEiSepmiEiSuhkikqRuhogkqZshIknqZohIkroZIpKkboaIJKmbISJJ6maISJK6GSKSpG6GiCSp28hCJMmaJPcneTLJ3iS/3epvTbInydPt74pWT5LbkswkeSzJu4e2tamNfzrJpqH6RUkeb+vcliSjOh5J0rFGeSZyBPhoVa0HLgW2JFkP3AjcV1XrgPvaPMAVwLr22QzcAYPQAW4CLgEuBm6aDZ425jeH1tswwuORJB1lZCFSVc9X1dfa9HeBfcAqYCOwvQ3bDlzVpjcCd9fAA8DZSc4DLgf2VNXhqnoJ2ANsaMvOqqoHqqqAu4e2JUkag7HcE0myFngX8CBwblU93xZ9Czi3Ta8CnhtabX+rHa++f476XPvfnGQ6yfShQ4dO6lgkSa8ZeYgkeQvwJeAjVfXy8LJ2BlGj7qGqtlbVVFVNrVy5ctS7k6QlY6QhkuQMBgHyuar6k1Z+oV2Kov092OoHgDVDq69utePVV89RlySNySifzgpwJ7Cvqv5gaNFOYPYJq03AvUP169pTWpcC32mXvXYDlyVZ0W6oXwbsbsteTnJp29d1Q9uSJI3B8hFu+5eAXwceT/Joq/0u8HvAPUmuB74JfLAt2wVcCcwA3wc+BFBVh5PcAjzcxt1cVYfb9IeBu4A3A3/aPpKkMRlZiFTVV4H5vrfx/jnGF7Blnm1tA7bNUZ8G3nkSbUqSToLfWJckdTNEJEndDBFJUjdDRJLUzRCRJHUzRCRJ3QwRSVI3Q0SS1M0QkSR1M0QkSd0MEUlSN0NEktTNEJEkdTNEJEndFhQiSe5bSE2StLQc9/dEkrwJ+AngnPargrO/D3IWsGrEvUmSTnOv96NUvwV8BPhp4BFeC5GXgf8wwr4kSYvAcUOkqv4Q+MMk/7KqPjOmniRJi8SCfh63qj6T5BeBtcPrVNXdI+pLkrQILChEkvwx8LPAo8CrrVyAISJJS9iCQgSYAtZXVY2yGUnS4rLQ74k8AfydUTYiSVp8Fnomcg7wZJKHgFdmi1X1T0bSlSRpUVhoiHx8lE1IkhanhT6d9eejbkSStPgs9Oms7zJ4GgvgTOAM4P9W1VmjakySdPpb0I31qvrJqjqrhcabgX8K3H68dZJsS3IwyRNDtY8nOZDk0fa5cmjZx5LMJHkqyeVD9Q2tNpPkxqH6BUkebPUvJDnzBI5bknQKnPBbfGvgvwKXv87Qu4ANc9Q/XVUXts8ugCTrgWuAd7R1bk+yLMky4LPAFcB64No2FuCTbVtvB14Crj/RY5EknZyFXs76laHZNzD43sgPjrdOVX0lydoF9rER2FFVrwDfSDIDXNyWzVTVM62PHcDGJPuA9wG/1sZsZ3Dz/44F7k+SdAos9Omsfzw0fQR4lsF//D1uSHIdMA18tKpeYvBG4AeGxuzntbcEP3dU/RLgbcC3q+rIHOOPkWQzsBng/PPP72xbknS0hT6d9aFTtL87gFsY3KS/BfgU8BunaNvzqqqtwFaAqakpv3UvSafIQn+UanWSL7cb5QeTfCnJ6hPdWVW9UFWvVtWPgD/itUtWB4A1Q0NXt9p89ReBs5MsP6ouSRqjhd5Y/4/ATga/K/LTwH9rtROS5Lyh2Q8weJ0KbdvXJHljkguAdcBDwMPAuvYk1pkMbr7vbO/wuh+4uq2/Cbj3RPuRJJ2chd4TWVlVw6FxV5KPHG+FJJ8H3sPgVxH3AzcB70lyIYPLWc8y+NErqmpvknuAJxncc9lSVa+27dwA7AaWAduqam/bxe8AO5J8Avg6cOcCj0WSdIosNEReTPLPgc+3+WsZXFKaV1VdO0d53v/oq+pW4NY56ruAXXPUn+G1y2GSpAlY6OWs3wA+CHwLeJ7BZaR/MaKeJEmLxELPRG4GNrXHcUnyVuD3GcOTVZKk09dCz0T+wWyAAFTVYeBdo2lJkrRYLDRE3pBkxexMOxNZ6FmMJOnH1EKD4FPAXyT5L23+V5njJrgkaWlZ6DfW704yzeB9VQC/UlVPjq4tSdJisOBLUi00DA5J0t844VfBS5I0yxCRJHUzRCRJ3QwRSVI3Q0SS1M0QkSR1M0QkSd0MEUlSN0NEktTNEJEkdTNEJEndDBFJUjdDRJLUzRCRJHUzRCRJ3QwRSVI3Q0SS1M0QkSR1M0QkSd1GFiJJtiU5mOSJodpbk+xJ8nT7u6LVk+S2JDNJHkvy7qF1NrXxTyfZNFS/KMnjbZ3bkmRUxyJJmtsoz0TuAjYcVbsRuK+q1gH3tXmAK4B17bMZuAMGoQPcBFwCXAzcNBs8bcxvDq139L4kSSM2shCpqq8Ah48qbwS2t+ntwFVD9btr4AHg7CTnAZcDe6rqcFW9BOwBNrRlZ1XVA1VVwN1D25Ikjcm474mcW1XPt+lvAee26VXAc0Pj9rfa8er756jPKcnmJNNJpg8dOnRyRyBJ+hsTu7HeziBqTPvaWlVTVTW1cuXKcexSkpaEcYfIC+1SFO3vwVY/AKwZGre61Y5XXz1HXZI0RuMOkZ3A7BNWm4B7h+rXtae0LgW+0y577QYuS7Ki3VC/DNjdlr2c5NL2VNZ1Q9uSJI3J8lFtOMnngfcA5yTZz+Apq98D7klyPfBN4INt+C7gSmAG+D7wIYCqOpzkFuDhNu7mqpq9Wf9hBk+AvRn40/aRJI3RyEKkqq6dZ9H75xhbwJZ5trMN2DZHfRp458n0KEk6OX5jXZLUzRCRJHUzRCRJ3QwRSVI3Q0SS1M0QkSR1M0QkSd0MEUlSN0NEktTNEJEkdTNEJEndDBFJUjdDRJLUzRCRJHUzRCRJ3QwRSVI3Q0SS1M0QkSR1M0QkSd0MEUlSN0NEktTNEJEkdTNEJEndDBFJUjdDRJLUzRCRJHWbSIgkeTbJ40keTTLdam9NsifJ0+3vilZPktuSzCR5LMm7h7azqY1/OsmmSRyLJC1lkzwTeW9VXVhVU23+RuC+qloH3NfmAa4A1rXPZuAOGIQOcBNwCXAxcNNs8EiSxuN0upy1EdjeprcDVw3V766BB4Czk5wHXA7sqarDVfUSsAfYMO6mJWkpm1SIFPA/kjySZHOrnVtVz7fpbwHntulVwHND6+5vtfnqx0iyOcl0kulDhw6dqmOQpCVv+YT2+w+r6kCSvw3sSfJXwwurqpLUqdpZVW0FtgJMTU2dsu1K0lI3kTORqjrQ/h4EvszgnsYL7TIV7e/BNvwAsGZo9dWtNl9dkjQmYw+RJH8ryU/OTgOXAU8AO4HZJ6w2Afe26Z3Ade0prUuB77TLXruBy5KsaDfUL2s1SdKYTOJy1rnAl5PM7v8/V9WfJXkYuCfJ9cA3gQ+28buAK4EZ4PvAhwCq6nCSW4CH27ibq+rw+A5DkjT2EKmqZ4Cfn6P+IvD+OeoFbJlnW9uAbae6R0nSwpxOj/hKkhYZQ0SS1M0QkSR1M0QkSd0MEUlSN0NEktTNEJEkdTNEJEndDBFJUjdDRJLUzRCRJHUzRCRJ3QwRSVK3Sf2yoaQR+D83//1Jt6DT0Pn/5vGRbdszEUlSN0NEktTNEJEkdTNEJEndDBFJUjdDRJLUzRCRJHUzRCRJ3QwRSVI3Q0SS1M0QkSR1M0QkSd0WfYgk2ZDkqSQzSW6cdD+StJQs6hBJsgz4LHAFsB64Nsn6yXYlSUvHog4R4GJgpqqeqaofAjuAjRPuSZKWjMX+eyKrgOeG5vcDlxw9KMlmYHOb/V6Sp8bQ21JwDvDXk27idJDf3zTpFnQs/33OuimnYis/M1dxsYfIglTVVmDrpPv4cZNkuqqmJt2HNBf/fY7HYr+cdQBYMzS/utUkSWOw2EPkYWBdkguSnAlcA+yccE+StGQs6stZVXUkyQ3AbmAZsK2q9k64raXES4Q6nfnvcwxSVZPuQZK0SC32y1mSpAkyRCRJ3QwRdfF1MzpdJdmW5GCSJybdy1JgiOiE+boZnebuAjZMuomlwhBRD183o9NWVX0FODzpPpYKQ0Q95nrdzKoJ9SJpggwRSVI3Q0Q9fN2MJMAQUR9fNyMJMETUoaqOALOvm9kH3OPrZnS6SPJ54C+An0uyP8n1k+7px5mvPZEkdfNMRJLUzRCRJHUzRCRJ3QwRSVI3Q0SS1M0QkUYoyfdeZ/naE33bbJK7klx9cp1Jp4YhIknqZohIY5DkLUnuS/K1JI8nGX7r8fIkn0uyL8kXk/xEW+eiJH+e5JEku5OcN6H2pXkZItJ4/AD4QFW9G3gv8Kkkact+Dri9qv4e8DLw4SRnAJ8Brq6qi4BtwK0T6Fs6ruWTbkBaIgL8uyT/CPgRg1fnn9uWPVdV/6tN/yfgXwF/BrwT2NOyZhnw/Fg7lhbAEJHG458BK4GLqur/JXkWeFNbdvS7h4pB6Oytql8YX4vSifNyljQePwUcbAHyXuBnhpadn2Q2LH4N+CrwFLBytp7kjCTvGGvH0gIYItJ4fA6YSvI4cB3wV0PLngK2JNkHrADuaD87fDXwySR/CTwK/OKYe5Zel2/xlSR180xEktTNEJEkdTNEJEndDBFJUjdDRJLUzRCRJHUzRCRJ3f4/xewhRQf4RSQAAAAASUVORK5CYII=\n",
            "text/plain": [
              "<Figure size 432x288 with 1 Axes>"
            ]
          },
          "metadata": {
            "needs_background": "light"
          }
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "df_eda['label'].value_counts()/df_eda.shape[0]"
      ],
      "metadata": {
        "id": "JsOnr4V8T7w_",
        "outputId": "1f44d404-85e7-44c9-a879-53e8e53874f4",
        "colab": {
          "base_uri": "https://localhost:8080/"
        }
      },
      "execution_count": 69,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "0    0.929854\n",
              "1    0.070146\n",
              "Name: label, dtype: float64"
            ]
          },
          "metadata": {},
          "execution_count": 69
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "# Most commom words\n",
        "from collections import Counter\n"
      ],
      "metadata": {
        "id": "ollW7FrsCuPb"
      },
      "execution_count": 70,
      "outputs": []
    },
    {
      "cell_type": "markdown",
      "source": [
        "Decided to tokenize the clean text column using the string split function to get word frequencies"
      ],
      "metadata": {
        "id": "RHk2ZKKWqFW2"
      }
    },
    {
      "cell_type": "code",
      "source": [
        "df_eda[\"clean_tweets\"] =df_eda[\"clean_tweets\"].apply(lambda x:str(x).split()) \n",
        "top = Counter([item for sublist in df_eda[\"clean_tweets\"] for item in sublist])\n",
        "temp = pd.DataFrame(top.most_common(20))\n",
        "temp.columns = ['Common_words','count']\n",
        "temp.style.background_gradient(cmap='Greens')"
      ],
      "metadata": {
        "id": "nnAB_kz5kLgx",
        "outputId": "98d5fb56-2dc1-4149-a4cd-578fadd3f77c",
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 622
        }
      },
      "execution_count": 71,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/html": [
              "<style type=\"text/css\">\n",
              "#T_06bfc_row0_col1 {\n",
              "  background-color: #00441b;\n",
              "  color: #f1f1f1;\n",
              "}\n",
              "#T_06bfc_row1_col1 {\n",
              "  background-color: #37a055;\n",
              "  color: #f1f1f1;\n",
              "}\n",
              "#T_06bfc_row2_col1 {\n",
              "  background-color: #7dc87e;\n",
              "  color: #000000;\n",
              "}\n",
              "#T_06bfc_row3_col1 {\n",
              "  background-color: #97d492;\n",
              "  color: #000000;\n",
              "}\n",
              "#T_06bfc_row4_col1 {\n",
              "  background-color: #c0e6b9;\n",
              "  color: #000000;\n",
              "}\n",
              "#T_06bfc_row5_col1 {\n",
              "  background-color: #d5efcf;\n",
              "  color: #000000;\n",
              "}\n",
              "#T_06bfc_row6_col1 {\n",
              "  background-color: #d8f0d2;\n",
              "  color: #000000;\n",
              "}\n",
              "#T_06bfc_row7_col1 {\n",
              "  background-color: #e0f3db;\n",
              "  color: #000000;\n",
              "}\n",
              "#T_06bfc_row8_col1 {\n",
              "  background-color: #e4f5df;\n",
              "  color: #000000;\n",
              "}\n",
              "#T_06bfc_row9_col1 {\n",
              "  background-color: #ebf7e7;\n",
              "  color: #000000;\n",
              "}\n",
              "#T_06bfc_row10_col1 {\n",
              "  background-color: #ecf8e8;\n",
              "  color: #000000;\n",
              "}\n",
              "#T_06bfc_row11_col1, #T_06bfc_row12_col1 {\n",
              "  background-color: #eff9ec;\n",
              "  color: #000000;\n",
              "}\n",
              "#T_06bfc_row13_col1, #T_06bfc_row14_col1 {\n",
              "  background-color: #f0f9ec;\n",
              "  color: #000000;\n",
              "}\n",
              "#T_06bfc_row15_col1 {\n",
              "  background-color: #f2faef;\n",
              "  color: #000000;\n",
              "}\n",
              "#T_06bfc_row16_col1 {\n",
              "  background-color: #f2faf0;\n",
              "  color: #000000;\n",
              "}\n",
              "#T_06bfc_row17_col1, #T_06bfc_row18_col1 {\n",
              "  background-color: #f5fbf2;\n",
              "  color: #000000;\n",
              "}\n",
              "#T_06bfc_row19_col1 {\n",
              "  background-color: #f7fcf5;\n",
              "  color: #000000;\n",
              "}\n",
              "</style>\n",
              "<table id=\"T_06bfc_\" class=\"dataframe\">\n",
              "  <thead>\n",
              "    <tr>\n",
              "      <th class=\"blank level0\" >&nbsp;</th>\n",
              "      <th class=\"col_heading level0 col0\" >Common_words</th>\n",
              "      <th class=\"col_heading level0 col1\" >count</th>\n",
              "    </tr>\n",
              "  </thead>\n",
              "  <tbody>\n",
              "    <tr>\n",
              "      <th id=\"T_06bfc_level0_row0\" class=\"row_heading level0 row0\" >0</th>\n",
              "      <td id=\"T_06bfc_row0_col0\" class=\"data row0 col0\" >love</td>\n",
              "      <td id=\"T_06bfc_row0_col1\" class=\"data row0 col1\" >2985</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th id=\"T_06bfc_level0_row1\" class=\"row_heading level0 row1\" >1</th>\n",
              "      <td id=\"T_06bfc_row1_col0\" class=\"data row1 col0\" >day</td>\n",
              "      <td id=\"T_06bfc_row1_col1\" class=\"data row1 col1\" >2256</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th id=\"T_06bfc_level0_row2\" class=\"row_heading level0 row2\" >2</th>\n",
              "      <td id=\"T_06bfc_row2_col0\" class=\"data row2 col0\" >get</td>\n",
              "      <td id=\"T_06bfc_row2_col1\" class=\"data row2 col1\" >1848</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th id=\"T_06bfc_level0_row3\" class=\"row_heading level0 row3\" >3</th>\n",
              "      <td id=\"T_06bfc_row3_col0\" class=\"data row3 col0\" >happy</td>\n",
              "      <td id=\"T_06bfc_row3_col1\" class=\"data row3 col1\" >1691</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th id=\"T_06bfc_level0_row4\" class=\"row_heading level0 row4\" >4</th>\n",
              "      <td id=\"T_06bfc_row4_col0\" class=\"data row4 col0\" >go</td>\n",
              "      <td id=\"T_06bfc_row4_col1\" class=\"data row4 col1\" >1413</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th id=\"T_06bfc_level0_row5\" class=\"row_heading level0 row5\" >5</th>\n",
              "      <td id=\"T_06bfc_row5_col0\" class=\"data row5 col0\" >time</td>\n",
              "      <td id=\"T_06bfc_row5_col1\" class=\"data row5 col1\" >1236</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th id=\"T_06bfc_level0_row6\" class=\"row_heading level0 row6\" >6</th>\n",
              "      <td id=\"T_06bfc_row6_col0\" class=\"data row6 col0\" >make</td>\n",
              "      <td id=\"T_06bfc_row6_col1\" class=\"data row6 col1\" >1209</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th id=\"T_06bfc_level0_row7\" class=\"row_heading level0 row7\" >7</th>\n",
              "      <td id=\"T_06bfc_row7_col0\" class=\"data row7 col0\" >life</td>\n",
              "      <td id=\"T_06bfc_row7_col1\" class=\"data row7 col1\" >1127</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th id=\"T_06bfc_level0_row8\" class=\"row_heading level0 row8\" >8</th>\n",
              "      <td id=\"T_06bfc_row8_col0\" class=\"data row8 col0\" >like</td>\n",
              "      <td id=\"T_06bfc_row8_col1\" class=\"data row8 col1\" >1099</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th id=\"T_06bfc_level0_row9\" class=\"row_heading level0 row9\" >9</th>\n",
              "      <td id=\"T_06bfc_row9_col0\" class=\"data row9 col0\" >today</td>\n",
              "      <td id=\"T_06bfc_row9_col1\" class=\"data row9 col1\" >1005</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th id=\"T_06bfc_level0_row10\" class=\"row_heading level0 row10\" >10</th>\n",
              "      <td id=\"T_06bfc_row10_col0\" class=\"data row10 col0\" >new</td>\n",
              "      <td id=\"T_06bfc_row10_col1\" class=\"data row10 col1\" >987</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th id=\"T_06bfc_level0_row11\" class=\"row_heading level0 row11\" >11</th>\n",
              "      <td id=\"T_06bfc_row11_col0\" class=\"data row11 col0\" >see</td>\n",
              "      <td id=\"T_06bfc_row11_col1\" class=\"data row11 col1\" >938</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th id=\"T_06bfc_level0_row12\" class=\"row_heading level0 row12\" >12</th>\n",
              "      <td id=\"T_06bfc_row12_col0\" class=\"data row12 col0\" >positive</td>\n",
              "      <td id=\"T_06bfc_row12_col1\" class=\"data row12 col1\" >934</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th id=\"T_06bfc_level0_row13\" class=\"row_heading level0 row13\" >13</th>\n",
              "      <td id=\"T_06bfc_row13_col0\" class=\"data row13 col0\" >father</td>\n",
              "      <td id=\"T_06bfc_row13_col1\" class=\"data row13 col1\" >925</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th id=\"T_06bfc_level0_row14\" class=\"row_heading level0 row14\" >14</th>\n",
              "      <td id=\"T_06bfc_row14_col0\" class=\"data row14 col0\" >thankful</td>\n",
              "      <td id=\"T_06bfc_row14_col1\" class=\"data row14 col1\" >925</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th id=\"T_06bfc_level0_row15\" class=\"row_heading level0 row15\" >15</th>\n",
              "      <td id=\"T_06bfc_row15_col0\" class=\"data row15 col0\" >smile</td>\n",
              "      <td id=\"T_06bfc_row15_col1\" class=\"data row15 col1\" >891</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th id=\"T_06bfc_level0_row16\" class=\"row_heading level0 row16\" >16</th>\n",
              "      <td id=\"T_06bfc_row16_col0\" class=\"data row16 col0\" >people</td>\n",
              "      <td id=\"T_06bfc_row16_col1\" class=\"data row16 col1\" >885</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th id=\"T_06bfc_level0_row17\" class=\"row_heading level0 row17\" >17</th>\n",
              "      <td id=\"T_06bfc_row17_col0\" class=\"data row17 col0\" >bihday</td>\n",
              "      <td id=\"T_06bfc_row17_col1\" class=\"data row17 col1\" >855</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th id=\"T_06bfc_level0_row18\" class=\"row_heading level0 row18\" >18</th>\n",
              "      <td id=\"T_06bfc_row18_col0\" class=\"data row18 col0\" >good</td>\n",
              "      <td id=\"T_06bfc_row18_col1\" class=\"data row18 col1\" >850</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th id=\"T_06bfc_level0_row19\" class=\"row_heading level0 row19\" >19</th>\n",
              "      <td id=\"T_06bfc_row19_col0\" class=\"data row19 col0\" >cant</td>\n",
              "      <td id=\"T_06bfc_row19_col1\" class=\"data row19 col1\" >813</td>\n",
              "    </tr>\n",
              "  </tbody>\n",
              "</table>\n"
            ],
            "text/plain": [
              "<pandas.io.formats.style.Styler at 0x7f6fa2cf5510>"
            ]
          },
          "metadata": {},
          "execution_count": 71
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "import matplotlib.pyplot as plt\n",
        "import seaborn as sns\n",
        "%matplotlib inline\n",
        "from plotly import graph_objs as go\n",
        "import plotly.express as px\n",
        "import plotly.figure_factory as ff"
      ],
      "metadata": {
        "id": "OYbKcTzXIVdU"
      },
      "execution_count": 72,
      "outputs": []
    },
    {
      "cell_type": "code",
      "source": [
        "fig = px.bar(temp, x=\"count\", y=\"Common_words\", title='Commmon Words in Selected Text', orientation='h', \n",
        "             width=700, height=700,color='Common_words')\n",
        "fig.show()"
      ],
      "metadata": {
        "id": "Ka_5TX0gIdxm",
        "outputId": "8ed68c77-9849-4637-f5a7-8ff9aa603bcb",
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 717
        }
      },
      "execution_count": 73,
      "outputs": [
        {
          "output_type": "display_data",
          "data": {
            "text/html": [
              "<html>\n",
              "<head><meta charset=\"utf-8\" /></head>\n",
              "<body>\n",
              "    <div>            <script src=\"https://cdnjs.cloudflare.com/ajax/libs/mathjax/2.7.5/MathJax.js?config=TeX-AMS-MML_SVG\"></script><script type=\"text/javascript\">if (window.MathJax) {MathJax.Hub.Config({SVG: {font: \"STIX-Web\"}});}</script>                <script type=\"text/javascript\">window.PlotlyConfig = {MathJaxConfig: 'local'};</script>\n",
              "        <script src=\"https://cdn.plot.ly/plotly-2.8.3.min.js\"></script>                <div id=\"1926735e-65df-47e3-ac1c-fcacd37220cc\" class=\"plotly-graph-div\" style=\"height:700px; width:700px;\"></div>            <script type=\"text/javascript\">                                    window.PLOTLYENV=window.PLOTLYENV || {};                                    if (document.getElementById(\"1926735e-65df-47e3-ac1c-fcacd37220cc\")) {                    Plotly.newPlot(                        \"1926735e-65df-47e3-ac1c-fcacd37220cc\",                        [{\"alignmentgroup\":\"True\",\"hovertemplate\":\"Common_words=%{y}<br>count=%{x}<extra></extra>\",\"legendgroup\":\"love\",\"marker\":{\"color\":\"#636efa\",\"pattern\":{\"shape\":\"\"}},\"name\":\"love\",\"offsetgroup\":\"love\",\"orientation\":\"h\",\"showlegend\":true,\"textposition\":\"auto\",\"x\":[2985],\"xaxis\":\"x\",\"y\":[\"love\"],\"yaxis\":\"y\",\"type\":\"bar\"},{\"alignmentgroup\":\"True\",\"hovertemplate\":\"Common_words=%{y}<br>count=%{x}<extra></extra>\",\"legendgroup\":\"day\",\"marker\":{\"color\":\"#EF553B\",\"pattern\":{\"shape\":\"\"}},\"name\":\"day\",\"offsetgroup\":\"day\",\"orientation\":\"h\",\"showlegend\":true,\"textposition\":\"auto\",\"x\":[2256],\"xaxis\":\"x\",\"y\":[\"day\"],\"yaxis\":\"y\",\"type\":\"bar\"},{\"alignmentgroup\":\"True\",\"hovertemplate\":\"Common_words=%{y}<br>count=%{x}<extra></extra>\",\"legendgroup\":\"get\",\"marker\":{\"color\":\"#00cc96\",\"pattern\":{\"shape\":\"\"}},\"name\":\"get\",\"offsetgroup\":\"get\",\"orientation\":\"h\",\"showlegend\":true,\"textposition\":\"auto\",\"x\":[1848],\"xaxis\":\"x\",\"y\":[\"get\"],\"yaxis\":\"y\",\"type\":\"bar\"},{\"alignmentgroup\":\"True\",\"hovertemplate\":\"Common_words=%{y}<br>count=%{x}<extra></extra>\",\"legendgroup\":\"happy\",\"marker\":{\"color\":\"#ab63fa\",\"pattern\":{\"shape\":\"\"}},\"name\":\"happy\",\"offsetgroup\":\"happy\",\"orientation\":\"h\",\"showlegend\":true,\"textposition\":\"auto\",\"x\":[1691],\"xaxis\":\"x\",\"y\":[\"happy\"],\"yaxis\":\"y\",\"type\":\"bar\"},{\"alignmentgroup\":\"True\",\"hovertemplate\":\"Common_words=%{y}<br>count=%{x}<extra></extra>\",\"legendgroup\":\"go\",\"marker\":{\"color\":\"#FFA15A\",\"pattern\":{\"shape\":\"\"}},\"name\":\"go\",\"offsetgroup\":\"go\",\"orientation\":\"h\",\"showlegend\":true,\"textposition\":\"auto\",\"x\":[1413],\"xaxis\":\"x\",\"y\":[\"go\"],\"yaxis\":\"y\",\"type\":\"bar\"},{\"alignmentgroup\":\"True\",\"hovertemplate\":\"Common_words=%{y}<br>count=%{x}<extra></extra>\",\"legendgroup\":\"time\",\"marker\":{\"color\":\"#19d3f3\",\"pattern\":{\"shape\":\"\"}},\"name\":\"time\",\"offsetgroup\":\"time\",\"orientation\":\"h\",\"showlegend\":true,\"textposition\":\"auto\",\"x\":[1236],\"xaxis\":\"x\",\"y\":[\"time\"],\"yaxis\":\"y\",\"type\":\"bar\"},{\"alignmentgroup\":\"True\",\"hovertemplate\":\"Common_words=%{y}<br>count=%{x}<extra></extra>\",\"legendgroup\":\"make\",\"marker\":{\"color\":\"#FF6692\",\"pattern\":{\"shape\":\"\"}},\"name\":\"make\",\"offsetgroup\":\"make\",\"orientation\":\"h\",\"showlegend\":true,\"textposition\":\"auto\",\"x\":[1209],\"xaxis\":\"x\",\"y\":[\"make\"],\"yaxis\":\"y\",\"type\":\"bar\"},{\"alignmentgroup\":\"True\",\"hovertemplate\":\"Common_words=%{y}<br>count=%{x}<extra></extra>\",\"legendgroup\":\"life\",\"marker\":{\"color\":\"#B6E880\",\"pattern\":{\"shape\":\"\"}},\"name\":\"life\",\"offsetgroup\":\"life\",\"orientation\":\"h\",\"showlegend\":true,\"textposition\":\"auto\",\"x\":[1127],\"xaxis\":\"x\",\"y\":[\"life\"],\"yaxis\":\"y\",\"type\":\"bar\"},{\"alignmentgroup\":\"True\",\"hovertemplate\":\"Common_words=%{y}<br>count=%{x}<extra></extra>\",\"legendgroup\":\"like\",\"marker\":{\"color\":\"#FF97FF\",\"pattern\":{\"shape\":\"\"}},\"name\":\"like\",\"offsetgroup\":\"like\",\"orientation\":\"h\",\"showlegend\":true,\"textposition\":\"auto\",\"x\":[1099],\"xaxis\":\"x\",\"y\":[\"like\"],\"yaxis\":\"y\",\"type\":\"bar\"},{\"alignmentgroup\":\"True\",\"hovertemplate\":\"Common_words=%{y}<br>count=%{x}<extra></extra>\",\"legendgroup\":\"today\",\"marker\":{\"color\":\"#FECB52\",\"pattern\":{\"shape\":\"\"}},\"name\":\"today\",\"offsetgroup\":\"today\",\"orientation\":\"h\",\"showlegend\":true,\"textposition\":\"auto\",\"x\":[1005],\"xaxis\":\"x\",\"y\":[\"today\"],\"yaxis\":\"y\",\"type\":\"bar\"},{\"alignmentgroup\":\"True\",\"hovertemplate\":\"Common_words=%{y}<br>count=%{x}<extra></extra>\",\"legendgroup\":\"new\",\"marker\":{\"color\":\"#636efa\",\"pattern\":{\"shape\":\"\"}},\"name\":\"new\",\"offsetgroup\":\"new\",\"orientation\":\"h\",\"showlegend\":true,\"textposition\":\"auto\",\"x\":[987],\"xaxis\":\"x\",\"y\":[\"new\"],\"yaxis\":\"y\",\"type\":\"bar\"},{\"alignmentgroup\":\"True\",\"hovertemplate\":\"Common_words=%{y}<br>count=%{x}<extra></extra>\",\"legendgroup\":\"see\",\"marker\":{\"color\":\"#EF553B\",\"pattern\":{\"shape\":\"\"}},\"name\":\"see\",\"offsetgroup\":\"see\",\"orientation\":\"h\",\"showlegend\":true,\"textposition\":\"auto\",\"x\":[938],\"xaxis\":\"x\",\"y\":[\"see\"],\"yaxis\":\"y\",\"type\":\"bar\"},{\"alignmentgroup\":\"True\",\"hovertemplate\":\"Common_words=%{y}<br>count=%{x}<extra></extra>\",\"legendgroup\":\"positive\",\"marker\":{\"color\":\"#00cc96\",\"pattern\":{\"shape\":\"\"}},\"name\":\"positive\",\"offsetgroup\":\"positive\",\"orientation\":\"h\",\"showlegend\":true,\"textposition\":\"auto\",\"x\":[934],\"xaxis\":\"x\",\"y\":[\"positive\"],\"yaxis\":\"y\",\"type\":\"bar\"},{\"alignmentgroup\":\"True\",\"hovertemplate\":\"Common_words=%{y}<br>count=%{x}<extra></extra>\",\"legendgroup\":\"father\",\"marker\":{\"color\":\"#ab63fa\",\"pattern\":{\"shape\":\"\"}},\"name\":\"father\",\"offsetgroup\":\"father\",\"orientation\":\"h\",\"showlegend\":true,\"textposition\":\"auto\",\"x\":[925],\"xaxis\":\"x\",\"y\":[\"father\"],\"yaxis\":\"y\",\"type\":\"bar\"},{\"alignmentgroup\":\"True\",\"hovertemplate\":\"Common_words=%{y}<br>count=%{x}<extra></extra>\",\"legendgroup\":\"thankful\",\"marker\":{\"color\":\"#FFA15A\",\"pattern\":{\"shape\":\"\"}},\"name\":\"thankful\",\"offsetgroup\":\"thankful\",\"orientation\":\"h\",\"showlegend\":true,\"textposition\":\"auto\",\"x\":[925],\"xaxis\":\"x\",\"y\":[\"thankful\"],\"yaxis\":\"y\",\"type\":\"bar\"},{\"alignmentgroup\":\"True\",\"hovertemplate\":\"Common_words=%{y}<br>count=%{x}<extra></extra>\",\"legendgroup\":\"smile\",\"marker\":{\"color\":\"#19d3f3\",\"pattern\":{\"shape\":\"\"}},\"name\":\"smile\",\"offsetgroup\":\"smile\",\"orientation\":\"h\",\"showlegend\":true,\"textposition\":\"auto\",\"x\":[891],\"xaxis\":\"x\",\"y\":[\"smile\"],\"yaxis\":\"y\",\"type\":\"bar\"},{\"alignmentgroup\":\"True\",\"hovertemplate\":\"Common_words=%{y}<br>count=%{x}<extra></extra>\",\"legendgroup\":\"people\",\"marker\":{\"color\":\"#FF6692\",\"pattern\":{\"shape\":\"\"}},\"name\":\"people\",\"offsetgroup\":\"people\",\"orientation\":\"h\",\"showlegend\":true,\"textposition\":\"auto\",\"x\":[885],\"xaxis\":\"x\",\"y\":[\"people\"],\"yaxis\":\"y\",\"type\":\"bar\"},{\"alignmentgroup\":\"True\",\"hovertemplate\":\"Common_words=%{y}<br>count=%{x}<extra></extra>\",\"legendgroup\":\"bihday\",\"marker\":{\"color\":\"#B6E880\",\"pattern\":{\"shape\":\"\"}},\"name\":\"bihday\",\"offsetgroup\":\"bihday\",\"orientation\":\"h\",\"showlegend\":true,\"textposition\":\"auto\",\"x\":[855],\"xaxis\":\"x\",\"y\":[\"bihday\"],\"yaxis\":\"y\",\"type\":\"bar\"},{\"alignmentgroup\":\"True\",\"hovertemplate\":\"Common_words=%{y}<br>count=%{x}<extra></extra>\",\"legendgroup\":\"good\",\"marker\":{\"color\":\"#FF97FF\",\"pattern\":{\"shape\":\"\"}},\"name\":\"good\",\"offsetgroup\":\"good\",\"orientation\":\"h\",\"showlegend\":true,\"textposition\":\"auto\",\"x\":[850],\"xaxis\":\"x\",\"y\":[\"good\"],\"yaxis\":\"y\",\"type\":\"bar\"},{\"alignmentgroup\":\"True\",\"hovertemplate\":\"Common_words=%{y}<br>count=%{x}<extra></extra>\",\"legendgroup\":\"cant\",\"marker\":{\"color\":\"#FECB52\",\"pattern\":{\"shape\":\"\"}},\"name\":\"cant\",\"offsetgroup\":\"cant\",\"orientation\":\"h\",\"showlegend\":true,\"textposition\":\"auto\",\"x\":[813],\"xaxis\":\"x\",\"y\":[\"cant\"],\"yaxis\":\"y\",\"type\":\"bar\"}],                        {\"template\":{\"data\":{\"bar\":[{\"error_x\":{\"color\":\"#2a3f5f\"},\"error_y\":{\"color\":\"#2a3f5f\"},\"marker\":{\"line\":{\"color\":\"#E5ECF6\",\"width\":0.5},\"pattern\":{\"fillmode\":\"overlay\",\"size\":10,\"solidity\":0.2}},\"type\":\"bar\"}],\"barpolar\":[{\"marker\":{\"line\":{\"color\":\"#E5ECF6\",\"width\":0.5},\"pattern\":{\"fillmode\":\"overlay\",\"size\":10,\"solidity\":0.2}},\"type\":\"barpolar\"}],\"carpet\":[{\"aaxis\":{\"endlinecolor\":\"#2a3f5f\",\"gridcolor\":\"white\",\"linecolor\":\"white\",\"minorgridcolor\":\"white\",\"startlinecolor\":\"#2a3f5f\"},\"baxis\":{\"endlinecolor\":\"#2a3f5f\",\"gridcolor\":\"white\",\"linecolor\":\"white\",\"minorgridcolor\":\"white\",\"startlinecolor\":\"#2a3f5f\"},\"type\":\"carpet\"}],\"choropleth\":[{\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"},\"type\":\"choropleth\"}],\"contour\":[{\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"},\"colorscale\":[[0.0,\"#0d0887\"],[0.1111111111111111,\"#46039f\"],[0.2222222222222222,\"#7201a8\"],[0.3333333333333333,\"#9c179e\"],[0.4444444444444444,\"#bd3786\"],[0.5555555555555556,\"#d8576b\"],[0.6666666666666666,\"#ed7953\"],[0.7777777777777778,\"#fb9f3a\"],[0.8888888888888888,\"#fdca26\"],[1.0,\"#f0f921\"]],\"type\":\"contour\"}],\"contourcarpet\":[{\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"},\"type\":\"contourcarpet\"}],\"heatmap\":[{\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"},\"colorscale\":[[0.0,\"#0d0887\"],[0.1111111111111111,\"#46039f\"],[0.2222222222222222,\"#7201a8\"],[0.3333333333333333,\"#9c179e\"],[0.4444444444444444,\"#bd3786\"],[0.5555555555555556,\"#d8576b\"],[0.6666666666666666,\"#ed7953\"],[0.7777777777777778,\"#fb9f3a\"],[0.8888888888888888,\"#fdca26\"],[1.0,\"#f0f921\"]],\"type\":\"heatmap\"}],\"heatmapgl\":[{\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"},\"colorscale\":[[0.0,\"#0d0887\"],[0.1111111111111111,\"#46039f\"],[0.2222222222222222,\"#7201a8\"],[0.3333333333333333,\"#9c179e\"],[0.4444444444444444,\"#bd3786\"],[0.5555555555555556,\"#d8576b\"],[0.6666666666666666,\"#ed7953\"],[0.7777777777777778,\"#fb9f3a\"],[0.8888888888888888,\"#fdca26\"],[1.0,\"#f0f921\"]],\"type\":\"heatmapgl\"}],\"histogram\":[{\"marker\":{\"pattern\":{\"fillmode\":\"overlay\",\"size\":10,\"solidity\":0.2}},\"type\":\"histogram\"}],\"histogram2d\":[{\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"},\"colorscale\":[[0.0,\"#0d0887\"],[0.1111111111111111,\"#46039f\"],[0.2222222222222222,\"#7201a8\"],[0.3333333333333333,\"#9c179e\"],[0.4444444444444444,\"#bd3786\"],[0.5555555555555556,\"#d8576b\"],[0.6666666666666666,\"#ed7953\"],[0.7777777777777778,\"#fb9f3a\"],[0.8888888888888888,\"#fdca26\"],[1.0,\"#f0f921\"]],\"type\":\"histogram2d\"}],\"histogram2dcontour\":[{\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"},\"colorscale\":[[0.0,\"#0d0887\"],[0.1111111111111111,\"#46039f\"],[0.2222222222222222,\"#7201a8\"],[0.3333333333333333,\"#9c179e\"],[0.4444444444444444,\"#bd3786\"],[0.5555555555555556,\"#d8576b\"],[0.6666666666666666,\"#ed7953\"],[0.7777777777777778,\"#fb9f3a\"],[0.8888888888888888,\"#fdca26\"],[1.0,\"#f0f921\"]],\"type\":\"histogram2dcontour\"}],\"mesh3d\":[{\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"},\"type\":\"mesh3d\"}],\"parcoords\":[{\"line\":{\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"}},\"type\":\"parcoords\"}],\"pie\":[{\"automargin\":true,\"type\":\"pie\"}],\"scatter\":[{\"marker\":{\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"}},\"type\":\"scatter\"}],\"scatter3d\":[{\"line\":{\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"}},\"marker\":{\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"}},\"type\":\"scatter3d\"}],\"scattercarpet\":[{\"marker\":{\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"}},\"type\":\"scattercarpet\"}],\"scattergeo\":[{\"marker\":{\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"}},\"type\":\"scattergeo\"}],\"scattergl\":[{\"marker\":{\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"}},\"type\":\"scattergl\"}],\"scattermapbox\":[{\"marker\":{\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"}},\"type\":\"scattermapbox\"}],\"scatterpolar\":[{\"marker\":{\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"}},\"type\":\"scatterpolar\"}],\"scatterpolargl\":[{\"marker\":{\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"}},\"type\":\"scatterpolargl\"}],\"scatterternary\":[{\"marker\":{\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"}},\"type\":\"scatterternary\"}],\"surface\":[{\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"},\"colorscale\":[[0.0,\"#0d0887\"],[0.1111111111111111,\"#46039f\"],[0.2222222222222222,\"#7201a8\"],[0.3333333333333333,\"#9c179e\"],[0.4444444444444444,\"#bd3786\"],[0.5555555555555556,\"#d8576b\"],[0.6666666666666666,\"#ed7953\"],[0.7777777777777778,\"#fb9f3a\"],[0.8888888888888888,\"#fdca26\"],[1.0,\"#f0f921\"]],\"type\":\"surface\"}],\"table\":[{\"cells\":{\"fill\":{\"color\":\"#EBF0F8\"},\"line\":{\"color\":\"white\"}},\"header\":{\"fill\":{\"color\":\"#C8D4E3\"},\"line\":{\"color\":\"white\"}},\"type\":\"table\"}]},\"layout\":{\"annotationdefaults\":{\"arrowcolor\":\"#2a3f5f\",\"arrowhead\":0,\"arrowwidth\":1},\"autotypenumbers\":\"strict\",\"coloraxis\":{\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"}},\"colorscale\":{\"diverging\":[[0,\"#8e0152\"],[0.1,\"#c51b7d\"],[0.2,\"#de77ae\"],[0.3,\"#f1b6da\"],[0.4,\"#fde0ef\"],[0.5,\"#f7f7f7\"],[0.6,\"#e6f5d0\"],[0.7,\"#b8e186\"],[0.8,\"#7fbc41\"],[0.9,\"#4d9221\"],[1,\"#276419\"]],\"sequential\":[[0.0,\"#0d0887\"],[0.1111111111111111,\"#46039f\"],[0.2222222222222222,\"#7201a8\"],[0.3333333333333333,\"#9c179e\"],[0.4444444444444444,\"#bd3786\"],[0.5555555555555556,\"#d8576b\"],[0.6666666666666666,\"#ed7953\"],[0.7777777777777778,\"#fb9f3a\"],[0.8888888888888888,\"#fdca26\"],[1.0,\"#f0f921\"]],\"sequentialminus\":[[0.0,\"#0d0887\"],[0.1111111111111111,\"#46039f\"],[0.2222222222222222,\"#7201a8\"],[0.3333333333333333,\"#9c179e\"],[0.4444444444444444,\"#bd3786\"],[0.5555555555555556,\"#d8576b\"],[0.6666666666666666,\"#ed7953\"],[0.7777777777777778,\"#fb9f3a\"],[0.8888888888888888,\"#fdca26\"],[1.0,\"#f0f921\"]]},\"colorway\":[\"#636efa\",\"#EF553B\",\"#00cc96\",\"#ab63fa\",\"#FFA15A\",\"#19d3f3\",\"#FF6692\",\"#B6E880\",\"#FF97FF\",\"#FECB52\"],\"font\":{\"color\":\"#2a3f5f\"},\"geo\":{\"bgcolor\":\"white\",\"lakecolor\":\"white\",\"landcolor\":\"#E5ECF6\",\"showlakes\":true,\"showland\":true,\"subunitcolor\":\"white\"},\"hoverlabel\":{\"align\":\"left\"},\"hovermode\":\"closest\",\"mapbox\":{\"style\":\"light\"},\"paper_bgcolor\":\"white\",\"plot_bgcolor\":\"#E5ECF6\",\"polar\":{\"angularaxis\":{\"gridcolor\":\"white\",\"linecolor\":\"white\",\"ticks\":\"\"},\"bgcolor\":\"#E5ECF6\",\"radialaxis\":{\"gridcolor\":\"white\",\"linecolor\":\"white\",\"ticks\":\"\"}},\"scene\":{\"xaxis\":{\"backgroundcolor\":\"#E5ECF6\",\"gridcolor\":\"white\",\"gridwidth\":2,\"linecolor\":\"white\",\"showbackground\":true,\"ticks\":\"\",\"zerolinecolor\":\"white\"},\"yaxis\":{\"backgroundcolor\":\"#E5ECF6\",\"gridcolor\":\"white\",\"gridwidth\":2,\"linecolor\":\"white\",\"showbackground\":true,\"ticks\":\"\",\"zerolinecolor\":\"white\"},\"zaxis\":{\"backgroundcolor\":\"#E5ECF6\",\"gridcolor\":\"white\",\"gridwidth\":2,\"linecolor\":\"white\",\"showbackground\":true,\"ticks\":\"\",\"zerolinecolor\":\"white\"}},\"shapedefaults\":{\"line\":{\"color\":\"#2a3f5f\"}},\"ternary\":{\"aaxis\":{\"gridcolor\":\"white\",\"linecolor\":\"white\",\"ticks\":\"\"},\"baxis\":{\"gridcolor\":\"white\",\"linecolor\":\"white\",\"ticks\":\"\"},\"bgcolor\":\"#E5ECF6\",\"caxis\":{\"gridcolor\":\"white\",\"linecolor\":\"white\",\"ticks\":\"\"}},\"title\":{\"x\":0.05},\"xaxis\":{\"automargin\":true,\"gridcolor\":\"white\",\"linecolor\":\"white\",\"ticks\":\"\",\"title\":{\"standoff\":15},\"zerolinecolor\":\"white\",\"zerolinewidth\":2},\"yaxis\":{\"automargin\":true,\"gridcolor\":\"white\",\"linecolor\":\"white\",\"ticks\":\"\",\"title\":{\"standoff\":15},\"zerolinecolor\":\"white\",\"zerolinewidth\":2}}},\"xaxis\":{\"anchor\":\"y\",\"domain\":[0.0,1.0],\"title\":{\"text\":\"count\"}},\"yaxis\":{\"anchor\":\"x\",\"domain\":[0.0,1.0],\"title\":{\"text\":\"Common_words\"},\"categoryorder\":\"array\",\"categoryarray\":[\"cant\",\"good\",\"bihday\",\"people\",\"smile\",\"thankful\",\"father\",\"positive\",\"see\",\"new\",\"today\",\"like\",\"life\",\"make\",\"time\",\"go\",\"happy\",\"get\",\"day\",\"love\"]},\"legend\":{\"title\":{\"text\":\"Common_words\"},\"tracegroupgap\":0},\"title\":{\"text\":\"Commmon Words in Selected Text\"},\"barmode\":\"relative\",\"height\":700,\"width\":700},                        {\"responsive\": true}                    ).then(function(){\n",
              "                            \n",
              "var gd = document.getElementById('1926735e-65df-47e3-ac1c-fcacd37220cc');\n",
              "var x = new MutationObserver(function (mutations, observer) {{\n",
              "        var display = window.getComputedStyle(gd).display;\n",
              "        if (!display || display === 'none') {{\n",
              "            console.log([gd, 'removed!']);\n",
              "            Plotly.purge(gd);\n",
              "            observer.disconnect();\n",
              "        }}\n",
              "}});\n",
              "\n",
              "// Listen for the removal of the full notebook cells\n",
              "var notebookContainer = gd.closest('#notebook-container');\n",
              "if (notebookContainer) {{\n",
              "    x.observe(notebookContainer, {childList: true});\n",
              "}}\n",
              "\n",
              "// Listen for the clearing of the current output cell\n",
              "var outputEl = gd.closest('.output');\n",
              "if (outputEl) {{\n",
              "    x.observe(outputEl, {childList: true});\n",
              "}}\n",
              "\n",
              "                        })                };                            </script>        </div>\n",
              "</body>\n",
              "</html>"
            ]
          },
          "metadata": {}
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "fig = px.treemap(temp, path=['Common_words'], values='count',title='Tree of Most Common Words')\n",
        "fig.show()"
      ],
      "metadata": {
        "id": "5Acnc3x7IyKK",
        "outputId": "04ba3802-9056-41e0-aff9-3e0c316d6094",
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 542
        }
      },
      "execution_count": 74,
      "outputs": [
        {
          "output_type": "display_data",
          "data": {
            "text/html": [
              "<html>\n",
              "<head><meta charset=\"utf-8\" /></head>\n",
              "<body>\n",
              "    <div>            <script src=\"https://cdnjs.cloudflare.com/ajax/libs/mathjax/2.7.5/MathJax.js?config=TeX-AMS-MML_SVG\"></script><script type=\"text/javascript\">if (window.MathJax) {MathJax.Hub.Config({SVG: {font: \"STIX-Web\"}});}</script>                <script type=\"text/javascript\">window.PlotlyConfig = {MathJaxConfig: 'local'};</script>\n",
              "        <script src=\"https://cdn.plot.ly/plotly-2.8.3.min.js\"></script>                <div id=\"0a42760e-9235-4ea9-93cc-db7b5cf0622e\" class=\"plotly-graph-div\" style=\"height:525px; width:100%;\"></div>            <script type=\"text/javascript\">                                    window.PLOTLYENV=window.PLOTLYENV || {};                                    if (document.getElementById(\"0a42760e-9235-4ea9-93cc-db7b5cf0622e\")) {                    Plotly.newPlot(                        \"0a42760e-9235-4ea9-93cc-db7b5cf0622e\",                        [{\"branchvalues\":\"total\",\"domain\":{\"x\":[0.0,1.0],\"y\":[0.0,1.0]},\"hovertemplate\":\"labels=%{label}<br>count=%{value}<br>parent=%{parent}<br>id=%{id}<extra></extra>\",\"ids\":[\"bihday\",\"cant\",\"day\",\"father\",\"get\",\"go\",\"good\",\"happy\",\"life\",\"like\",\"love\",\"make\",\"new\",\"people\",\"positive\",\"see\",\"smile\",\"thankful\",\"time\",\"today\"],\"labels\":[\"bihday\",\"cant\",\"day\",\"father\",\"get\",\"go\",\"good\",\"happy\",\"life\",\"like\",\"love\",\"make\",\"new\",\"people\",\"positive\",\"see\",\"smile\",\"thankful\",\"time\",\"today\"],\"name\":\"\",\"parents\":[\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\"],\"values\":[855,813,2256,925,1848,1413,850,1691,1127,1099,2985,1209,987,885,934,938,891,925,1236,1005],\"type\":\"treemap\"}],                        {\"template\":{\"data\":{\"bar\":[{\"error_x\":{\"color\":\"#2a3f5f\"},\"error_y\":{\"color\":\"#2a3f5f\"},\"marker\":{\"line\":{\"color\":\"#E5ECF6\",\"width\":0.5},\"pattern\":{\"fillmode\":\"overlay\",\"size\":10,\"solidity\":0.2}},\"type\":\"bar\"}],\"barpolar\":[{\"marker\":{\"line\":{\"color\":\"#E5ECF6\",\"width\":0.5},\"pattern\":{\"fillmode\":\"overlay\",\"size\":10,\"solidity\":0.2}},\"type\":\"barpolar\"}],\"carpet\":[{\"aaxis\":{\"endlinecolor\":\"#2a3f5f\",\"gridcolor\":\"white\",\"linecolor\":\"white\",\"minorgridcolor\":\"white\",\"startlinecolor\":\"#2a3f5f\"},\"baxis\":{\"endlinecolor\":\"#2a3f5f\",\"gridcolor\":\"white\",\"linecolor\":\"white\",\"minorgridcolor\":\"white\",\"startlinecolor\":\"#2a3f5f\"},\"type\":\"carpet\"}],\"choropleth\":[{\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"},\"type\":\"choropleth\"}],\"contour\":[{\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"},\"colorscale\":[[0.0,\"#0d0887\"],[0.1111111111111111,\"#46039f\"],[0.2222222222222222,\"#7201a8\"],[0.3333333333333333,\"#9c179e\"],[0.4444444444444444,\"#bd3786\"],[0.5555555555555556,\"#d8576b\"],[0.6666666666666666,\"#ed7953\"],[0.7777777777777778,\"#fb9f3a\"],[0.8888888888888888,\"#fdca26\"],[1.0,\"#f0f921\"]],\"type\":\"contour\"}],\"contourcarpet\":[{\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"},\"type\":\"contourcarpet\"}],\"heatmap\":[{\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"},\"colorscale\":[[0.0,\"#0d0887\"],[0.1111111111111111,\"#46039f\"],[0.2222222222222222,\"#7201a8\"],[0.3333333333333333,\"#9c179e\"],[0.4444444444444444,\"#bd3786\"],[0.5555555555555556,\"#d8576b\"],[0.6666666666666666,\"#ed7953\"],[0.7777777777777778,\"#fb9f3a\"],[0.8888888888888888,\"#fdca26\"],[1.0,\"#f0f921\"]],\"type\":\"heatmap\"}],\"heatmapgl\":[{\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"},\"colorscale\":[[0.0,\"#0d0887\"],[0.1111111111111111,\"#46039f\"],[0.2222222222222222,\"#7201a8\"],[0.3333333333333333,\"#9c179e\"],[0.4444444444444444,\"#bd3786\"],[0.5555555555555556,\"#d8576b\"],[0.6666666666666666,\"#ed7953\"],[0.7777777777777778,\"#fb9f3a\"],[0.8888888888888888,\"#fdca26\"],[1.0,\"#f0f921\"]],\"type\":\"heatmapgl\"}],\"histogram\":[{\"marker\":{\"pattern\":{\"fillmode\":\"overlay\",\"size\":10,\"solidity\":0.2}},\"type\":\"histogram\"}],\"histogram2d\":[{\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"},\"colorscale\":[[0.0,\"#0d0887\"],[0.1111111111111111,\"#46039f\"],[0.2222222222222222,\"#7201a8\"],[0.3333333333333333,\"#9c179e\"],[0.4444444444444444,\"#bd3786\"],[0.5555555555555556,\"#d8576b\"],[0.6666666666666666,\"#ed7953\"],[0.7777777777777778,\"#fb9f3a\"],[0.8888888888888888,\"#fdca26\"],[1.0,\"#f0f921\"]],\"type\":\"histogram2d\"}],\"histogram2dcontour\":[{\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"},\"colorscale\":[[0.0,\"#0d0887\"],[0.1111111111111111,\"#46039f\"],[0.2222222222222222,\"#7201a8\"],[0.3333333333333333,\"#9c179e\"],[0.4444444444444444,\"#bd3786\"],[0.5555555555555556,\"#d8576b\"],[0.6666666666666666,\"#ed7953\"],[0.7777777777777778,\"#fb9f3a\"],[0.8888888888888888,\"#fdca26\"],[1.0,\"#f0f921\"]],\"type\":\"histogram2dcontour\"}],\"mesh3d\":[{\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"},\"type\":\"mesh3d\"}],\"parcoords\":[{\"line\":{\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"}},\"type\":\"parcoords\"}],\"pie\":[{\"automargin\":true,\"type\":\"pie\"}],\"scatter\":[{\"marker\":{\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"}},\"type\":\"scatter\"}],\"scatter3d\":[{\"line\":{\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"}},\"marker\":{\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"}},\"type\":\"scatter3d\"}],\"scattercarpet\":[{\"marker\":{\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"}},\"type\":\"scattercarpet\"}],\"scattergeo\":[{\"marker\":{\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"}},\"type\":\"scattergeo\"}],\"scattergl\":[{\"marker\":{\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"}},\"type\":\"scattergl\"}],\"scattermapbox\":[{\"marker\":{\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"}},\"type\":\"scattermapbox\"}],\"scatterpolar\":[{\"marker\":{\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"}},\"type\":\"scatterpolar\"}],\"scatterpolargl\":[{\"marker\":{\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"}},\"type\":\"scatterpolargl\"}],\"scatterternary\":[{\"marker\":{\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"}},\"type\":\"scatterternary\"}],\"surface\":[{\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"},\"colorscale\":[[0.0,\"#0d0887\"],[0.1111111111111111,\"#46039f\"],[0.2222222222222222,\"#7201a8\"],[0.3333333333333333,\"#9c179e\"],[0.4444444444444444,\"#bd3786\"],[0.5555555555555556,\"#d8576b\"],[0.6666666666666666,\"#ed7953\"],[0.7777777777777778,\"#fb9f3a\"],[0.8888888888888888,\"#fdca26\"],[1.0,\"#f0f921\"]],\"type\":\"surface\"}],\"table\":[{\"cells\":{\"fill\":{\"color\":\"#EBF0F8\"},\"line\":{\"color\":\"white\"}},\"header\":{\"fill\":{\"color\":\"#C8D4E3\"},\"line\":{\"color\":\"white\"}},\"type\":\"table\"}]},\"layout\":{\"annotationdefaults\":{\"arrowcolor\":\"#2a3f5f\",\"arrowhead\":0,\"arrowwidth\":1},\"autotypenumbers\":\"strict\",\"coloraxis\":{\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"}},\"colorscale\":{\"diverging\":[[0,\"#8e0152\"],[0.1,\"#c51b7d\"],[0.2,\"#de77ae\"],[0.3,\"#f1b6da\"],[0.4,\"#fde0ef\"],[0.5,\"#f7f7f7\"],[0.6,\"#e6f5d0\"],[0.7,\"#b8e186\"],[0.8,\"#7fbc41\"],[0.9,\"#4d9221\"],[1,\"#276419\"]],\"sequential\":[[0.0,\"#0d0887\"],[0.1111111111111111,\"#46039f\"],[0.2222222222222222,\"#7201a8\"],[0.3333333333333333,\"#9c179e\"],[0.4444444444444444,\"#bd3786\"],[0.5555555555555556,\"#d8576b\"],[0.6666666666666666,\"#ed7953\"],[0.7777777777777778,\"#fb9f3a\"],[0.8888888888888888,\"#fdca26\"],[1.0,\"#f0f921\"]],\"sequentialminus\":[[0.0,\"#0d0887\"],[0.1111111111111111,\"#46039f\"],[0.2222222222222222,\"#7201a8\"],[0.3333333333333333,\"#9c179e\"],[0.4444444444444444,\"#bd3786\"],[0.5555555555555556,\"#d8576b\"],[0.6666666666666666,\"#ed7953\"],[0.7777777777777778,\"#fb9f3a\"],[0.8888888888888888,\"#fdca26\"],[1.0,\"#f0f921\"]]},\"colorway\":[\"#636efa\",\"#EF553B\",\"#00cc96\",\"#ab63fa\",\"#FFA15A\",\"#19d3f3\",\"#FF6692\",\"#B6E880\",\"#FF97FF\",\"#FECB52\"],\"font\":{\"color\":\"#2a3f5f\"},\"geo\":{\"bgcolor\":\"white\",\"lakecolor\":\"white\",\"landcolor\":\"#E5ECF6\",\"showlakes\":true,\"showland\":true,\"subunitcolor\":\"white\"},\"hoverlabel\":{\"align\":\"left\"},\"hovermode\":\"closest\",\"mapbox\":{\"style\":\"light\"},\"paper_bgcolor\":\"white\",\"plot_bgcolor\":\"#E5ECF6\",\"polar\":{\"angularaxis\":{\"gridcolor\":\"white\",\"linecolor\":\"white\",\"ticks\":\"\"},\"bgcolor\":\"#E5ECF6\",\"radialaxis\":{\"gridcolor\":\"white\",\"linecolor\":\"white\",\"ticks\":\"\"}},\"scene\":{\"xaxis\":{\"backgroundcolor\":\"#E5ECF6\",\"gridcolor\":\"white\",\"gridwidth\":2,\"linecolor\":\"white\",\"showbackground\":true,\"ticks\":\"\",\"zerolinecolor\":\"white\"},\"yaxis\":{\"backgroundcolor\":\"#E5ECF6\",\"gridcolor\":\"white\",\"gridwidth\":2,\"linecolor\":\"white\",\"showbackground\":true,\"ticks\":\"\",\"zerolinecolor\":\"white\"},\"zaxis\":{\"backgroundcolor\":\"#E5ECF6\",\"gridcolor\":\"white\",\"gridwidth\":2,\"linecolor\":\"white\",\"showbackground\":true,\"ticks\":\"\",\"zerolinecolor\":\"white\"}},\"shapedefaults\":{\"line\":{\"color\":\"#2a3f5f\"}},\"ternary\":{\"aaxis\":{\"gridcolor\":\"white\",\"linecolor\":\"white\",\"ticks\":\"\"},\"baxis\":{\"gridcolor\":\"white\",\"linecolor\":\"white\",\"ticks\":\"\"},\"bgcolor\":\"#E5ECF6\",\"caxis\":{\"gridcolor\":\"white\",\"linecolor\":\"white\",\"ticks\":\"\"}},\"title\":{\"x\":0.05},\"xaxis\":{\"automargin\":true,\"gridcolor\":\"white\",\"linecolor\":\"white\",\"ticks\":\"\",\"title\":{\"standoff\":15},\"zerolinecolor\":\"white\",\"zerolinewidth\":2},\"yaxis\":{\"automargin\":true,\"gridcolor\":\"white\",\"linecolor\":\"white\",\"ticks\":\"\",\"title\":{\"standoff\":15},\"zerolinecolor\":\"white\",\"zerolinewidth\":2}}},\"legend\":{\"tracegroupgap\":0},\"title\":{\"text\":\"Tree of Most Common Words\"}},                        {\"responsive\": true}                    ).then(function(){\n",
              "                            \n",
              "var gd = document.getElementById('0a42760e-9235-4ea9-93cc-db7b5cf0622e');\n",
              "var x = new MutationObserver(function (mutations, observer) {{\n",
              "        var display = window.getComputedStyle(gd).display;\n",
              "        if (!display || display === 'none') {{\n",
              "            console.log([gd, 'removed!']);\n",
              "            Plotly.purge(gd);\n",
              "            observer.disconnect();\n",
              "        }}\n",
              "}});\n",
              "\n",
              "// Listen for the removal of the full notebook cells\n",
              "var notebookContainer = gd.closest('#notebook-container');\n",
              "if (notebookContainer) {{\n",
              "    x.observe(notebookContainer, {childList: true});\n",
              "}}\n",
              "\n",
              "// Listen for the clearing of the current output cell\n",
              "var outputEl = gd.closest('.output');\n",
              "if (outputEl) {{\n",
              "    x.observe(outputEl, {childList: true});\n",
              "}}\n",
              "\n",
              "                        })                };                            </script>        </div>\n",
              "</body>\n",
              "</html>"
            ]
          },
          "metadata": {}
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "from wordcloud import WordCloud\n",
        "all_words = ' '.join([text for text in df['clean_tweets'] ])\n",
        "\n",
        "wordcloud = WordCloud(width=800, height=500, random_state=21, max_font_size=110).generate(all_words)\n",
        "#random=0.30\n",
        "plt.figure(figsize=(10, 7))\n",
        "plt.imshow(wordcloud, interpolation=\"bilinear\")\n",
        "plt.axis('off')\n",
        "plt.show()"
      ],
      "metadata": {
        "id": "9A6qnh0rJS5k",
        "outputId": "49d821ad-c253-4e94-90dd-dac9e318b097",
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 380
        }
      },
      "execution_count": 75,
      "outputs": [
        {
          "output_type": "display_data",
          "data": {
            "image/png": "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\n",
            "text/plain": [
              "<Figure size 720x504 with 1 Axes>"
            ]
          },
          "metadata": {
            "needs_background": "light"
          }
        }
      ]
    },
    {
      "cell_type": "markdown",
      "source": [
        "## Bivariate"
      ],
      "metadata": {
        "id": "KSkBN_ueFDCj"
      }
    },
    {
      "cell_type": "code",
      "source": [
        "#Selecting the negative tweets\n",
        "negative_tweets = df_eda[df_eda['label']== 1]\n",
        "negative_tweets.head()"
      ],
      "metadata": {
        "id": "1tRey6vzJvi1",
        "outputId": "81582968-fd05-4fc0-b714-6eae2b845b5e",
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 191
        }
      },
      "execution_count": 76,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/html": [
              "\n",
              "  <div id=\"df-c324b496-a9ec-44e9-b1f9-f6e24aad7a36\">\n",
              "    <div class=\"colab-df-container\">\n",
              "      <div>\n",
              "<style scoped>\n",
              "    .dataframe tbody tr th:only-of-type {\n",
              "        vertical-align: middle;\n",
              "    }\n",
              "\n",
              "    .dataframe tbody tr th {\n",
              "        vertical-align: top;\n",
              "    }\n",
              "\n",
              "    .dataframe thead th {\n",
              "        text-align: right;\n",
              "    }\n",
              "</style>\n",
              "<table border=\"1\" class=\"dataframe\">\n",
              "  <thead>\n",
              "    <tr style=\"text-align: right;\">\n",
              "      <th></th>\n",
              "      <th>id</th>\n",
              "      <th>label</th>\n",
              "      <th>tweet</th>\n",
              "      <th>clean_tweets</th>\n",
              "    </tr>\n",
              "  </thead>\n",
              "  <tbody>\n",
              "    <tr>\n",
              "      <th>13</th>\n",
              "      <td>14</td>\n",
              "      <td>1</td>\n",
              "      <td>@user #cnn calls #michigan middle school 'buil...</td>\n",
              "      <td>[cnn, call, michigan, middle, school, build, w...</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>14</th>\n",
              "      <td>15</td>\n",
              "      <td>1</td>\n",
              "      <td>no comment!  in #australia   #opkillingbay #se...</td>\n",
              "      <td>[comment, australia, opkillingbay, seashepherd...</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>17</th>\n",
              "      <td>18</td>\n",
              "      <td>1</td>\n",
              "      <td>retweet if you agree!</td>\n",
              "      <td>[retweet, agree]</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>23</th>\n",
              "      <td>24</td>\n",
              "      <td>1</td>\n",
              "      <td>@user @user lumpy says i am a . prove it lumpy.</td>\n",
              "      <td>[lumpy, say, prove, lumpy]</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>34</th>\n",
              "      <td>35</td>\n",
              "      <td>1</td>\n",
              "      <td>it's unbelievable that in the 21st century we'...</td>\n",
              "      <td>[unbelievable, 21st, century, wed, need, somet...</td>\n",
              "    </tr>\n",
              "  </tbody>\n",
              "</table>\n",
              "</div>\n",
              "      <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-c324b496-a9ec-44e9-b1f9-f6e24aad7a36')\"\n",
              "              title=\"Convert this dataframe to an interactive table.\"\n",
              "              style=\"display:none;\">\n",
              "        \n",
              "  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n",
              "       width=\"24px\">\n",
              "    <path d=\"M0 0h24v24H0V0z\" fill=\"none\"/>\n",
              "    <path d=\"M18.56 5.44l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94zm-11 1L8.5 8.5l.94-2.06 2.06-.94-2.06-.94L8.5 2.5l-.94 2.06-2.06.94zm10 10l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94z\"/><path d=\"M17.41 7.96l-1.37-1.37c-.4-.4-.92-.59-1.43-.59-.52 0-1.04.2-1.43.59L10.3 9.45l-7.72 7.72c-.78.78-.78 2.05 0 2.83L4 21.41c.39.39.9.59 1.41.59.51 0 1.02-.2 1.41-.59l7.78-7.78 2.81-2.81c.8-.78.8-2.07 0-2.86zM5.41 20L4 18.59l7.72-7.72 1.47 1.35L5.41 20z\"/>\n",
              "  </svg>\n",
              "      </button>\n",
              "      \n",
              "  <style>\n",
              "    .colab-df-container {\n",
              "      display:flex;\n",
              "      flex-wrap:wrap;\n",
              "      gap: 12px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert {\n",
              "      background-color: #E8F0FE;\n",
              "      border: none;\n",
              "      border-radius: 50%;\n",
              "      cursor: pointer;\n",
              "      display: none;\n",
              "      fill: #1967D2;\n",
              "      height: 32px;\n",
              "      padding: 0 0 0 0;\n",
              "      width: 32px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert:hover {\n",
              "      background-color: #E2EBFA;\n",
              "      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n",
              "      fill: #174EA6;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert {\n",
              "      background-color: #3B4455;\n",
              "      fill: #D2E3FC;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert:hover {\n",
              "      background-color: #434B5C;\n",
              "      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n",
              "      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n",
              "      fill: #FFFFFF;\n",
              "    }\n",
              "  </style>\n",
              "\n",
              "      <script>\n",
              "        const buttonEl =\n",
              "          document.querySelector('#df-c324b496-a9ec-44e9-b1f9-f6e24aad7a36 button.colab-df-convert');\n",
              "        buttonEl.style.display =\n",
              "          google.colab.kernel.accessAllowed ? 'block' : 'none';\n",
              "\n",
              "        async function convertToInteractive(key) {\n",
              "          const element = document.querySelector('#df-c324b496-a9ec-44e9-b1f9-f6e24aad7a36');\n",
              "          const dataTable =\n",
              "            await google.colab.kernel.invokeFunction('convertToInteractive',\n",
              "                                                     [key], {});\n",
              "          if (!dataTable) return;\n",
              "\n",
              "          const docLinkHtml = 'Like what you see? Visit the ' +\n",
              "            '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n",
              "            + ' to learn more about interactive tables.';\n",
              "          element.innerHTML = '';\n",
              "          dataTable['output_type'] = 'display_data';\n",
              "          await google.colab.output.renderOutput(dataTable, element);\n",
              "          const docLink = document.createElement('div');\n",
              "          docLink.innerHTML = docLinkHtml;\n",
              "          element.appendChild(docLink);\n",
              "        }\n",
              "      </script>\n",
              "    </div>\n",
              "  </div>\n",
              "  "
            ],
            "text/plain": [
              "    id  ...                                       clean_tweets\n",
              "13  14  ...  [cnn, call, michigan, middle, school, build, w...\n",
              "14  15  ...  [comment, australia, opkillingbay, seashepherd...\n",
              "17  18  ...                                   [retweet, agree]\n",
              "23  24  ...                         [lumpy, say, prove, lumpy]\n",
              "34  35  ...  [unbelievable, 21st, century, wed, need, somet...\n",
              "\n",
              "[5 rows x 4 columns]"
            ]
          },
          "metadata": {},
          "execution_count": 76
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "\n",
        "top = Counter([item for sublist in negative_tweets[\"clean_tweets\"] for item in sublist])\n",
        "temp_negative = pd.DataFrame(top.most_common(20))\n",
        "temp_negative.columns = ['Common_words','count']\n",
        "temp_negative.style.background_gradient(cmap='Reds')"
      ],
      "metadata": {
        "id": "4O8DbYSRL_sL",
        "outputId": "a4a07552-aaf5-4cf4-e4e1-66c234006227",
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 622
        }
      },
      "execution_count": 77,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/html": [
              "<style type=\"text/css\">\n",
              "#T_352c6_row0_col1 {\n",
              "  background-color: #67000d;\n",
              "  color: #f1f1f1;\n",
              "}\n",
              "#T_352c6_row1_col1 {\n",
              "  background-color: #f34c37;\n",
              "  color: #f1f1f1;\n",
              "}\n",
              "#T_352c6_row2_col1 {\n",
              "  background-color: #f6563d;\n",
              "  color: #f1f1f1;\n",
              "}\n",
              "#T_352c6_row3_col1 {\n",
              "  background-color: #f85d42;\n",
              "  color: #f1f1f1;\n",
              "}\n",
              "#T_352c6_row4_col1 {\n",
              "  background-color: #fb694a;\n",
              "  color: #f1f1f1;\n",
              "}\n",
              "#T_352c6_row5_col1 {\n",
              "  background-color: #fcbca2;\n",
              "  color: #000000;\n",
              "}\n",
              "#T_352c6_row6_col1 {\n",
              "  background-color: #fdc9b3;\n",
              "  color: #000000;\n",
              "}\n",
              "#T_352c6_row7_col1 {\n",
              "  background-color: #fdcab5;\n",
              "  color: #000000;\n",
              "}\n",
              "#T_352c6_row8_col1 {\n",
              "  background-color: #fdccb8;\n",
              "  color: #000000;\n",
              "}\n",
              "#T_352c6_row9_col1 {\n",
              "  background-color: #fdd2bf;\n",
              "  color: #000000;\n",
              "}\n",
              "#T_352c6_row10_col1 {\n",
              "  background-color: #fee3d7;\n",
              "  color: #000000;\n",
              "}\n",
              "#T_352c6_row11_col1 {\n",
              "  background-color: #fee9df;\n",
              "  color: #000000;\n",
              "}\n",
              "#T_352c6_row12_col1 {\n",
              "  background-color: #ffebe2;\n",
              "  color: #000000;\n",
              "}\n",
              "#T_352c6_row13_col1 {\n",
              "  background-color: #ffece4;\n",
              "  color: #000000;\n",
              "}\n",
              "#T_352c6_row14_col1 {\n",
              "  background-color: #ffeee7;\n",
              "  color: #000000;\n",
              "}\n",
              "#T_352c6_row15_col1 {\n",
              "  background-color: #fff0e8;\n",
              "  color: #000000;\n",
              "}\n",
              "#T_352c6_row16_col1 {\n",
              "  background-color: #fff3ed;\n",
              "  color: #000000;\n",
              "}\n",
              "#T_352c6_row17_col1, #T_352c6_row18_col1 {\n",
              "  background-color: #fff4ef;\n",
              "  color: #000000;\n",
              "}\n",
              "#T_352c6_row19_col1 {\n",
              "  background-color: #fff5f0;\n",
              "  color: #000000;\n",
              "}\n",
              "</style>\n",
              "<table id=\"T_352c6_\" class=\"dataframe\">\n",
              "  <thead>\n",
              "    <tr>\n",
              "      <th class=\"blank level0\" >&nbsp;</th>\n",
              "      <th class=\"col_heading level0 col0\" >Common_words</th>\n",
              "      <th class=\"col_heading level0 col1\" >count</th>\n",
              "    </tr>\n",
              "  </thead>\n",
              "  <tbody>\n",
              "    <tr>\n",
              "      <th id=\"T_352c6_level0_row0\" class=\"row_heading level0 row0\" >0</th>\n",
              "      <td id=\"T_352c6_row0_col0\" class=\"data row0 col0\" >trump</td>\n",
              "      <td id=\"T_352c6_row0_col1\" class=\"data row0 col1\" >216</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th id=\"T_352c6_level0_row1\" class=\"row_heading level0 row1\" >1</th>\n",
              "      <td id=\"T_352c6_row1_col0\" class=\"data row1 col0\" >white</td>\n",
              "      <td id=\"T_352c6_row1_col1\" class=\"data row1 col1\" >153</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th id=\"T_352c6_level0_row2\" class=\"row_heading level0 row2\" >2</th>\n",
              "      <td id=\"T_352c6_row2_col0\" class=\"data row2 col0\" >libtard</td>\n",
              "      <td id=\"T_352c6_row2_col1\" class=\"data row2 col1\" >149</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th id=\"T_352c6_level0_row3\" class=\"row_heading level0 row3\" >3</th>\n",
              "      <td id=\"T_352c6_row3_col0\" class=\"data row3 col0\" >black</td>\n",
              "      <td id=\"T_352c6_row3_col1\" class=\"data row3 col1\" >146</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th id=\"T_352c6_level0_row4\" class=\"row_heading level0 row4\" >4</th>\n",
              "      <td id=\"T_352c6_row4_col0\" class=\"data row4 col0\" >like</td>\n",
              "      <td id=\"T_352c6_row4_col1\" class=\"data row4 col1\" >141</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th id=\"T_352c6_level0_row5\" class=\"row_heading level0 row5\" >5</th>\n",
              "      <td id=\"T_352c6_row5_col0\" class=\"data row5 col0\" >racist</td>\n",
              "      <td id=\"T_352c6_row5_col1\" class=\"data row5 col1\" >103</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th id=\"T_352c6_level0_row6\" class=\"row_heading level0 row6\" >6</th>\n",
              "      <td id=\"T_352c6_row6_col0\" class=\"data row6 col0\" >politics</td>\n",
              "      <td id=\"T_352c6_row6_col1\" class=\"data row6 col1\" >97</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th id=\"T_352c6_level0_row7\" class=\"row_heading level0 row7\" >7</th>\n",
              "      <td id=\"T_352c6_row7_col0\" class=\"data row7 col0\" >say</td>\n",
              "      <td id=\"T_352c6_row7_col1\" class=\"data row7 col1\" >96</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th id=\"T_352c6_level0_row8\" class=\"row_heading level0 row8\" >8</th>\n",
              "      <td id=\"T_352c6_row8_col0\" class=\"data row8 col0\" >people</td>\n",
              "      <td id=\"T_352c6_row8_col1\" class=\"data row8 col1\" >95</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th id=\"T_352c6_level0_row9\" class=\"row_heading level0 row9\" >9</th>\n",
              "      <td id=\"T_352c6_row9_col0\" class=\"data row9 col0\" >allahsoil</td>\n",
              "      <td id=\"T_352c6_row9_col1\" class=\"data row9 col1\" >92</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th id=\"T_352c6_level0_row10\" class=\"row_heading level0 row10\" >10</th>\n",
              "      <td id=\"T_352c6_row10_col0\" class=\"data row10 col0\" >liberal</td>\n",
              "      <td id=\"T_352c6_row10_col1\" class=\"data row10 col1\" >82</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th id=\"T_352c6_level0_row11\" class=\"row_heading level0 row11\" >11</th>\n",
              "      <td id=\"T_352c6_row11_col0\" class=\"data row11 col0\" >might</td>\n",
              "      <td id=\"T_352c6_row11_col1\" class=\"data row11 col1\" >77</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th id=\"T_352c6_level0_row12\" class=\"row_heading level0 row12\" >12</th>\n",
              "      <td id=\"T_352c6_row12_col0\" class=\"data row12 col0\" >get</td>\n",
              "      <td id=\"T_352c6_row12_col1\" class=\"data row12 col1\" >75</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th id=\"T_352c6_level0_row13\" class=\"row_heading level0 row13\" >13</th>\n",
              "      <td id=\"T_352c6_row13_col0\" class=\"data row13 col0\" >sjw</td>\n",
              "      <td id=\"T_352c6_row13_col1\" class=\"data row13 col1\" >74</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th id=\"T_352c6_level0_row14\" class=\"row_heading level0 row14\" >14</th>\n",
              "      <td id=\"T_352c6_row14_col0\" class=\"data row14 col0\" >women</td>\n",
              "      <td id=\"T_352c6_row14_col1\" class=\"data row14 col1\" >72</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th id=\"T_352c6_level0_row15\" class=\"row_heading level0 row15\" >15</th>\n",
              "      <td id=\"T_352c6_row15_col0\" class=\"data row15 col0\" >new</td>\n",
              "      <td id=\"T_352c6_row15_col1\" class=\"data row15 col1\" >71</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th id=\"T_352c6_level0_row16\" class=\"row_heading level0 row16\" >16</th>\n",
              "      <td id=\"T_352c6_row16_col0\" class=\"data row16 col0\" >obama</td>\n",
              "      <td id=\"T_352c6_row16_col1\" class=\"data row16 col1\" >68</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th id=\"T_352c6_level0_row17\" class=\"row_heading level0 row17\" >17</th>\n",
              "      <td id=\"T_352c6_row17_col0\" class=\"data row17 col0\" >retweet</td>\n",
              "      <td id=\"T_352c6_row17_col1\" class=\"data row17 col1\" >67</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th id=\"T_352c6_level0_row18\" class=\"row_heading level0 row18\" >18</th>\n",
              "      <td id=\"T_352c6_row18_col0\" class=\"data row18 col0\" >dont</td>\n",
              "      <td id=\"T_352c6_row18_col1\" class=\"data row18 col1\" >67</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th id=\"T_352c6_level0_row19\" class=\"row_heading level0 row19\" >19</th>\n",
              "      <td id=\"T_352c6_row19_col0\" class=\"data row19 col0\" >hate</td>\n",
              "      <td id=\"T_352c6_row19_col1\" class=\"data row19 col1\" >66</td>\n",
              "    </tr>\n",
              "  </tbody>\n",
              "</table>\n"
            ],
            "text/plain": [
              "<pandas.io.formats.style.Styler at 0x7f6f9ed28450>"
            ]
          },
          "metadata": {},
          "execution_count": 77
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "fig = px.bar(temp_negative, x=\"count\", y=\"Common_words\", title='Most Commmon Negative Words', orientation='h', \n",
        "             width=700, height=700,color='Common_words')\n",
        "fig.show()"
      ],
      "metadata": {
        "id": "i6HTsVluNnNr",
        "outputId": "7cbeba23-0c9e-47bf-d8de-63230fcf9814",
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 717
        }
      },
      "execution_count": 78,
      "outputs": [
        {
          "output_type": "display_data",
          "data": {
            "text/html": [
              "<html>\n",
              "<head><meta charset=\"utf-8\" /></head>\n",
              "<body>\n",
              "    <div>            <script src=\"https://cdnjs.cloudflare.com/ajax/libs/mathjax/2.7.5/MathJax.js?config=TeX-AMS-MML_SVG\"></script><script type=\"text/javascript\">if (window.MathJax) {MathJax.Hub.Config({SVG: {font: \"STIX-Web\"}});}</script>                <script type=\"text/javascript\">window.PlotlyConfig = {MathJaxConfig: 'local'};</script>\n",
              "        <script src=\"https://cdn.plot.ly/plotly-2.8.3.min.js\"></script>                <div id=\"5f5959f5-6ebc-44b6-bf0a-6d3317ea121f\" class=\"plotly-graph-div\" style=\"height:700px; width:700px;\"></div>            <script type=\"text/javascript\">                                    window.PLOTLYENV=window.PLOTLYENV || {};                                    if (document.getElementById(\"5f5959f5-6ebc-44b6-bf0a-6d3317ea121f\")) {                    Plotly.newPlot(                        \"5f5959f5-6ebc-44b6-bf0a-6d3317ea121f\",                        [{\"alignmentgroup\":\"True\",\"hovertemplate\":\"Common_words=%{y}<br>count=%{x}<extra></extra>\",\"legendgroup\":\"trump\",\"marker\":{\"color\":\"#636efa\",\"pattern\":{\"shape\":\"\"}},\"name\":\"trump\",\"offsetgroup\":\"trump\",\"orientation\":\"h\",\"showlegend\":true,\"textposition\":\"auto\",\"x\":[216],\"xaxis\":\"x\",\"y\":[\"trump\"],\"yaxis\":\"y\",\"type\":\"bar\"},{\"alignmentgroup\":\"True\",\"hovertemplate\":\"Common_words=%{y}<br>count=%{x}<extra></extra>\",\"legendgroup\":\"white\",\"marker\":{\"color\":\"#EF553B\",\"pattern\":{\"shape\":\"\"}},\"name\":\"white\",\"offsetgroup\":\"white\",\"orientation\":\"h\",\"showlegend\":true,\"textposition\":\"auto\",\"x\":[153],\"xaxis\":\"x\",\"y\":[\"white\"],\"yaxis\":\"y\",\"type\":\"bar\"},{\"alignmentgroup\":\"True\",\"hovertemplate\":\"Common_words=%{y}<br>count=%{x}<extra></extra>\",\"legendgroup\":\"libtard\",\"marker\":{\"color\":\"#00cc96\",\"pattern\":{\"shape\":\"\"}},\"name\":\"libtard\",\"offsetgroup\":\"libtard\",\"orientation\":\"h\",\"showlegend\":true,\"textposition\":\"auto\",\"x\":[149],\"xaxis\":\"x\",\"y\":[\"libtard\"],\"yaxis\":\"y\",\"type\":\"bar\"},{\"alignmentgroup\":\"True\",\"hovertemplate\":\"Common_words=%{y}<br>count=%{x}<extra></extra>\",\"legendgroup\":\"black\",\"marker\":{\"color\":\"#ab63fa\",\"pattern\":{\"shape\":\"\"}},\"name\":\"black\",\"offsetgroup\":\"black\",\"orientation\":\"h\",\"showlegend\":true,\"textposition\":\"auto\",\"x\":[146],\"xaxis\":\"x\",\"y\":[\"black\"],\"yaxis\":\"y\",\"type\":\"bar\"},{\"alignmentgroup\":\"True\",\"hovertemplate\":\"Common_words=%{y}<br>count=%{x}<extra></extra>\",\"legendgroup\":\"like\",\"marker\":{\"color\":\"#FFA15A\",\"pattern\":{\"shape\":\"\"}},\"name\":\"like\",\"offsetgroup\":\"like\",\"orientation\":\"h\",\"showlegend\":true,\"textposition\":\"auto\",\"x\":[141],\"xaxis\":\"x\",\"y\":[\"like\"],\"yaxis\":\"y\",\"type\":\"bar\"},{\"alignmentgroup\":\"True\",\"hovertemplate\":\"Common_words=%{y}<br>count=%{x}<extra></extra>\",\"legendgroup\":\"racist\",\"marker\":{\"color\":\"#19d3f3\",\"pattern\":{\"shape\":\"\"}},\"name\":\"racist\",\"offsetgroup\":\"racist\",\"orientation\":\"h\",\"showlegend\":true,\"textposition\":\"auto\",\"x\":[103],\"xaxis\":\"x\",\"y\":[\"racist\"],\"yaxis\":\"y\",\"type\":\"bar\"},{\"alignmentgroup\":\"True\",\"hovertemplate\":\"Common_words=%{y}<br>count=%{x}<extra></extra>\",\"legendgroup\":\"politics\",\"marker\":{\"color\":\"#FF6692\",\"pattern\":{\"shape\":\"\"}},\"name\":\"politics\",\"offsetgroup\":\"politics\",\"orientation\":\"h\",\"showlegend\":true,\"textposition\":\"auto\",\"x\":[97],\"xaxis\":\"x\",\"y\":[\"politics\"],\"yaxis\":\"y\",\"type\":\"bar\"},{\"alignmentgroup\":\"True\",\"hovertemplate\":\"Common_words=%{y}<br>count=%{x}<extra></extra>\",\"legendgroup\":\"say\",\"marker\":{\"color\":\"#B6E880\",\"pattern\":{\"shape\":\"\"}},\"name\":\"say\",\"offsetgroup\":\"say\",\"orientation\":\"h\",\"showlegend\":true,\"textposition\":\"auto\",\"x\":[96],\"xaxis\":\"x\",\"y\":[\"say\"],\"yaxis\":\"y\",\"type\":\"bar\"},{\"alignmentgroup\":\"True\",\"hovertemplate\":\"Common_words=%{y}<br>count=%{x}<extra></extra>\",\"legendgroup\":\"people\",\"marker\":{\"color\":\"#FF97FF\",\"pattern\":{\"shape\":\"\"}},\"name\":\"people\",\"offsetgroup\":\"people\",\"orientation\":\"h\",\"showlegend\":true,\"textposition\":\"auto\",\"x\":[95],\"xaxis\":\"x\",\"y\":[\"people\"],\"yaxis\":\"y\",\"type\":\"bar\"},{\"alignmentgroup\":\"True\",\"hovertemplate\":\"Common_words=%{y}<br>count=%{x}<extra></extra>\",\"legendgroup\":\"allahsoil\",\"marker\":{\"color\":\"#FECB52\",\"pattern\":{\"shape\":\"\"}},\"name\":\"allahsoil\",\"offsetgroup\":\"allahsoil\",\"orientation\":\"h\",\"showlegend\":true,\"textposition\":\"auto\",\"x\":[92],\"xaxis\":\"x\",\"y\":[\"allahsoil\"],\"yaxis\":\"y\",\"type\":\"bar\"},{\"alignmentgroup\":\"True\",\"hovertemplate\":\"Common_words=%{y}<br>count=%{x}<extra></extra>\",\"legendgroup\":\"liberal\",\"marker\":{\"color\":\"#636efa\",\"pattern\":{\"shape\":\"\"}},\"name\":\"liberal\",\"offsetgroup\":\"liberal\",\"orientation\":\"h\",\"showlegend\":true,\"textposition\":\"auto\",\"x\":[82],\"xaxis\":\"x\",\"y\":[\"liberal\"],\"yaxis\":\"y\",\"type\":\"bar\"},{\"alignmentgroup\":\"True\",\"hovertemplate\":\"Common_words=%{y}<br>count=%{x}<extra></extra>\",\"legendgroup\":\"might\",\"marker\":{\"color\":\"#EF553B\",\"pattern\":{\"shape\":\"\"}},\"name\":\"might\",\"offsetgroup\":\"might\",\"orientation\":\"h\",\"showlegend\":true,\"textposition\":\"auto\",\"x\":[77],\"xaxis\":\"x\",\"y\":[\"might\"],\"yaxis\":\"y\",\"type\":\"bar\"},{\"alignmentgroup\":\"True\",\"hovertemplate\":\"Common_words=%{y}<br>count=%{x}<extra></extra>\",\"legendgroup\":\"get\",\"marker\":{\"color\":\"#00cc96\",\"pattern\":{\"shape\":\"\"}},\"name\":\"get\",\"offsetgroup\":\"get\",\"orientation\":\"h\",\"showlegend\":true,\"textposition\":\"auto\",\"x\":[75],\"xaxis\":\"x\",\"y\":[\"get\"],\"yaxis\":\"y\",\"type\":\"bar\"},{\"alignmentgroup\":\"True\",\"hovertemplate\":\"Common_words=%{y}<br>count=%{x}<extra></extra>\",\"legendgroup\":\"sjw\",\"marker\":{\"color\":\"#ab63fa\",\"pattern\":{\"shape\":\"\"}},\"name\":\"sjw\",\"offsetgroup\":\"sjw\",\"orientation\":\"h\",\"showlegend\":true,\"textposition\":\"auto\",\"x\":[74],\"xaxis\":\"x\",\"y\":[\"sjw\"],\"yaxis\":\"y\",\"type\":\"bar\"},{\"alignmentgroup\":\"True\",\"hovertemplate\":\"Common_words=%{y}<br>count=%{x}<extra></extra>\",\"legendgroup\":\"women\",\"marker\":{\"color\":\"#FFA15A\",\"pattern\":{\"shape\":\"\"}},\"name\":\"women\",\"offsetgroup\":\"women\",\"orientation\":\"h\",\"showlegend\":true,\"textposition\":\"auto\",\"x\":[72],\"xaxis\":\"x\",\"y\":[\"women\"],\"yaxis\":\"y\",\"type\":\"bar\"},{\"alignmentgroup\":\"True\",\"hovertemplate\":\"Common_words=%{y}<br>count=%{x}<extra></extra>\",\"legendgroup\":\"new\",\"marker\":{\"color\":\"#19d3f3\",\"pattern\":{\"shape\":\"\"}},\"name\":\"new\",\"offsetgroup\":\"new\",\"orientation\":\"h\",\"showlegend\":true,\"textposition\":\"auto\",\"x\":[71],\"xaxis\":\"x\",\"y\":[\"new\"],\"yaxis\":\"y\",\"type\":\"bar\"},{\"alignmentgroup\":\"True\",\"hovertemplate\":\"Common_words=%{y}<br>count=%{x}<extra></extra>\",\"legendgroup\":\"obama\",\"marker\":{\"color\":\"#FF6692\",\"pattern\":{\"shape\":\"\"}},\"name\":\"obama\",\"offsetgroup\":\"obama\",\"orientation\":\"h\",\"showlegend\":true,\"textposition\":\"auto\",\"x\":[68],\"xaxis\":\"x\",\"y\":[\"obama\"],\"yaxis\":\"y\",\"type\":\"bar\"},{\"alignmentgroup\":\"True\",\"hovertemplate\":\"Common_words=%{y}<br>count=%{x}<extra></extra>\",\"legendgroup\":\"retweet\",\"marker\":{\"color\":\"#B6E880\",\"pattern\":{\"shape\":\"\"}},\"name\":\"retweet\",\"offsetgroup\":\"retweet\",\"orientation\":\"h\",\"showlegend\":true,\"textposition\":\"auto\",\"x\":[67],\"xaxis\":\"x\",\"y\":[\"retweet\"],\"yaxis\":\"y\",\"type\":\"bar\"},{\"alignmentgroup\":\"True\",\"hovertemplate\":\"Common_words=%{y}<br>count=%{x}<extra></extra>\",\"legendgroup\":\"dont\",\"marker\":{\"color\":\"#FF97FF\",\"pattern\":{\"shape\":\"\"}},\"name\":\"dont\",\"offsetgroup\":\"dont\",\"orientation\":\"h\",\"showlegend\":true,\"textposition\":\"auto\",\"x\":[67],\"xaxis\":\"x\",\"y\":[\"dont\"],\"yaxis\":\"y\",\"type\":\"bar\"},{\"alignmentgroup\":\"True\",\"hovertemplate\":\"Common_words=%{y}<br>count=%{x}<extra></extra>\",\"legendgroup\":\"hate\",\"marker\":{\"color\":\"#FECB52\",\"pattern\":{\"shape\":\"\"}},\"name\":\"hate\",\"offsetgroup\":\"hate\",\"orientation\":\"h\",\"showlegend\":true,\"textposition\":\"auto\",\"x\":[66],\"xaxis\":\"x\",\"y\":[\"hate\"],\"yaxis\":\"y\",\"type\":\"bar\"}],                        {\"template\":{\"data\":{\"bar\":[{\"error_x\":{\"color\":\"#2a3f5f\"},\"error_y\":{\"color\":\"#2a3f5f\"},\"marker\":{\"line\":{\"color\":\"#E5ECF6\",\"width\":0.5},\"pattern\":{\"fillmode\":\"overlay\",\"size\":10,\"solidity\":0.2}},\"type\":\"bar\"}],\"barpolar\":[{\"marker\":{\"line\":{\"color\":\"#E5ECF6\",\"width\":0.5},\"pattern\":{\"fillmode\":\"overlay\",\"size\":10,\"solidity\":0.2}},\"type\":\"barpolar\"}],\"carpet\":[{\"aaxis\":{\"endlinecolor\":\"#2a3f5f\",\"gridcolor\":\"white\",\"linecolor\":\"white\",\"minorgridcolor\":\"white\",\"startlinecolor\":\"#2a3f5f\"},\"baxis\":{\"endlinecolor\":\"#2a3f5f\",\"gridcolor\":\"white\",\"linecolor\":\"white\",\"minorgridcolor\":\"white\",\"startlinecolor\":\"#2a3f5f\"},\"type\":\"carpet\"}],\"choropleth\":[{\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"},\"type\":\"choropleth\"}],\"contour\":[{\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"},\"colorscale\":[[0.0,\"#0d0887\"],[0.1111111111111111,\"#46039f\"],[0.2222222222222222,\"#7201a8\"],[0.3333333333333333,\"#9c179e\"],[0.4444444444444444,\"#bd3786\"],[0.5555555555555556,\"#d8576b\"],[0.6666666666666666,\"#ed7953\"],[0.7777777777777778,\"#fb9f3a\"],[0.8888888888888888,\"#fdca26\"],[1.0,\"#f0f921\"]],\"type\":\"contour\"}],\"contourcarpet\":[{\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"},\"type\":\"contourcarpet\"}],\"heatmap\":[{\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"},\"colorscale\":[[0.0,\"#0d0887\"],[0.1111111111111111,\"#46039f\"],[0.2222222222222222,\"#7201a8\"],[0.3333333333333333,\"#9c179e\"],[0.4444444444444444,\"#bd3786\"],[0.5555555555555556,\"#d8576b\"],[0.6666666666666666,\"#ed7953\"],[0.7777777777777778,\"#fb9f3a\"],[0.8888888888888888,\"#fdca26\"],[1.0,\"#f0f921\"]],\"type\":\"heatmap\"}],\"heatmapgl\":[{\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"},\"colorscale\":[[0.0,\"#0d0887\"],[0.1111111111111111,\"#46039f\"],[0.2222222222222222,\"#7201a8\"],[0.3333333333333333,\"#9c179e\"],[0.4444444444444444,\"#bd3786\"],[0.5555555555555556,\"#d8576b\"],[0.6666666666666666,\"#ed7953\"],[0.7777777777777778,\"#fb9f3a\"],[0.8888888888888888,\"#fdca26\"],[1.0,\"#f0f921\"]],\"type\":\"heatmapgl\"}],\"histogram\":[{\"marker\":{\"pattern\":{\"fillmode\":\"overlay\",\"size\":10,\"solidity\":0.2}},\"type\":\"histogram\"}],\"histogram2d\":[{\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"},\"colorscale\":[[0.0,\"#0d0887\"],[0.1111111111111111,\"#46039f\"],[0.2222222222222222,\"#7201a8\"],[0.3333333333333333,\"#9c179e\"],[0.4444444444444444,\"#bd3786\"],[0.5555555555555556,\"#d8576b\"],[0.6666666666666666,\"#ed7953\"],[0.7777777777777778,\"#fb9f3a\"],[0.8888888888888888,\"#fdca26\"],[1.0,\"#f0f921\"]],\"type\":\"histogram2d\"}],\"histogram2dcontour\":[{\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"},\"colorscale\":[[0.0,\"#0d0887\"],[0.1111111111111111,\"#46039f\"],[0.2222222222222222,\"#7201a8\"],[0.3333333333333333,\"#9c179e\"],[0.4444444444444444,\"#bd3786\"],[0.5555555555555556,\"#d8576b\"],[0.6666666666666666,\"#ed7953\"],[0.7777777777777778,\"#fb9f3a\"],[0.8888888888888888,\"#fdca26\"],[1.0,\"#f0f921\"]],\"type\":\"histogram2dcontour\"}],\"mesh3d\":[{\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"},\"type\":\"mesh3d\"}],\"parcoords\":[{\"line\":{\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"}},\"type\":\"parcoords\"}],\"pie\":[{\"automargin\":true,\"type\":\"pie\"}],\"scatter\":[{\"marker\":{\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"}},\"type\":\"scatter\"}],\"scatter3d\":[{\"line\":{\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"}},\"marker\":{\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"}},\"type\":\"scatter3d\"}],\"scattercarpet\":[{\"marker\":{\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"}},\"type\":\"scattercarpet\"}],\"scattergeo\":[{\"marker\":{\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"}},\"type\":\"scattergeo\"}],\"scattergl\":[{\"marker\":{\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"}},\"type\":\"scattergl\"}],\"scattermapbox\":[{\"marker\":{\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"}},\"type\":\"scattermapbox\"}],\"scatterpolar\":[{\"marker\":{\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"}},\"type\":\"scatterpolar\"}],\"scatterpolargl\":[{\"marker\":{\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"}},\"type\":\"scatterpolargl\"}],\"scatterternary\":[{\"marker\":{\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"}},\"type\":\"scatterternary\"}],\"surface\":[{\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"},\"colorscale\":[[0.0,\"#0d0887\"],[0.1111111111111111,\"#46039f\"],[0.2222222222222222,\"#7201a8\"],[0.3333333333333333,\"#9c179e\"],[0.4444444444444444,\"#bd3786\"],[0.5555555555555556,\"#d8576b\"],[0.6666666666666666,\"#ed7953\"],[0.7777777777777778,\"#fb9f3a\"],[0.8888888888888888,\"#fdca26\"],[1.0,\"#f0f921\"]],\"type\":\"surface\"}],\"table\":[{\"cells\":{\"fill\":{\"color\":\"#EBF0F8\"},\"line\":{\"color\":\"white\"}},\"header\":{\"fill\":{\"color\":\"#C8D4E3\"},\"line\":{\"color\":\"white\"}},\"type\":\"table\"}]},\"layout\":{\"annotationdefaults\":{\"arrowcolor\":\"#2a3f5f\",\"arrowhead\":0,\"arrowwidth\":1},\"autotypenumbers\":\"strict\",\"coloraxis\":{\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"}},\"colorscale\":{\"diverging\":[[0,\"#8e0152\"],[0.1,\"#c51b7d\"],[0.2,\"#de77ae\"],[0.3,\"#f1b6da\"],[0.4,\"#fde0ef\"],[0.5,\"#f7f7f7\"],[0.6,\"#e6f5d0\"],[0.7,\"#b8e186\"],[0.8,\"#7fbc41\"],[0.9,\"#4d9221\"],[1,\"#276419\"]],\"sequential\":[[0.0,\"#0d0887\"],[0.1111111111111111,\"#46039f\"],[0.2222222222222222,\"#7201a8\"],[0.3333333333333333,\"#9c179e\"],[0.4444444444444444,\"#bd3786\"],[0.5555555555555556,\"#d8576b\"],[0.6666666666666666,\"#ed7953\"],[0.7777777777777778,\"#fb9f3a\"],[0.8888888888888888,\"#fdca26\"],[1.0,\"#f0f921\"]],\"sequentialminus\":[[0.0,\"#0d0887\"],[0.1111111111111111,\"#46039f\"],[0.2222222222222222,\"#7201a8\"],[0.3333333333333333,\"#9c179e\"],[0.4444444444444444,\"#bd3786\"],[0.5555555555555556,\"#d8576b\"],[0.6666666666666666,\"#ed7953\"],[0.7777777777777778,\"#fb9f3a\"],[0.8888888888888888,\"#fdca26\"],[1.0,\"#f0f921\"]]},\"colorway\":[\"#636efa\",\"#EF553B\",\"#00cc96\",\"#ab63fa\",\"#FFA15A\",\"#19d3f3\",\"#FF6692\",\"#B6E880\",\"#FF97FF\",\"#FECB52\"],\"font\":{\"color\":\"#2a3f5f\"},\"geo\":{\"bgcolor\":\"white\",\"lakecolor\":\"white\",\"landcolor\":\"#E5ECF6\",\"showlakes\":true,\"showland\":true,\"subunitcolor\":\"white\"},\"hoverlabel\":{\"align\":\"left\"},\"hovermode\":\"closest\",\"mapbox\":{\"style\":\"light\"},\"paper_bgcolor\":\"white\",\"plot_bgcolor\":\"#E5ECF6\",\"polar\":{\"angularaxis\":{\"gridcolor\":\"white\",\"linecolor\":\"white\",\"ticks\":\"\"},\"bgcolor\":\"#E5ECF6\",\"radialaxis\":{\"gridcolor\":\"white\",\"linecolor\":\"white\",\"ticks\":\"\"}},\"scene\":{\"xaxis\":{\"backgroundcolor\":\"#E5ECF6\",\"gridcolor\":\"white\",\"gridwidth\":2,\"linecolor\":\"white\",\"showbackground\":true,\"ticks\":\"\",\"zerolinecolor\":\"white\"},\"yaxis\":{\"backgroundcolor\":\"#E5ECF6\",\"gridcolor\":\"white\",\"gridwidth\":2,\"linecolor\":\"white\",\"showbackground\":true,\"ticks\":\"\",\"zerolinecolor\":\"white\"},\"zaxis\":{\"backgroundcolor\":\"#E5ECF6\",\"gridcolor\":\"white\",\"gridwidth\":2,\"linecolor\":\"white\",\"showbackground\":true,\"ticks\":\"\",\"zerolinecolor\":\"white\"}},\"shapedefaults\":{\"line\":{\"color\":\"#2a3f5f\"}},\"ternary\":{\"aaxis\":{\"gridcolor\":\"white\",\"linecolor\":\"white\",\"ticks\":\"\"},\"baxis\":{\"gridcolor\":\"white\",\"linecolor\":\"white\",\"ticks\":\"\"},\"bgcolor\":\"#E5ECF6\",\"caxis\":{\"gridcolor\":\"white\",\"linecolor\":\"white\",\"ticks\":\"\"}},\"title\":{\"x\":0.05},\"xaxis\":{\"automargin\":true,\"gridcolor\":\"white\",\"linecolor\":\"white\",\"ticks\":\"\",\"title\":{\"standoff\":15},\"zerolinecolor\":\"white\",\"zerolinewidth\":2},\"yaxis\":{\"automargin\":true,\"gridcolor\":\"white\",\"linecolor\":\"white\",\"ticks\":\"\",\"title\":{\"standoff\":15},\"zerolinecolor\":\"white\",\"zerolinewidth\":2}}},\"xaxis\":{\"anchor\":\"y\",\"domain\":[0.0,1.0],\"title\":{\"text\":\"count\"}},\"yaxis\":{\"anchor\":\"x\",\"domain\":[0.0,1.0],\"title\":{\"text\":\"Common_words\"},\"categoryorder\":\"array\",\"categoryarray\":[\"hate\",\"dont\",\"retweet\",\"obama\",\"new\",\"women\",\"sjw\",\"get\",\"might\",\"liberal\",\"allahsoil\",\"people\",\"say\",\"politics\",\"racist\",\"like\",\"black\",\"libtard\",\"white\",\"trump\"]},\"legend\":{\"title\":{\"text\":\"Common_words\"},\"tracegroupgap\":0},\"title\":{\"text\":\"Most Commmon Negative Words\"},\"barmode\":\"relative\",\"height\":700,\"width\":700},                        {\"responsive\": true}                    ).then(function(){\n",
              "                            \n",
              "var gd = document.getElementById('5f5959f5-6ebc-44b6-bf0a-6d3317ea121f');\n",
              "var x = new MutationObserver(function (mutations, observer) {{\n",
              "        var display = window.getComputedStyle(gd).display;\n",
              "        if (!display || display === 'none') {{\n",
              "            console.log([gd, 'removed!']);\n",
              "            Plotly.purge(gd);\n",
              "            observer.disconnect();\n",
              "        }}\n",
              "}});\n",
              "\n",
              "// Listen for the removal of the full notebook cells\n",
              "var notebookContainer = gd.closest('#notebook-container');\n",
              "if (notebookContainer) {{\n",
              "    x.observe(notebookContainer, {childList: true});\n",
              "}}\n",
              "\n",
              "// Listen for the clearing of the current output cell\n",
              "var outputEl = gd.closest('.output');\n",
              "if (outputEl) {{\n",
              "    x.observe(outputEl, {childList: true});\n",
              "}}\n",
              "\n",
              "                        })                };                            </script>        </div>\n",
              "</body>\n",
              "</html>"
            ]
          },
          "metadata": {}
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "fig = px.treemap(temp_negative, path=['Common_words'], values='count',title='Tree Of Most Common Negative Words')\n",
        "fig.show()"
      ],
      "metadata": {
        "id": "MgARctCOQEnW",
        "outputId": "44ad0e29-3ae0-49ff-ce0b-7cf636213076",
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 542
        }
      },
      "execution_count": 79,
      "outputs": [
        {
          "output_type": "display_data",
          "data": {
            "text/html": [
              "<html>\n",
              "<head><meta charset=\"utf-8\" /></head>\n",
              "<body>\n",
              "    <div>            <script src=\"https://cdnjs.cloudflare.com/ajax/libs/mathjax/2.7.5/MathJax.js?config=TeX-AMS-MML_SVG\"></script><script type=\"text/javascript\">if (window.MathJax) {MathJax.Hub.Config({SVG: {font: \"STIX-Web\"}});}</script>                <script type=\"text/javascript\">window.PlotlyConfig = {MathJaxConfig: 'local'};</script>\n",
              "        <script src=\"https://cdn.plot.ly/plotly-2.8.3.min.js\"></script>                <div id=\"89e39e50-fd13-4f22-a878-fc366f4088c9\" class=\"plotly-graph-div\" style=\"height:525px; width:100%;\"></div>            <script type=\"text/javascript\">                                    window.PLOTLYENV=window.PLOTLYENV || {};                                    if (document.getElementById(\"89e39e50-fd13-4f22-a878-fc366f4088c9\")) {                    Plotly.newPlot(                        \"89e39e50-fd13-4f22-a878-fc366f4088c9\",                        [{\"branchvalues\":\"total\",\"domain\":{\"x\":[0.0,1.0],\"y\":[0.0,1.0]},\"hovertemplate\":\"labels=%{label}<br>count=%{value}<br>parent=%{parent}<br>id=%{id}<extra></extra>\",\"ids\":[\"allahsoil\",\"black\",\"dont\",\"get\",\"hate\",\"liberal\",\"libtard\",\"like\",\"might\",\"new\",\"obama\",\"people\",\"politics\",\"racist\",\"retweet\",\"say\",\"sjw\",\"trump\",\"white\",\"women\"],\"labels\":[\"allahsoil\",\"black\",\"dont\",\"get\",\"hate\",\"liberal\",\"libtard\",\"like\",\"might\",\"new\",\"obama\",\"people\",\"politics\",\"racist\",\"retweet\",\"say\",\"sjw\",\"trump\",\"white\",\"women\"],\"name\":\"\",\"parents\":[\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\"],\"values\":[92,146,67,75,66,82,149,141,77,71,68,95,97,103,67,96,74,216,153,72],\"type\":\"treemap\"}],                        {\"template\":{\"data\":{\"bar\":[{\"error_x\":{\"color\":\"#2a3f5f\"},\"error_y\":{\"color\":\"#2a3f5f\"},\"marker\":{\"line\":{\"color\":\"#E5ECF6\",\"width\":0.5},\"pattern\":{\"fillmode\":\"overlay\",\"size\":10,\"solidity\":0.2}},\"type\":\"bar\"}],\"barpolar\":[{\"marker\":{\"line\":{\"color\":\"#E5ECF6\",\"width\":0.5},\"pattern\":{\"fillmode\":\"overlay\",\"size\":10,\"solidity\":0.2}},\"type\":\"barpolar\"}],\"carpet\":[{\"aaxis\":{\"endlinecolor\":\"#2a3f5f\",\"gridcolor\":\"white\",\"linecolor\":\"white\",\"minorgridcolor\":\"white\",\"startlinecolor\":\"#2a3f5f\"},\"baxis\":{\"endlinecolor\":\"#2a3f5f\",\"gridcolor\":\"white\",\"linecolor\":\"white\",\"minorgridcolor\":\"white\",\"startlinecolor\":\"#2a3f5f\"},\"type\":\"carpet\"}],\"choropleth\":[{\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"},\"type\":\"choropleth\"}],\"contour\":[{\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"},\"colorscale\":[[0.0,\"#0d0887\"],[0.1111111111111111,\"#46039f\"],[0.2222222222222222,\"#7201a8\"],[0.3333333333333333,\"#9c179e\"],[0.4444444444444444,\"#bd3786\"],[0.5555555555555556,\"#d8576b\"],[0.6666666666666666,\"#ed7953\"],[0.7777777777777778,\"#fb9f3a\"],[0.8888888888888888,\"#fdca26\"],[1.0,\"#f0f921\"]],\"type\":\"contour\"}],\"contourcarpet\":[{\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"},\"type\":\"contourcarpet\"}],\"heatmap\":[{\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"},\"colorscale\":[[0.0,\"#0d0887\"],[0.1111111111111111,\"#46039f\"],[0.2222222222222222,\"#7201a8\"],[0.3333333333333333,\"#9c179e\"],[0.4444444444444444,\"#bd3786\"],[0.5555555555555556,\"#d8576b\"],[0.6666666666666666,\"#ed7953\"],[0.7777777777777778,\"#fb9f3a\"],[0.8888888888888888,\"#fdca26\"],[1.0,\"#f0f921\"]],\"type\":\"heatmap\"}],\"heatmapgl\":[{\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"},\"colorscale\":[[0.0,\"#0d0887\"],[0.1111111111111111,\"#46039f\"],[0.2222222222222222,\"#7201a8\"],[0.3333333333333333,\"#9c179e\"],[0.4444444444444444,\"#bd3786\"],[0.5555555555555556,\"#d8576b\"],[0.6666666666666666,\"#ed7953\"],[0.7777777777777778,\"#fb9f3a\"],[0.8888888888888888,\"#fdca26\"],[1.0,\"#f0f921\"]],\"type\":\"heatmapgl\"}],\"histogram\":[{\"marker\":{\"pattern\":{\"fillmode\":\"overlay\",\"size\":10,\"solidity\":0.2}},\"type\":\"histogram\"}],\"histogram2d\":[{\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"},\"colorscale\":[[0.0,\"#0d0887\"],[0.1111111111111111,\"#46039f\"],[0.2222222222222222,\"#7201a8\"],[0.3333333333333333,\"#9c179e\"],[0.4444444444444444,\"#bd3786\"],[0.5555555555555556,\"#d8576b\"],[0.6666666666666666,\"#ed7953\"],[0.7777777777777778,\"#fb9f3a\"],[0.8888888888888888,\"#fdca26\"],[1.0,\"#f0f921\"]],\"type\":\"histogram2d\"}],\"histogram2dcontour\":[{\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"},\"colorscale\":[[0.0,\"#0d0887\"],[0.1111111111111111,\"#46039f\"],[0.2222222222222222,\"#7201a8\"],[0.3333333333333333,\"#9c179e\"],[0.4444444444444444,\"#bd3786\"],[0.5555555555555556,\"#d8576b\"],[0.6666666666666666,\"#ed7953\"],[0.7777777777777778,\"#fb9f3a\"],[0.8888888888888888,\"#fdca26\"],[1.0,\"#f0f921\"]],\"type\":\"histogram2dcontour\"}],\"mesh3d\":[{\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"},\"type\":\"mesh3d\"}],\"parcoords\":[{\"line\":{\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"}},\"type\":\"parcoords\"}],\"pie\":[{\"automargin\":true,\"type\":\"pie\"}],\"scatter\":[{\"marker\":{\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"}},\"type\":\"scatter\"}],\"scatter3d\":[{\"line\":{\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"}},\"marker\":{\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"}},\"type\":\"scatter3d\"}],\"scattercarpet\":[{\"marker\":{\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"}},\"type\":\"scattercarpet\"}],\"scattergeo\":[{\"marker\":{\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"}},\"type\":\"scattergeo\"}],\"scattergl\":[{\"marker\":{\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"}},\"type\":\"scattergl\"}],\"scattermapbox\":[{\"marker\":{\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"}},\"type\":\"scattermapbox\"}],\"scatterpolar\":[{\"marker\":{\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"}},\"type\":\"scatterpolar\"}],\"scatterpolargl\":[{\"marker\":{\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"}},\"type\":\"scatterpolargl\"}],\"scatterternary\":[{\"marker\":{\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"}},\"type\":\"scatterternary\"}],\"surface\":[{\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"},\"colorscale\":[[0.0,\"#0d0887\"],[0.1111111111111111,\"#46039f\"],[0.2222222222222222,\"#7201a8\"],[0.3333333333333333,\"#9c179e\"],[0.4444444444444444,\"#bd3786\"],[0.5555555555555556,\"#d8576b\"],[0.6666666666666666,\"#ed7953\"],[0.7777777777777778,\"#fb9f3a\"],[0.8888888888888888,\"#fdca26\"],[1.0,\"#f0f921\"]],\"type\":\"surface\"}],\"table\":[{\"cells\":{\"fill\":{\"color\":\"#EBF0F8\"},\"line\":{\"color\":\"white\"}},\"header\":{\"fill\":{\"color\":\"#C8D4E3\"},\"line\":{\"color\":\"white\"}},\"type\":\"table\"}]},\"layout\":{\"annotationdefaults\":{\"arrowcolor\":\"#2a3f5f\",\"arrowhead\":0,\"arrowwidth\":1},\"autotypenumbers\":\"strict\",\"coloraxis\":{\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"}},\"colorscale\":{\"diverging\":[[0,\"#8e0152\"],[0.1,\"#c51b7d\"],[0.2,\"#de77ae\"],[0.3,\"#f1b6da\"],[0.4,\"#fde0ef\"],[0.5,\"#f7f7f7\"],[0.6,\"#e6f5d0\"],[0.7,\"#b8e186\"],[0.8,\"#7fbc41\"],[0.9,\"#4d9221\"],[1,\"#276419\"]],\"sequential\":[[0.0,\"#0d0887\"],[0.1111111111111111,\"#46039f\"],[0.2222222222222222,\"#7201a8\"],[0.3333333333333333,\"#9c179e\"],[0.4444444444444444,\"#bd3786\"],[0.5555555555555556,\"#d8576b\"],[0.6666666666666666,\"#ed7953\"],[0.7777777777777778,\"#fb9f3a\"],[0.8888888888888888,\"#fdca26\"],[1.0,\"#f0f921\"]],\"sequentialminus\":[[0.0,\"#0d0887\"],[0.1111111111111111,\"#46039f\"],[0.2222222222222222,\"#7201a8\"],[0.3333333333333333,\"#9c179e\"],[0.4444444444444444,\"#bd3786\"],[0.5555555555555556,\"#d8576b\"],[0.6666666666666666,\"#ed7953\"],[0.7777777777777778,\"#fb9f3a\"],[0.8888888888888888,\"#fdca26\"],[1.0,\"#f0f921\"]]},\"colorway\":[\"#636efa\",\"#EF553B\",\"#00cc96\",\"#ab63fa\",\"#FFA15A\",\"#19d3f3\",\"#FF6692\",\"#B6E880\",\"#FF97FF\",\"#FECB52\"],\"font\":{\"color\":\"#2a3f5f\"},\"geo\":{\"bgcolor\":\"white\",\"lakecolor\":\"white\",\"landcolor\":\"#E5ECF6\",\"showlakes\":true,\"showland\":true,\"subunitcolor\":\"white\"},\"hoverlabel\":{\"align\":\"left\"},\"hovermode\":\"closest\",\"mapbox\":{\"style\":\"light\"},\"paper_bgcolor\":\"white\",\"plot_bgcolor\":\"#E5ECF6\",\"polar\":{\"angularaxis\":{\"gridcolor\":\"white\",\"linecolor\":\"white\",\"ticks\":\"\"},\"bgcolor\":\"#E5ECF6\",\"radialaxis\":{\"gridcolor\":\"white\",\"linecolor\":\"white\",\"ticks\":\"\"}},\"scene\":{\"xaxis\":{\"backgroundcolor\":\"#E5ECF6\",\"gridcolor\":\"white\",\"gridwidth\":2,\"linecolor\":\"white\",\"showbackground\":true,\"ticks\":\"\",\"zerolinecolor\":\"white\"},\"yaxis\":{\"backgroundcolor\":\"#E5ECF6\",\"gridcolor\":\"white\",\"gridwidth\":2,\"linecolor\":\"white\",\"showbackground\":true,\"ticks\":\"\",\"zerolinecolor\":\"white\"},\"zaxis\":{\"backgroundcolor\":\"#E5ECF6\",\"gridcolor\":\"white\",\"gridwidth\":2,\"linecolor\":\"white\",\"showbackground\":true,\"ticks\":\"\",\"zerolinecolor\":\"white\"}},\"shapedefaults\":{\"line\":{\"color\":\"#2a3f5f\"}},\"ternary\":{\"aaxis\":{\"gridcolor\":\"white\",\"linecolor\":\"white\",\"ticks\":\"\"},\"baxis\":{\"gridcolor\":\"white\",\"linecolor\":\"white\",\"ticks\":\"\"},\"bgcolor\":\"#E5ECF6\",\"caxis\":{\"gridcolor\":\"white\",\"linecolor\":\"white\",\"ticks\":\"\"}},\"title\":{\"x\":0.05},\"xaxis\":{\"automargin\":true,\"gridcolor\":\"white\",\"linecolor\":\"white\",\"ticks\":\"\",\"title\":{\"standoff\":15},\"zerolinecolor\":\"white\",\"zerolinewidth\":2},\"yaxis\":{\"automargin\":true,\"gridcolor\":\"white\",\"linecolor\":\"white\",\"ticks\":\"\",\"title\":{\"standoff\":15},\"zerolinecolor\":\"white\",\"zerolinewidth\":2}}},\"legend\":{\"tracegroupgap\":0},\"title\":{\"text\":\"Tree Of Most Common Negative Words\"}},                        {\"responsive\": true}                    ).then(function(){\n",
              "                            \n",
              "var gd = document.getElementById('89e39e50-fd13-4f22-a878-fc366f4088c9');\n",
              "var x = new MutationObserver(function (mutations, observer) {{\n",
              "        var display = window.getComputedStyle(gd).display;\n",
              "        if (!display || display === 'none') {{\n",
              "            console.log([gd, 'removed!']);\n",
              "            Plotly.purge(gd);\n",
              "            observer.disconnect();\n",
              "        }}\n",
              "}});\n",
              "\n",
              "// Listen for the removal of the full notebook cells\n",
              "var notebookContainer = gd.closest('#notebook-container');\n",
              "if (notebookContainer) {{\n",
              "    x.observe(notebookContainer, {childList: true});\n",
              "}}\n",
              "\n",
              "// Listen for the clearing of the current output cell\n",
              "var outputEl = gd.closest('.output');\n",
              "if (outputEl) {{\n",
              "    x.observe(outputEl, {childList: true});\n",
              "}}\n",
              "\n",
              "                        })                };                            </script>        </div>\n",
              "</body>\n",
              "</html>"
            ]
          },
          "metadata": {}
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "from wordcloud import WordCloud\n",
        "all_words_neg = ' '.join([text for text in df['clean_tweets'][df['label']== 1] ])\n",
        "wordcloud = WordCloud(width=800, height=500, random_state=21, max_font_size=110).generate(all_words_neg)\n",
        "#random=0.30\n",
        "plt.figure(figsize=(10, 7))\n",
        "plt.imshow(wordcloud, interpolation=\"bilinear\")\n",
        "plt.axis('off')\n",
        "plt.show()"
      ],
      "metadata": {
        "id": "jibX67gemqLQ",
        "outputId": "55e656ee-fef0-44a2-92a9-9e27e3b465cf",
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 380
        }
      },
      "execution_count": 38,
      "outputs": [
        {
          "output_type": "display_data",
          "data": {
            "image/png": "\n",
            "text/plain": [
              "<Figure size 720x504 with 1 Axes>"
            ]
          },
          "metadata": {
            "needs_background": "light"
          }
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "#Selecting the positive tweets\n",
        "positive_tweets = df_eda[df_eda['label']== 0]\n",
        "positive_tweets.head()"
      ],
      "metadata": {
        "id": "2Sznf5bkMzrI",
        "outputId": "9a20b34a-a6d3-4244-9120-14d38b640f63",
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 191
        }
      },
      "execution_count": 39,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/html": [
              "\n",
              "  <div id=\"df-bb8706d3-778f-46fd-9ad3-d4df1d858ed5\">\n",
              "    <div class=\"colab-df-container\">\n",
              "      <div>\n",
              "<style scoped>\n",
              "    .dataframe tbody tr th:only-of-type {\n",
              "        vertical-align: middle;\n",
              "    }\n",
              "\n",
              "    .dataframe tbody tr th {\n",
              "        vertical-align: top;\n",
              "    }\n",
              "\n",
              "    .dataframe thead th {\n",
              "        text-align: right;\n",
              "    }\n",
              "</style>\n",
              "<table border=\"1\" class=\"dataframe\">\n",
              "  <thead>\n",
              "    <tr style=\"text-align: right;\">\n",
              "      <th></th>\n",
              "      <th>id</th>\n",
              "      <th>label</th>\n",
              "      <th>tweet</th>\n",
              "      <th>clean_tweets</th>\n",
              "    </tr>\n",
              "  </thead>\n",
              "  <tbody>\n",
              "    <tr>\n",
              "      <th>0</th>\n",
              "      <td>1</td>\n",
              "      <td>0</td>\n",
              "      <td>@user when a father is dysfunctional and is s...</td>\n",
              "      <td>[father, dysfunctional, selfish, drags, kids, ...</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>1</th>\n",
              "      <td>2</td>\n",
              "      <td>0</td>\n",
              "      <td>@user @user thanks for #lyft credit i can't us...</td>\n",
              "      <td>[thanks, lyft, credit, cant, use, cause, dont,...</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>2</th>\n",
              "      <td>3</td>\n",
              "      <td>0</td>\n",
              "      <td>bihday your majesty</td>\n",
              "      <td>[bihday, majesty]</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>3</th>\n",
              "      <td>4</td>\n",
              "      <td>0</td>\n",
              "      <td>#model   i love u take with u all the time in ...</td>\n",
              "      <td>[model, love, u, take, u, time, ur]</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>4</th>\n",
              "      <td>5</td>\n",
              "      <td>0</td>\n",
              "      <td>factsguide: society now    #motivation</td>\n",
              "      <td>[factsguide, society, motivation]</td>\n",
              "    </tr>\n",
              "  </tbody>\n",
              "</table>\n",
              "</div>\n",
              "      <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-bb8706d3-778f-46fd-9ad3-d4df1d858ed5')\"\n",
              "              title=\"Convert this dataframe to an interactive table.\"\n",
              "              style=\"display:none;\">\n",
              "        \n",
              "  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n",
              "       width=\"24px\">\n",
              "    <path d=\"M0 0h24v24H0V0z\" fill=\"none\"/>\n",
              "    <path d=\"M18.56 5.44l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94zm-11 1L8.5 8.5l.94-2.06 2.06-.94-2.06-.94L8.5 2.5l-.94 2.06-2.06.94zm10 10l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94z\"/><path d=\"M17.41 7.96l-1.37-1.37c-.4-.4-.92-.59-1.43-.59-.52 0-1.04.2-1.43.59L10.3 9.45l-7.72 7.72c-.78.78-.78 2.05 0 2.83L4 21.41c.39.39.9.59 1.41.59.51 0 1.02-.2 1.41-.59l7.78-7.78 2.81-2.81c.8-.78.8-2.07 0-2.86zM5.41 20L4 18.59l7.72-7.72 1.47 1.35L5.41 20z\"/>\n",
              "  </svg>\n",
              "      </button>\n",
              "      \n",
              "  <style>\n",
              "    .colab-df-container {\n",
              "      display:flex;\n",
              "      flex-wrap:wrap;\n",
              "      gap: 12px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert {\n",
              "      background-color: #E8F0FE;\n",
              "      border: none;\n",
              "      border-radius: 50%;\n",
              "      cursor: pointer;\n",
              "      display: none;\n",
              "      fill: #1967D2;\n",
              "      height: 32px;\n",
              "      padding: 0 0 0 0;\n",
              "      width: 32px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert:hover {\n",
              "      background-color: #E2EBFA;\n",
              "      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n",
              "      fill: #174EA6;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert {\n",
              "      background-color: #3B4455;\n",
              "      fill: #D2E3FC;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert:hover {\n",
              "      background-color: #434B5C;\n",
              "      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n",
              "      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n",
              "      fill: #FFFFFF;\n",
              "    }\n",
              "  </style>\n",
              "\n",
              "      <script>\n",
              "        const buttonEl =\n",
              "          document.querySelector('#df-bb8706d3-778f-46fd-9ad3-d4df1d858ed5 button.colab-df-convert');\n",
              "        buttonEl.style.display =\n",
              "          google.colab.kernel.accessAllowed ? 'block' : 'none';\n",
              "\n",
              "        async function convertToInteractive(key) {\n",
              "          const element = document.querySelector('#df-bb8706d3-778f-46fd-9ad3-d4df1d858ed5');\n",
              "          const dataTable =\n",
              "            await google.colab.kernel.invokeFunction('convertToInteractive',\n",
              "                                                     [key], {});\n",
              "          if (!dataTable) return;\n",
              "\n",
              "          const docLinkHtml = 'Like what you see? Visit the ' +\n",
              "            '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n",
              "            + ' to learn more about interactive tables.';\n",
              "          element.innerHTML = '';\n",
              "          dataTable['output_type'] = 'display_data';\n",
              "          await google.colab.output.renderOutput(dataTable, element);\n",
              "          const docLink = document.createElement('div');\n",
              "          docLink.innerHTML = docLinkHtml;\n",
              "          element.appendChild(docLink);\n",
              "        }\n",
              "      </script>\n",
              "    </div>\n",
              "  </div>\n",
              "  "
            ],
            "text/plain": [
              "   id  ...                                       clean_tweets\n",
              "0   1  ...  [father, dysfunctional, selfish, drags, kids, ...\n",
              "1   2  ...  [thanks, lyft, credit, cant, use, cause, dont,...\n",
              "2   3  ...                                  [bihday, majesty]\n",
              "3   4  ...                [model, love, u, take, u, time, ur]\n",
              "4   5  ...                  [factsguide, society, motivation]\n",
              "\n",
              "[5 rows x 4 columns]"
            ]
          },
          "metadata": {},
          "execution_count": 39
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "top = Counter([item for sublist in positive_tweets[\"clean_tweets\"] for item in sublist])\n",
        "temp_positive = pd.DataFrame(top.most_common(20))\n",
        "temp_positive.columns = ['Common_words','count']\n",
        "temp_positive.style.background_gradient(cmap='Greens')"
      ],
      "metadata": {
        "id": "JioJN1ctNBYW",
        "outputId": "b63faaec-0475-4ad9-f22b-6a8a38d179bc",
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 622
        }
      },
      "execution_count": 40,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/html": [
              "<style type=\"text/css\">\n",
              "#T_075f5_row0_col1 {\n",
              "  background-color: #00441b;\n",
              "  color: #f1f1f1;\n",
              "}\n",
              "#T_075f5_row1_col1 {\n",
              "  background-color: #1d8640;\n",
              "  color: #f1f1f1;\n",
              "}\n",
              "#T_075f5_row2_col1 {\n",
              "  background-color: #7ac77b;\n",
              "  color: #000000;\n",
              "}\n",
              "#T_075f5_row3_col1 {\n",
              "  background-color: #b8e3b2;\n",
              "  color: #000000;\n",
              "}\n",
              "#T_075f5_row4_col1 {\n",
              "  background-color: #d4eece;\n",
              "  color: #000000;\n",
              "}\n",
              "#T_075f5_row5_col1, #T_075f5_row6_col1 {\n",
              "  background-color: #d5efcf;\n",
              "  color: #000000;\n",
              "}\n",
              "#T_075f5_row7_col1 {\n",
              "  background-color: #d6efd0;\n",
              "  color: #000000;\n",
              "}\n",
              "#T_075f5_row8_col1 {\n",
              "  background-color: #e4f5df;\n",
              "  color: #000000;\n",
              "}\n",
              "#T_075f5_row9_col1, #T_075f5_row10_col1 {\n",
              "  background-color: #e9f7e5;\n",
              "  color: #000000;\n",
              "}\n",
              "#T_075f5_row11_col1, #T_075f5_row12_col1 {\n",
              "  background-color: #eaf7e6;\n",
              "  color: #000000;\n",
              "}\n",
              "#T_075f5_row13_col1 {\n",
              "  background-color: #ecf8e8;\n",
              "  color: #000000;\n",
              "}\n",
              "#T_075f5_row14_col1 {\n",
              "  background-color: #eff9eb;\n",
              "  color: #000000;\n",
              "}\n",
              "#T_075f5_row15_col1 {\n",
              "  background-color: #f1faee;\n",
              "  color: #000000;\n",
              "}\n",
              "#T_075f5_row16_col1 {\n",
              "  background-color: #f4fbf2;\n",
              "  color: #000000;\n",
              "}\n",
              "#T_075f5_row17_col1 {\n",
              "  background-color: #f5fbf2;\n",
              "  color: #000000;\n",
              "}\n",
              "#T_075f5_row18_col1, #T_075f5_row19_col1 {\n",
              "  background-color: #f7fcf5;\n",
              "  color: #000000;\n",
              "}\n",
              "</style>\n",
              "<table id=\"T_075f5_\" class=\"dataframe\">\n",
              "  <thead>\n",
              "    <tr>\n",
              "      <th class=\"blank level0\" >&nbsp;</th>\n",
              "      <th class=\"col_heading level0 col0\" >Common_words</th>\n",
              "      <th class=\"col_heading level0 col1\" >count</th>\n",
              "    </tr>\n",
              "  </thead>\n",
              "  <tbody>\n",
              "    <tr>\n",
              "      <th id=\"T_075f5_level0_row0\" class=\"row_heading level0 row0\" >0</th>\n",
              "      <td id=\"T_075f5_row0_col0\" class=\"data row0 col0\" >love</td>\n",
              "      <td id=\"T_075f5_row0_col1\" class=\"data row0 col1\" >2699</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th id=\"T_075f5_level0_row1\" class=\"row_heading level0 row1\" >1</th>\n",
              "      <td id=\"T_075f5_row1_col0\" class=\"data row1 col0\" >day</td>\n",
              "      <td id=\"T_075f5_row1_col1\" class=\"data row1 col1\" >2248</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th id=\"T_075f5_level0_row2\" class=\"row_heading level0 row2\" >2</th>\n",
              "      <td id=\"T_075f5_row2_col0\" class=\"data row2 col0\" >happy</td>\n",
              "      <td id=\"T_075f5_row2_col1\" class=\"data row2 col1\" >1679</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th id=\"T_075f5_level0_row3\" class=\"row_heading level0 row3\" >3</th>\n",
              "      <td id=\"T_075f5_row3_col0\" class=\"data row3 col0\" >amp</td>\n",
              "      <td id=\"T_075f5_row3_col1\" class=\"data row3 col1\" >1319</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th id=\"T_075f5_level0_row4\" class=\"row_heading level0 row4\" >4</th>\n",
              "      <td id=\"T_075f5_row4_col0\" class=\"data row4 col0\" >life</td>\n",
              "      <td id=\"T_075f5_row4_col1\" class=\"data row4 col1\" >1121</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th id=\"T_075f5_level0_row5\" class=\"row_heading level0 row5\" >5</th>\n",
              "      <td id=\"T_075f5_row5_col0\" class=\"data row5 col0\" >u</td>\n",
              "      <td id=\"T_075f5_row5_col1\" class=\"data row5 col1\" >1116</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th id=\"T_075f5_level0_row6\" class=\"row_heading level0 row6\" >6</th>\n",
              "      <td id=\"T_075f5_row6_col0\" class=\"data row6 col0\" >im</td>\n",
              "      <td id=\"T_075f5_row6_col1\" class=\"data row6 col1\" >1112</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th id=\"T_075f5_level0_row7\" class=\"row_heading level0 row7\" >7</th>\n",
              "      <td id=\"T_075f5_row7_col0\" class=\"data row7 col0\" >time</td>\n",
              "      <td id=\"T_075f5_row7_col1\" class=\"data row7 col1\" >1103</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th id=\"T_075f5_level0_row8\" class=\"row_heading level0 row8\" >8</th>\n",
              "      <td id=\"T_075f5_row8_col0\" class=\"data row8 col0\" >today</td>\n",
              "      <td id=\"T_075f5_row8_col1\" class=\"data row8 col1\" >993</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th id=\"T_075f5_level0_row9\" class=\"row_heading level0 row9\" >9</th>\n",
              "      <td id=\"T_075f5_row9_col0\" class=\"data row9 col0\" >positive</td>\n",
              "      <td id=\"T_075f5_row9_col1\" class=\"data row9 col1\" >931</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th id=\"T_075f5_level0_row10\" class=\"row_heading level0 row10\" >10</th>\n",
              "      <td id=\"T_075f5_row10_col0\" class=\"data row10 col0\" >thankful</td>\n",
              "      <td id=\"T_075f5_row10_col1\" class=\"data row10 col1\" >925</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th id=\"T_075f5_level0_row11\" class=\"row_heading level0 row11\" >11</th>\n",
              "      <td id=\"T_075f5_row11_col0\" class=\"data row11 col0\" >new</td>\n",
              "      <td id=\"T_075f5_row11_col1\" class=\"data row11 col1\" >916</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th id=\"T_075f5_level0_row12\" class=\"row_heading level0 row12\" >12</th>\n",
              "      <td id=\"T_075f5_row12_col0\" class=\"data row12 col0\" >like</td>\n",
              "      <td id=\"T_075f5_row12_col1\" class=\"data row12 col1\" >913</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th id=\"T_075f5_level0_row13\" class=\"row_heading level0 row13\" >13</th>\n",
              "      <td id=\"T_075f5_row13_col0\" class=\"data row13 col0\" >get</td>\n",
              "      <td id=\"T_075f5_row13_col1\" class=\"data row13 col1\" >885</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th id=\"T_075f5_level0_row14\" class=\"row_heading level0 row14\" >14</th>\n",
              "      <td id=\"T_075f5_row14_col0\" class=\"data row14 col0\" >bihday</td>\n",
              "      <td id=\"T_075f5_row14_col1\" class=\"data row14 col1\" >855</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th id=\"T_075f5_level0_row15\" class=\"row_heading level0 row15\" >15</th>\n",
              "      <td id=\"T_075f5_row15_col0\" class=\"data row15 col0\" >good</td>\n",
              "      <td id=\"T_075f5_row15_col1\" class=\"data row15 col1\" >817</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th id=\"T_075f5_level0_row16\" class=\"row_heading level0 row16\" >16</th>\n",
              "      <td id=\"T_075f5_row16_col0\" class=\"data row16 col0\" >cant</td>\n",
              "      <td id=\"T_075f5_row16_col1\" class=\"data row16 col1\" >776</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th id=\"T_075f5_level0_row17\" class=\"row_heading level0 row17\" >17</th>\n",
              "      <td id=\"T_075f5_row17_col0\" class=\"data row17 col0\" >people</td>\n",
              "      <td id=\"T_075f5_row17_col1\" class=\"data row17 col1\" >770</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th id=\"T_075f5_level0_row18\" class=\"row_heading level0 row18\" >18</th>\n",
              "      <td id=\"T_075f5_row18_col0\" class=\"data row18 col0\" >one</td>\n",
              "      <td id=\"T_075f5_row18_col1\" class=\"data row18 col1\" >735</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th id=\"T_075f5_level0_row19\" class=\"row_heading level0 row19\" >19</th>\n",
              "      <td id=\"T_075f5_row19_col0\" class=\"data row19 col0\" >see</td>\n",
              "      <td id=\"T_075f5_row19_col1\" class=\"data row19 col1\" >733</td>\n",
              "    </tr>\n",
              "  </tbody>\n",
              "</table>\n"
            ],
            "text/plain": [
              "<pandas.io.formats.style.Styler at 0x7f6fab21a750>"
            ]
          },
          "metadata": {},
          "execution_count": 40
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "fig = px.bar(temp_positive, x=\"count\", y=\"Common_words\", title='Most Commmon Positive Words', orientation='h', \n",
        "             width=700, height=700,color='Common_words')\n",
        "fig.show()"
      ],
      "metadata": {
        "id": "0YIN2qCsN__a",
        "outputId": "98953edd-6496-4698-a723-ac17b7f97963",
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 717
        }
      },
      "execution_count": 41,
      "outputs": [
        {
          "output_type": "display_data",
          "data": {
            "text/html": [
              "<html>\n",
              "<head><meta charset=\"utf-8\" /></head>\n",
              "<body>\n",
              "    <div>            <script src=\"https://cdnjs.cloudflare.com/ajax/libs/mathjax/2.7.5/MathJax.js?config=TeX-AMS-MML_SVG\"></script><script type=\"text/javascript\">if (window.MathJax) {MathJax.Hub.Config({SVG: {font: \"STIX-Web\"}});}</script>                <script type=\"text/javascript\">window.PlotlyConfig = {MathJaxConfig: 'local'};</script>\n",
              "        <script src=\"https://cdn.plot.ly/plotly-2.8.3.min.js\"></script>                <div id=\"0f163113-cd57-4a37-8a03-b69b351f7fe6\" class=\"plotly-graph-div\" style=\"height:700px; width:700px;\"></div>            <script type=\"text/javascript\">                                    window.PLOTLYENV=window.PLOTLYENV || {};                                    if (document.getElementById(\"0f163113-cd57-4a37-8a03-b69b351f7fe6\")) {                    Plotly.newPlot(                        \"0f163113-cd57-4a37-8a03-b69b351f7fe6\",                        [{\"alignmentgroup\":\"True\",\"hovertemplate\":\"Common_words=%{y}<br>count=%{x}<extra></extra>\",\"legendgroup\":\"love\",\"marker\":{\"color\":\"#636efa\",\"pattern\":{\"shape\":\"\"}},\"name\":\"love\",\"offsetgroup\":\"love\",\"orientation\":\"h\",\"showlegend\":true,\"textposition\":\"auto\",\"x\":[2699],\"xaxis\":\"x\",\"y\":[\"love\"],\"yaxis\":\"y\",\"type\":\"bar\"},{\"alignmentgroup\":\"True\",\"hovertemplate\":\"Common_words=%{y}<br>count=%{x}<extra></extra>\",\"legendgroup\":\"day\",\"marker\":{\"color\":\"#EF553B\",\"pattern\":{\"shape\":\"\"}},\"name\":\"day\",\"offsetgroup\":\"day\",\"orientation\":\"h\",\"showlegend\":true,\"textposition\":\"auto\",\"x\":[2248],\"xaxis\":\"x\",\"y\":[\"day\"],\"yaxis\":\"y\",\"type\":\"bar\"},{\"alignmentgroup\":\"True\",\"hovertemplate\":\"Common_words=%{y}<br>count=%{x}<extra></extra>\",\"legendgroup\":\"happy\",\"marker\":{\"color\":\"#00cc96\",\"pattern\":{\"shape\":\"\"}},\"name\":\"happy\",\"offsetgroup\":\"happy\",\"orientation\":\"h\",\"showlegend\":true,\"textposition\":\"auto\",\"x\":[1679],\"xaxis\":\"x\",\"y\":[\"happy\"],\"yaxis\":\"y\",\"type\":\"bar\"},{\"alignmentgroup\":\"True\",\"hovertemplate\":\"Common_words=%{y}<br>count=%{x}<extra></extra>\",\"legendgroup\":\"amp\",\"marker\":{\"color\":\"#ab63fa\",\"pattern\":{\"shape\":\"\"}},\"name\":\"amp\",\"offsetgroup\":\"amp\",\"orientation\":\"h\",\"showlegend\":true,\"textposition\":\"auto\",\"x\":[1319],\"xaxis\":\"x\",\"y\":[\"amp\"],\"yaxis\":\"y\",\"type\":\"bar\"},{\"alignmentgroup\":\"True\",\"hovertemplate\":\"Common_words=%{y}<br>count=%{x}<extra></extra>\",\"legendgroup\":\"life\",\"marker\":{\"color\":\"#FFA15A\",\"pattern\":{\"shape\":\"\"}},\"name\":\"life\",\"offsetgroup\":\"life\",\"orientation\":\"h\",\"showlegend\":true,\"textposition\":\"auto\",\"x\":[1121],\"xaxis\":\"x\",\"y\":[\"life\"],\"yaxis\":\"y\",\"type\":\"bar\"},{\"alignmentgroup\":\"True\",\"hovertemplate\":\"Common_words=%{y}<br>count=%{x}<extra></extra>\",\"legendgroup\":\"u\",\"marker\":{\"color\":\"#19d3f3\",\"pattern\":{\"shape\":\"\"}},\"name\":\"u\",\"offsetgroup\":\"u\",\"orientation\":\"h\",\"showlegend\":true,\"textposition\":\"auto\",\"x\":[1116],\"xaxis\":\"x\",\"y\":[\"u\"],\"yaxis\":\"y\",\"type\":\"bar\"},{\"alignmentgroup\":\"True\",\"hovertemplate\":\"Common_words=%{y}<br>count=%{x}<extra></extra>\",\"legendgroup\":\"im\",\"marker\":{\"color\":\"#FF6692\",\"pattern\":{\"shape\":\"\"}},\"name\":\"im\",\"offsetgroup\":\"im\",\"orientation\":\"h\",\"showlegend\":true,\"textposition\":\"auto\",\"x\":[1112],\"xaxis\":\"x\",\"y\":[\"im\"],\"yaxis\":\"y\",\"type\":\"bar\"},{\"alignmentgroup\":\"True\",\"hovertemplate\":\"Common_words=%{y}<br>count=%{x}<extra></extra>\",\"legendgroup\":\"time\",\"marker\":{\"color\":\"#B6E880\",\"pattern\":{\"shape\":\"\"}},\"name\":\"time\",\"offsetgroup\":\"time\",\"orientation\":\"h\",\"showlegend\":true,\"textposition\":\"auto\",\"x\":[1103],\"xaxis\":\"x\",\"y\":[\"time\"],\"yaxis\":\"y\",\"type\":\"bar\"},{\"alignmentgroup\":\"True\",\"hovertemplate\":\"Common_words=%{y}<br>count=%{x}<extra></extra>\",\"legendgroup\":\"today\",\"marker\":{\"color\":\"#FF97FF\",\"pattern\":{\"shape\":\"\"}},\"name\":\"today\",\"offsetgroup\":\"today\",\"orientation\":\"h\",\"showlegend\":true,\"textposition\":\"auto\",\"x\":[993],\"xaxis\":\"x\",\"y\":[\"today\"],\"yaxis\":\"y\",\"type\":\"bar\"},{\"alignmentgroup\":\"True\",\"hovertemplate\":\"Common_words=%{y}<br>count=%{x}<extra></extra>\",\"legendgroup\":\"positive\",\"marker\":{\"color\":\"#FECB52\",\"pattern\":{\"shape\":\"\"}},\"name\":\"positive\",\"offsetgroup\":\"positive\",\"orientation\":\"h\",\"showlegend\":true,\"textposition\":\"auto\",\"x\":[931],\"xaxis\":\"x\",\"y\":[\"positive\"],\"yaxis\":\"y\",\"type\":\"bar\"},{\"alignmentgroup\":\"True\",\"hovertemplate\":\"Common_words=%{y}<br>count=%{x}<extra></extra>\",\"legendgroup\":\"thankful\",\"marker\":{\"color\":\"#636efa\",\"pattern\":{\"shape\":\"\"}},\"name\":\"thankful\",\"offsetgroup\":\"thankful\",\"orientation\":\"h\",\"showlegend\":true,\"textposition\":\"auto\",\"x\":[925],\"xaxis\":\"x\",\"y\":[\"thankful\"],\"yaxis\":\"y\",\"type\":\"bar\"},{\"alignmentgroup\":\"True\",\"hovertemplate\":\"Common_words=%{y}<br>count=%{x}<extra></extra>\",\"legendgroup\":\"new\",\"marker\":{\"color\":\"#EF553B\",\"pattern\":{\"shape\":\"\"}},\"name\":\"new\",\"offsetgroup\":\"new\",\"orientation\":\"h\",\"showlegend\":true,\"textposition\":\"auto\",\"x\":[916],\"xaxis\":\"x\",\"y\":[\"new\"],\"yaxis\":\"y\",\"type\":\"bar\"},{\"alignmentgroup\":\"True\",\"hovertemplate\":\"Common_words=%{y}<br>count=%{x}<extra></extra>\",\"legendgroup\":\"like\",\"marker\":{\"color\":\"#00cc96\",\"pattern\":{\"shape\":\"\"}},\"name\":\"like\",\"offsetgroup\":\"like\",\"orientation\":\"h\",\"showlegend\":true,\"textposition\":\"auto\",\"x\":[913],\"xaxis\":\"x\",\"y\":[\"like\"],\"yaxis\":\"y\",\"type\":\"bar\"},{\"alignmentgroup\":\"True\",\"hovertemplate\":\"Common_words=%{y}<br>count=%{x}<extra></extra>\",\"legendgroup\":\"get\",\"marker\":{\"color\":\"#ab63fa\",\"pattern\":{\"shape\":\"\"}},\"name\":\"get\",\"offsetgroup\":\"get\",\"orientation\":\"h\",\"showlegend\":true,\"textposition\":\"auto\",\"x\":[885],\"xaxis\":\"x\",\"y\":[\"get\"],\"yaxis\":\"y\",\"type\":\"bar\"},{\"alignmentgroup\":\"True\",\"hovertemplate\":\"Common_words=%{y}<br>count=%{x}<extra></extra>\",\"legendgroup\":\"bihday\",\"marker\":{\"color\":\"#FFA15A\",\"pattern\":{\"shape\":\"\"}},\"name\":\"bihday\",\"offsetgroup\":\"bihday\",\"orientation\":\"h\",\"showlegend\":true,\"textposition\":\"auto\",\"x\":[855],\"xaxis\":\"x\",\"y\":[\"bihday\"],\"yaxis\":\"y\",\"type\":\"bar\"},{\"alignmentgroup\":\"True\",\"hovertemplate\":\"Common_words=%{y}<br>count=%{x}<extra></extra>\",\"legendgroup\":\"good\",\"marker\":{\"color\":\"#19d3f3\",\"pattern\":{\"shape\":\"\"}},\"name\":\"good\",\"offsetgroup\":\"good\",\"orientation\":\"h\",\"showlegend\":true,\"textposition\":\"auto\",\"x\":[817],\"xaxis\":\"x\",\"y\":[\"good\"],\"yaxis\":\"y\",\"type\":\"bar\"},{\"alignmentgroup\":\"True\",\"hovertemplate\":\"Common_words=%{y}<br>count=%{x}<extra></extra>\",\"legendgroup\":\"cant\",\"marker\":{\"color\":\"#FF6692\",\"pattern\":{\"shape\":\"\"}},\"name\":\"cant\",\"offsetgroup\":\"cant\",\"orientation\":\"h\",\"showlegend\":true,\"textposition\":\"auto\",\"x\":[776],\"xaxis\":\"x\",\"y\":[\"cant\"],\"yaxis\":\"y\",\"type\":\"bar\"},{\"alignmentgroup\":\"True\",\"hovertemplate\":\"Common_words=%{y}<br>count=%{x}<extra></extra>\",\"legendgroup\":\"people\",\"marker\":{\"color\":\"#B6E880\",\"pattern\":{\"shape\":\"\"}},\"name\":\"people\",\"offsetgroup\":\"people\",\"orientation\":\"h\",\"showlegend\":true,\"textposition\":\"auto\",\"x\":[770],\"xaxis\":\"x\",\"y\":[\"people\"],\"yaxis\":\"y\",\"type\":\"bar\"},{\"alignmentgroup\":\"True\",\"hovertemplate\":\"Common_words=%{y}<br>count=%{x}<extra></extra>\",\"legendgroup\":\"one\",\"marker\":{\"color\":\"#FF97FF\",\"pattern\":{\"shape\":\"\"}},\"name\":\"one\",\"offsetgroup\":\"one\",\"orientation\":\"h\",\"showlegend\":true,\"textposition\":\"auto\",\"x\":[735],\"xaxis\":\"x\",\"y\":[\"one\"],\"yaxis\":\"y\",\"type\":\"bar\"},{\"alignmentgroup\":\"True\",\"hovertemplate\":\"Common_words=%{y}<br>count=%{x}<extra></extra>\",\"legendgroup\":\"see\",\"marker\":{\"color\":\"#FECB52\",\"pattern\":{\"shape\":\"\"}},\"name\":\"see\",\"offsetgroup\":\"see\",\"orientation\":\"h\",\"showlegend\":true,\"textposition\":\"auto\",\"x\":[733],\"xaxis\":\"x\",\"y\":[\"see\"],\"yaxis\":\"y\",\"type\":\"bar\"}],                        {\"template\":{\"data\":{\"bar\":[{\"error_x\":{\"color\":\"#2a3f5f\"},\"error_y\":{\"color\":\"#2a3f5f\"},\"marker\":{\"line\":{\"color\":\"#E5ECF6\",\"width\":0.5},\"pattern\":{\"fillmode\":\"overlay\",\"size\":10,\"solidity\":0.2}},\"type\":\"bar\"}],\"barpolar\":[{\"marker\":{\"line\":{\"color\":\"#E5ECF6\",\"width\":0.5},\"pattern\":{\"fillmode\":\"overlay\",\"size\":10,\"solidity\":0.2}},\"type\":\"barpolar\"}],\"carpet\":[{\"aaxis\":{\"endlinecolor\":\"#2a3f5f\",\"gridcolor\":\"white\",\"linecolor\":\"white\",\"minorgridcolor\":\"white\",\"startlinecolor\":\"#2a3f5f\"},\"baxis\":{\"endlinecolor\":\"#2a3f5f\",\"gridcolor\":\"white\",\"linecolor\":\"white\",\"minorgridcolor\":\"white\",\"startlinecolor\":\"#2a3f5f\"},\"type\":\"carpet\"}],\"choropleth\":[{\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"},\"type\":\"choropleth\"}],\"contour\":[{\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"},\"colorscale\":[[0.0,\"#0d0887\"],[0.1111111111111111,\"#46039f\"],[0.2222222222222222,\"#7201a8\"],[0.3333333333333333,\"#9c179e\"],[0.4444444444444444,\"#bd3786\"],[0.5555555555555556,\"#d8576b\"],[0.6666666666666666,\"#ed7953\"],[0.7777777777777778,\"#fb9f3a\"],[0.8888888888888888,\"#fdca26\"],[1.0,\"#f0f921\"]],\"type\":\"contour\"}],\"contourcarpet\":[{\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"},\"type\":\"contourcarpet\"}],\"heatmap\":[{\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"},\"colorscale\":[[0.0,\"#0d0887\"],[0.1111111111111111,\"#46039f\"],[0.2222222222222222,\"#7201a8\"],[0.3333333333333333,\"#9c179e\"],[0.4444444444444444,\"#bd3786\"],[0.5555555555555556,\"#d8576b\"],[0.6666666666666666,\"#ed7953\"],[0.7777777777777778,\"#fb9f3a\"],[0.8888888888888888,\"#fdca26\"],[1.0,\"#f0f921\"]],\"type\":\"heatmap\"}],\"heatmapgl\":[{\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"},\"colorscale\":[[0.0,\"#0d0887\"],[0.1111111111111111,\"#46039f\"],[0.2222222222222222,\"#7201a8\"],[0.3333333333333333,\"#9c179e\"],[0.4444444444444444,\"#bd3786\"],[0.5555555555555556,\"#d8576b\"],[0.6666666666666666,\"#ed7953\"],[0.7777777777777778,\"#fb9f3a\"],[0.8888888888888888,\"#fdca26\"],[1.0,\"#f0f921\"]],\"type\":\"heatmapgl\"}],\"histogram\":[{\"marker\":{\"pattern\":{\"fillmode\":\"overlay\",\"size\":10,\"solidity\":0.2}},\"type\":\"histogram\"}],\"histogram2d\":[{\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"},\"colorscale\":[[0.0,\"#0d0887\"],[0.1111111111111111,\"#46039f\"],[0.2222222222222222,\"#7201a8\"],[0.3333333333333333,\"#9c179e\"],[0.4444444444444444,\"#bd3786\"],[0.5555555555555556,\"#d8576b\"],[0.6666666666666666,\"#ed7953\"],[0.7777777777777778,\"#fb9f3a\"],[0.8888888888888888,\"#fdca26\"],[1.0,\"#f0f921\"]],\"type\":\"histogram2d\"}],\"histogram2dcontour\":[{\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"},\"colorscale\":[[0.0,\"#0d0887\"],[0.1111111111111111,\"#46039f\"],[0.2222222222222222,\"#7201a8\"],[0.3333333333333333,\"#9c179e\"],[0.4444444444444444,\"#bd3786\"],[0.5555555555555556,\"#d8576b\"],[0.6666666666666666,\"#ed7953\"],[0.7777777777777778,\"#fb9f3a\"],[0.8888888888888888,\"#fdca26\"],[1.0,\"#f0f921\"]],\"type\":\"histogram2dcontour\"}],\"mesh3d\":[{\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"},\"type\":\"mesh3d\"}],\"parcoords\":[{\"line\":{\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"}},\"type\":\"parcoords\"}],\"pie\":[{\"automargin\":true,\"type\":\"pie\"}],\"scatter\":[{\"marker\":{\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"}},\"type\":\"scatter\"}],\"scatter3d\":[{\"line\":{\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"}},\"marker\":{\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"}},\"type\":\"scatter3d\"}],\"scattercarpet\":[{\"marker\":{\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"}},\"type\":\"scattercarpet\"}],\"scattergeo\":[{\"marker\":{\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"}},\"type\":\"scattergeo\"}],\"scattergl\":[{\"marker\":{\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"}},\"type\":\"scattergl\"}],\"scattermapbox\":[{\"marker\":{\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"}},\"type\":\"scattermapbox\"}],\"scatterpolar\":[{\"marker\":{\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"}},\"type\":\"scatterpolar\"}],\"scatterpolargl\":[{\"marker\":{\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"}},\"type\":\"scatterpolargl\"}],\"scatterternary\":[{\"marker\":{\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"}},\"type\":\"scatterternary\"}],\"surface\":[{\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"},\"colorscale\":[[0.0,\"#0d0887\"],[0.1111111111111111,\"#46039f\"],[0.2222222222222222,\"#7201a8\"],[0.3333333333333333,\"#9c179e\"],[0.4444444444444444,\"#bd3786\"],[0.5555555555555556,\"#d8576b\"],[0.6666666666666666,\"#ed7953\"],[0.7777777777777778,\"#fb9f3a\"],[0.8888888888888888,\"#fdca26\"],[1.0,\"#f0f921\"]],\"type\":\"surface\"}],\"table\":[{\"cells\":{\"fill\":{\"color\":\"#EBF0F8\"},\"line\":{\"color\":\"white\"}},\"header\":{\"fill\":{\"color\":\"#C8D4E3\"},\"line\":{\"color\":\"white\"}},\"type\":\"table\"}]},\"layout\":{\"annotationdefaults\":{\"arrowcolor\":\"#2a3f5f\",\"arrowhead\":0,\"arrowwidth\":1},\"autotypenumbers\":\"strict\",\"coloraxis\":{\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"}},\"colorscale\":{\"diverging\":[[0,\"#8e0152\"],[0.1,\"#c51b7d\"],[0.2,\"#de77ae\"],[0.3,\"#f1b6da\"],[0.4,\"#fde0ef\"],[0.5,\"#f7f7f7\"],[0.6,\"#e6f5d0\"],[0.7,\"#b8e186\"],[0.8,\"#7fbc41\"],[0.9,\"#4d9221\"],[1,\"#276419\"]],\"sequential\":[[0.0,\"#0d0887\"],[0.1111111111111111,\"#46039f\"],[0.2222222222222222,\"#7201a8\"],[0.3333333333333333,\"#9c179e\"],[0.4444444444444444,\"#bd3786\"],[0.5555555555555556,\"#d8576b\"],[0.6666666666666666,\"#ed7953\"],[0.7777777777777778,\"#fb9f3a\"],[0.8888888888888888,\"#fdca26\"],[1.0,\"#f0f921\"]],\"sequentialminus\":[[0.0,\"#0d0887\"],[0.1111111111111111,\"#46039f\"],[0.2222222222222222,\"#7201a8\"],[0.3333333333333333,\"#9c179e\"],[0.4444444444444444,\"#bd3786\"],[0.5555555555555556,\"#d8576b\"],[0.6666666666666666,\"#ed7953\"],[0.7777777777777778,\"#fb9f3a\"],[0.8888888888888888,\"#fdca26\"],[1.0,\"#f0f921\"]]},\"colorway\":[\"#636efa\",\"#EF553B\",\"#00cc96\",\"#ab63fa\",\"#FFA15A\",\"#19d3f3\",\"#FF6692\",\"#B6E880\",\"#FF97FF\",\"#FECB52\"],\"font\":{\"color\":\"#2a3f5f\"},\"geo\":{\"bgcolor\":\"white\",\"lakecolor\":\"white\",\"landcolor\":\"#E5ECF6\",\"showlakes\":true,\"showland\":true,\"subunitcolor\":\"white\"},\"hoverlabel\":{\"align\":\"left\"},\"hovermode\":\"closest\",\"mapbox\":{\"style\":\"light\"},\"paper_bgcolor\":\"white\",\"plot_bgcolor\":\"#E5ECF6\",\"polar\":{\"angularaxis\":{\"gridcolor\":\"white\",\"linecolor\":\"white\",\"ticks\":\"\"},\"bgcolor\":\"#E5ECF6\",\"radialaxis\":{\"gridcolor\":\"white\",\"linecolor\":\"white\",\"ticks\":\"\"}},\"scene\":{\"xaxis\":{\"backgroundcolor\":\"#E5ECF6\",\"gridcolor\":\"white\",\"gridwidth\":2,\"linecolor\":\"white\",\"showbackground\":true,\"ticks\":\"\",\"zerolinecolor\":\"white\"},\"yaxis\":{\"backgroundcolor\":\"#E5ECF6\",\"gridcolor\":\"white\",\"gridwidth\":2,\"linecolor\":\"white\",\"showbackground\":true,\"ticks\":\"\",\"zerolinecolor\":\"white\"},\"zaxis\":{\"backgroundcolor\":\"#E5ECF6\",\"gridcolor\":\"white\",\"gridwidth\":2,\"linecolor\":\"white\",\"showbackground\":true,\"ticks\":\"\",\"zerolinecolor\":\"white\"}},\"shapedefaults\":{\"line\":{\"color\":\"#2a3f5f\"}},\"ternary\":{\"aaxis\":{\"gridcolor\":\"white\",\"linecolor\":\"white\",\"ticks\":\"\"},\"baxis\":{\"gridcolor\":\"white\",\"linecolor\":\"white\",\"ticks\":\"\"},\"bgcolor\":\"#E5ECF6\",\"caxis\":{\"gridcolor\":\"white\",\"linecolor\":\"white\",\"ticks\":\"\"}},\"title\":{\"x\":0.05},\"xaxis\":{\"automargin\":true,\"gridcolor\":\"white\",\"linecolor\":\"white\",\"ticks\":\"\",\"title\":{\"standoff\":15},\"zerolinecolor\":\"white\",\"zerolinewidth\":2},\"yaxis\":{\"automargin\":true,\"gridcolor\":\"white\",\"linecolor\":\"white\",\"ticks\":\"\",\"title\":{\"standoff\":15},\"zerolinecolor\":\"white\",\"zerolinewidth\":2}}},\"xaxis\":{\"anchor\":\"y\",\"domain\":[0.0,1.0],\"title\":{\"text\":\"count\"}},\"yaxis\":{\"anchor\":\"x\",\"domain\":[0.0,1.0],\"title\":{\"text\":\"Common_words\"},\"categoryorder\":\"array\",\"categoryarray\":[\"see\",\"one\",\"people\",\"cant\",\"good\",\"bihday\",\"get\",\"like\",\"new\",\"thankful\",\"positive\",\"today\",\"time\",\"im\",\"u\",\"life\",\"amp\",\"happy\",\"day\",\"love\"]},\"legend\":{\"title\":{\"text\":\"Common_words\"},\"tracegroupgap\":0},\"title\":{\"text\":\"Most Commmon Positive Words\"},\"barmode\":\"relative\",\"height\":700,\"width\":700},                        {\"responsive\": true}                    ).then(function(){\n",
              "                            \n",
              "var gd = document.getElementById('0f163113-cd57-4a37-8a03-b69b351f7fe6');\n",
              "var x = new MutationObserver(function (mutations, observer) {{\n",
              "        var display = window.getComputedStyle(gd).display;\n",
              "        if (!display || display === 'none') {{\n",
              "            console.log([gd, 'removed!']);\n",
              "            Plotly.purge(gd);\n",
              "            observer.disconnect();\n",
              "        }}\n",
              "}});\n",
              "\n",
              "// Listen for the removal of the full notebook cells\n",
              "var notebookContainer = gd.closest('#notebook-container');\n",
              "if (notebookContainer) {{\n",
              "    x.observe(notebookContainer, {childList: true});\n",
              "}}\n",
              "\n",
              "// Listen for the clearing of the current output cell\n",
              "var outputEl = gd.closest('.output');\n",
              "if (outputEl) {{\n",
              "    x.observe(outputEl, {childList: true});\n",
              "}}\n",
              "\n",
              "                        })                };                            </script>        </div>\n",
              "</body>\n",
              "</html>"
            ]
          },
          "metadata": {}
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "fig = px.treemap(temp_positive, path=['Common_words'], values='count',title='Tree Of Most Common Positive Words')\n",
        "fig.show()"
      ],
      "metadata": {
        "id": "pfwxJy2-OUp0",
        "outputId": "3373483a-ed58-4f44-c6d7-aaf8af2d785f",
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 542
        }
      },
      "execution_count": 42,
      "outputs": [
        {
          "output_type": "display_data",
          "data": {
            "text/html": [
              "<html>\n",
              "<head><meta charset=\"utf-8\" /></head>\n",
              "<body>\n",
              "    <div>            <script src=\"https://cdnjs.cloudflare.com/ajax/libs/mathjax/2.7.5/MathJax.js?config=TeX-AMS-MML_SVG\"></script><script type=\"text/javascript\">if (window.MathJax) {MathJax.Hub.Config({SVG: {font: \"STIX-Web\"}});}</script>                <script type=\"text/javascript\">window.PlotlyConfig = {MathJaxConfig: 'local'};</script>\n",
              "        <script src=\"https://cdn.plot.ly/plotly-2.8.3.min.js\"></script>                <div id=\"1d381064-ffc4-46aa-84ed-0170631c5928\" class=\"plotly-graph-div\" style=\"height:525px; width:100%;\"></div>            <script type=\"text/javascript\">                                    window.PLOTLYENV=window.PLOTLYENV || {};                                    if (document.getElementById(\"1d381064-ffc4-46aa-84ed-0170631c5928\")) {                    Plotly.newPlot(                        \"1d381064-ffc4-46aa-84ed-0170631c5928\",                        [{\"branchvalues\":\"total\",\"domain\":{\"x\":[0.0,1.0],\"y\":[0.0,1.0]},\"hovertemplate\":\"labels=%{label}<br>count=%{value}<br>parent=%{parent}<br>id=%{id}<extra></extra>\",\"ids\":[\"amp\",\"bihday\",\"cant\",\"day\",\"get\",\"good\",\"happy\",\"im\",\"life\",\"like\",\"love\",\"new\",\"one\",\"people\",\"positive\",\"see\",\"thankful\",\"time\",\"today\",\"u\"],\"labels\":[\"amp\",\"bihday\",\"cant\",\"day\",\"get\",\"good\",\"happy\",\"im\",\"life\",\"like\",\"love\",\"new\",\"one\",\"people\",\"positive\",\"see\",\"thankful\",\"time\",\"today\",\"u\"],\"name\":\"\",\"parents\":[\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\"],\"values\":[1319,855,776,2248,885,817,1679,1112,1121,913,2699,916,735,770,931,733,925,1103,993,1116],\"type\":\"treemap\"}],                        {\"template\":{\"data\":{\"bar\":[{\"error_x\":{\"color\":\"#2a3f5f\"},\"error_y\":{\"color\":\"#2a3f5f\"},\"marker\":{\"line\":{\"color\":\"#E5ECF6\",\"width\":0.5},\"pattern\":{\"fillmode\":\"overlay\",\"size\":10,\"solidity\":0.2}},\"type\":\"bar\"}],\"barpolar\":[{\"marker\":{\"line\":{\"color\":\"#E5ECF6\",\"width\":0.5},\"pattern\":{\"fillmode\":\"overlay\",\"size\":10,\"solidity\":0.2}},\"type\":\"barpolar\"}],\"carpet\":[{\"aaxis\":{\"endlinecolor\":\"#2a3f5f\",\"gridcolor\":\"white\",\"linecolor\":\"white\",\"minorgridcolor\":\"white\",\"startlinecolor\":\"#2a3f5f\"},\"baxis\":{\"endlinecolor\":\"#2a3f5f\",\"gridcolor\":\"white\",\"linecolor\":\"white\",\"minorgridcolor\":\"white\",\"startlinecolor\":\"#2a3f5f\"},\"type\":\"carpet\"}],\"choropleth\":[{\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"},\"type\":\"choropleth\"}],\"contour\":[{\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"},\"colorscale\":[[0.0,\"#0d0887\"],[0.1111111111111111,\"#46039f\"],[0.2222222222222222,\"#7201a8\"],[0.3333333333333333,\"#9c179e\"],[0.4444444444444444,\"#bd3786\"],[0.5555555555555556,\"#d8576b\"],[0.6666666666666666,\"#ed7953\"],[0.7777777777777778,\"#fb9f3a\"],[0.8888888888888888,\"#fdca26\"],[1.0,\"#f0f921\"]],\"type\":\"contour\"}],\"contourcarpet\":[{\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"},\"type\":\"contourcarpet\"}],\"heatmap\":[{\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"},\"colorscale\":[[0.0,\"#0d0887\"],[0.1111111111111111,\"#46039f\"],[0.2222222222222222,\"#7201a8\"],[0.3333333333333333,\"#9c179e\"],[0.4444444444444444,\"#bd3786\"],[0.5555555555555556,\"#d8576b\"],[0.6666666666666666,\"#ed7953\"],[0.7777777777777778,\"#fb9f3a\"],[0.8888888888888888,\"#fdca26\"],[1.0,\"#f0f921\"]],\"type\":\"heatmap\"}],\"heatmapgl\":[{\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"},\"colorscale\":[[0.0,\"#0d0887\"],[0.1111111111111111,\"#46039f\"],[0.2222222222222222,\"#7201a8\"],[0.3333333333333333,\"#9c179e\"],[0.4444444444444444,\"#bd3786\"],[0.5555555555555556,\"#d8576b\"],[0.6666666666666666,\"#ed7953\"],[0.7777777777777778,\"#fb9f3a\"],[0.8888888888888888,\"#fdca26\"],[1.0,\"#f0f921\"]],\"type\":\"heatmapgl\"}],\"histogram\":[{\"marker\":{\"pattern\":{\"fillmode\":\"overlay\",\"size\":10,\"solidity\":0.2}},\"type\":\"histogram\"}],\"histogram2d\":[{\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"},\"colorscale\":[[0.0,\"#0d0887\"],[0.1111111111111111,\"#46039f\"],[0.2222222222222222,\"#7201a8\"],[0.3333333333333333,\"#9c179e\"],[0.4444444444444444,\"#bd3786\"],[0.5555555555555556,\"#d8576b\"],[0.6666666666666666,\"#ed7953\"],[0.7777777777777778,\"#fb9f3a\"],[0.8888888888888888,\"#fdca26\"],[1.0,\"#f0f921\"]],\"type\":\"histogram2d\"}],\"histogram2dcontour\":[{\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"},\"colorscale\":[[0.0,\"#0d0887\"],[0.1111111111111111,\"#46039f\"],[0.2222222222222222,\"#7201a8\"],[0.3333333333333333,\"#9c179e\"],[0.4444444444444444,\"#bd3786\"],[0.5555555555555556,\"#d8576b\"],[0.6666666666666666,\"#ed7953\"],[0.7777777777777778,\"#fb9f3a\"],[0.8888888888888888,\"#fdca26\"],[1.0,\"#f0f921\"]],\"type\":\"histogram2dcontour\"}],\"mesh3d\":[{\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"},\"type\":\"mesh3d\"}],\"parcoords\":[{\"line\":{\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"}},\"type\":\"parcoords\"}],\"pie\":[{\"automargin\":true,\"type\":\"pie\"}],\"scatter\":[{\"marker\":{\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"}},\"type\":\"scatter\"}],\"scatter3d\":[{\"line\":{\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"}},\"marker\":{\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"}},\"type\":\"scatter3d\"}],\"scattercarpet\":[{\"marker\":{\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"}},\"type\":\"scattercarpet\"}],\"scattergeo\":[{\"marker\":{\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"}},\"type\":\"scattergeo\"}],\"scattergl\":[{\"marker\":{\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"}},\"type\":\"scattergl\"}],\"scattermapbox\":[{\"marker\":{\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"}},\"type\":\"scattermapbox\"}],\"scatterpolar\":[{\"marker\":{\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"}},\"type\":\"scatterpolar\"}],\"scatterpolargl\":[{\"marker\":{\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"}},\"type\":\"scatterpolargl\"}],\"scatterternary\":[{\"marker\":{\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"}},\"type\":\"scatterternary\"}],\"surface\":[{\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"},\"colorscale\":[[0.0,\"#0d0887\"],[0.1111111111111111,\"#46039f\"],[0.2222222222222222,\"#7201a8\"],[0.3333333333333333,\"#9c179e\"],[0.4444444444444444,\"#bd3786\"],[0.5555555555555556,\"#d8576b\"],[0.6666666666666666,\"#ed7953\"],[0.7777777777777778,\"#fb9f3a\"],[0.8888888888888888,\"#fdca26\"],[1.0,\"#f0f921\"]],\"type\":\"surface\"}],\"table\":[{\"cells\":{\"fill\":{\"color\":\"#EBF0F8\"},\"line\":{\"color\":\"white\"}},\"header\":{\"fill\":{\"color\":\"#C8D4E3\"},\"line\":{\"color\":\"white\"}},\"type\":\"table\"}]},\"layout\":{\"annotationdefaults\":{\"arrowcolor\":\"#2a3f5f\",\"arrowhead\":0,\"arrowwidth\":1},\"autotypenumbers\":\"strict\",\"coloraxis\":{\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"}},\"colorscale\":{\"diverging\":[[0,\"#8e0152\"],[0.1,\"#c51b7d\"],[0.2,\"#de77ae\"],[0.3,\"#f1b6da\"],[0.4,\"#fde0ef\"],[0.5,\"#f7f7f7\"],[0.6,\"#e6f5d0\"],[0.7,\"#b8e186\"],[0.8,\"#7fbc41\"],[0.9,\"#4d9221\"],[1,\"#276419\"]],\"sequential\":[[0.0,\"#0d0887\"],[0.1111111111111111,\"#46039f\"],[0.2222222222222222,\"#7201a8\"],[0.3333333333333333,\"#9c179e\"],[0.4444444444444444,\"#bd3786\"],[0.5555555555555556,\"#d8576b\"],[0.6666666666666666,\"#ed7953\"],[0.7777777777777778,\"#fb9f3a\"],[0.8888888888888888,\"#fdca26\"],[1.0,\"#f0f921\"]],\"sequentialminus\":[[0.0,\"#0d0887\"],[0.1111111111111111,\"#46039f\"],[0.2222222222222222,\"#7201a8\"],[0.3333333333333333,\"#9c179e\"],[0.4444444444444444,\"#bd3786\"],[0.5555555555555556,\"#d8576b\"],[0.6666666666666666,\"#ed7953\"],[0.7777777777777778,\"#fb9f3a\"],[0.8888888888888888,\"#fdca26\"],[1.0,\"#f0f921\"]]},\"colorway\":[\"#636efa\",\"#EF553B\",\"#00cc96\",\"#ab63fa\",\"#FFA15A\",\"#19d3f3\",\"#FF6692\",\"#B6E880\",\"#FF97FF\",\"#FECB52\"],\"font\":{\"color\":\"#2a3f5f\"},\"geo\":{\"bgcolor\":\"white\",\"lakecolor\":\"white\",\"landcolor\":\"#E5ECF6\",\"showlakes\":true,\"showland\":true,\"subunitcolor\":\"white\"},\"hoverlabel\":{\"align\":\"left\"},\"hovermode\":\"closest\",\"mapbox\":{\"style\":\"light\"},\"paper_bgcolor\":\"white\",\"plot_bgcolor\":\"#E5ECF6\",\"polar\":{\"angularaxis\":{\"gridcolor\":\"white\",\"linecolor\":\"white\",\"ticks\":\"\"},\"bgcolor\":\"#E5ECF6\",\"radialaxis\":{\"gridcolor\":\"white\",\"linecolor\":\"white\",\"ticks\":\"\"}},\"scene\":{\"xaxis\":{\"backgroundcolor\":\"#E5ECF6\",\"gridcolor\":\"white\",\"gridwidth\":2,\"linecolor\":\"white\",\"showbackground\":true,\"ticks\":\"\",\"zerolinecolor\":\"white\"},\"yaxis\":{\"backgroundcolor\":\"#E5ECF6\",\"gridcolor\":\"white\",\"gridwidth\":2,\"linecolor\":\"white\",\"showbackground\":true,\"ticks\":\"\",\"zerolinecolor\":\"white\"},\"zaxis\":{\"backgroundcolor\":\"#E5ECF6\",\"gridcolor\":\"white\",\"gridwidth\":2,\"linecolor\":\"white\",\"showbackground\":true,\"ticks\":\"\",\"zerolinecolor\":\"white\"}},\"shapedefaults\":{\"line\":{\"color\":\"#2a3f5f\"}},\"ternary\":{\"aaxis\":{\"gridcolor\":\"white\",\"linecolor\":\"white\",\"ticks\":\"\"},\"baxis\":{\"gridcolor\":\"white\",\"linecolor\":\"white\",\"ticks\":\"\"},\"bgcolor\":\"#E5ECF6\",\"caxis\":{\"gridcolor\":\"white\",\"linecolor\":\"white\",\"ticks\":\"\"}},\"title\":{\"x\":0.05},\"xaxis\":{\"automargin\":true,\"gridcolor\":\"white\",\"linecolor\":\"white\",\"ticks\":\"\",\"title\":{\"standoff\":15},\"zerolinecolor\":\"white\",\"zerolinewidth\":2},\"yaxis\":{\"automargin\":true,\"gridcolor\":\"white\",\"linecolor\":\"white\",\"ticks\":\"\",\"title\":{\"standoff\":15},\"zerolinecolor\":\"white\",\"zerolinewidth\":2}}},\"legend\":{\"tracegroupgap\":0},\"title\":{\"text\":\"Tree Of Most Common Positive Words\"}},                        {\"responsive\": true}                    ).then(function(){\n",
              "                            \n",
              "var gd = document.getElementById('1d381064-ffc4-46aa-84ed-0170631c5928');\n",
              "var x = new MutationObserver(function (mutations, observer) {{\n",
              "        var display = window.getComputedStyle(gd).display;\n",
              "        if (!display || display === 'none') {{\n",
              "            console.log([gd, 'removed!']);\n",
              "            Plotly.purge(gd);\n",
              "            observer.disconnect();\n",
              "        }}\n",
              "}});\n",
              "\n",
              "// Listen for the removal of the full notebook cells\n",
              "var notebookContainer = gd.closest('#notebook-container');\n",
              "if (notebookContainer) {{\n",
              "    x.observe(notebookContainer, {childList: true});\n",
              "}}\n",
              "\n",
              "// Listen for the clearing of the current output cell\n",
              "var outputEl = gd.closest('.output');\n",
              "if (outputEl) {{\n",
              "    x.observe(outputEl, {childList: true});\n",
              "}}\n",
              "\n",
              "                        })                };                            </script>        </div>\n",
              "</body>\n",
              "</html>"
            ]
          },
          "metadata": {}
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "from wordcloud import WordCloud\n",
        "all_words_pos = ' '.join([text for text in df['clean_tweets'][df['label']== 0] ])\n",
        "wordcloud = WordCloud(width=800, height=500, random_state=21, max_font_size=110).generate(all_words_pos)\n",
        "#random=0.30\n",
        "plt.figure(figsize=(10, 7))\n",
        "plt.imshow(wordcloud, interpolation=\"bilinear\")\n",
        "plt.axis('off')\n",
        "plt.show()"
      ],
      "metadata": {
        "id": "lC6aYC4ZnYTr",
        "outputId": "d8a229a7-4534-4ed5-86ed-710b52ad6116",
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 380
        }
      },
      "execution_count": 43,
      "outputs": [
        {
          "output_type": "display_data",
          "data": {
            "image/png": "\n",
            "text/plain": [
              "<Figure size 720x504 with 1 Axes>"
            ]
          },
          "metadata": {
            "needs_background": "light"
          }
        }
      ]
    },
    {
      "cell_type": "markdown",
      "source": [
        "# Tokenization "
      ],
      "metadata": {
        "id": "0xOEuSuMPnvy"
      }
    },
    {
      "cell_type": "code",
      "source": [
        "df.head()"
      ],
      "metadata": {
        "id": "CJOVVj7mqZOq",
        "outputId": "e1a99452-c6f8-42f2-f79a-f41dc649ecb3",
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 0
        }
      },
      "execution_count": 44,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/html": [
              "\n",
              "  <div id=\"df-331d54af-f902-4856-9ced-77dd7a628de6\">\n",
              "    <div class=\"colab-df-container\">\n",
              "      <div>\n",
              "<style scoped>\n",
              "    .dataframe tbody tr th:only-of-type {\n",
              "        vertical-align: middle;\n",
              "    }\n",
              "\n",
              "    .dataframe tbody tr th {\n",
              "        vertical-align: top;\n",
              "    }\n",
              "\n",
              "    .dataframe thead th {\n",
              "        text-align: right;\n",
              "    }\n",
              "</style>\n",
              "<table border=\"1\" class=\"dataframe\">\n",
              "  <thead>\n",
              "    <tr style=\"text-align: right;\">\n",
              "      <th></th>\n",
              "      <th>id</th>\n",
              "      <th>label</th>\n",
              "      <th>tweet</th>\n",
              "      <th>clean_tweets</th>\n",
              "    </tr>\n",
              "  </thead>\n",
              "  <tbody>\n",
              "    <tr>\n",
              "      <th>0</th>\n",
              "      <td>1</td>\n",
              "      <td>0</td>\n",
              "      <td>@user when a father is dysfunctional and is s...</td>\n",
              "      <td>father dysfunctional selfish drags kids dysfun...</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>1</th>\n",
              "      <td>2</td>\n",
              "      <td>0</td>\n",
              "      <td>@user @user thanks for #lyft credit i can't us...</td>\n",
              "      <td>thanks lyft credit cant use cause dont offer w...</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>2</th>\n",
              "      <td>3</td>\n",
              "      <td>0</td>\n",
              "      <td>bihday your majesty</td>\n",
              "      <td>bihday majesty</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>3</th>\n",
              "      <td>4</td>\n",
              "      <td>0</td>\n",
              "      <td>#model   i love u take with u all the time in ...</td>\n",
              "      <td>model love u take u time ur</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>4</th>\n",
              "      <td>5</td>\n",
              "      <td>0</td>\n",
              "      <td>factsguide: society now    #motivation</td>\n",
              "      <td>factsguide society motivation</td>\n",
              "    </tr>\n",
              "  </tbody>\n",
              "</table>\n",
              "</div>\n",
              "      <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-331d54af-f902-4856-9ced-77dd7a628de6')\"\n",
              "              title=\"Convert this dataframe to an interactive table.\"\n",
              "              style=\"display:none;\">\n",
              "        \n",
              "  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n",
              "       width=\"24px\">\n",
              "    <path d=\"M0 0h24v24H0V0z\" fill=\"none\"/>\n",
              "    <path d=\"M18.56 5.44l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94zm-11 1L8.5 8.5l.94-2.06 2.06-.94-2.06-.94L8.5 2.5l-.94 2.06-2.06.94zm10 10l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94z\"/><path d=\"M17.41 7.96l-1.37-1.37c-.4-.4-.92-.59-1.43-.59-.52 0-1.04.2-1.43.59L10.3 9.45l-7.72 7.72c-.78.78-.78 2.05 0 2.83L4 21.41c.39.39.9.59 1.41.59.51 0 1.02-.2 1.41-.59l7.78-7.78 2.81-2.81c.8-.78.8-2.07 0-2.86zM5.41 20L4 18.59l7.72-7.72 1.47 1.35L5.41 20z\"/>\n",
              "  </svg>\n",
              "      </button>\n",
              "      \n",
              "  <style>\n",
              "    .colab-df-container {\n",
              "      display:flex;\n",
              "      flex-wrap:wrap;\n",
              "      gap: 12px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert {\n",
              "      background-color: #E8F0FE;\n",
              "      border: none;\n",
              "      border-radius: 50%;\n",
              "      cursor: pointer;\n",
              "      display: none;\n",
              "      fill: #1967D2;\n",
              "      height: 32px;\n",
              "      padding: 0 0 0 0;\n",
              "      width: 32px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert:hover {\n",
              "      background-color: #E2EBFA;\n",
              "      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n",
              "      fill: #174EA6;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert {\n",
              "      background-color: #3B4455;\n",
              "      fill: #D2E3FC;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert:hover {\n",
              "      background-color: #434B5C;\n",
              "      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n",
              "      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n",
              "      fill: #FFFFFF;\n",
              "    }\n",
              "  </style>\n",
              "\n",
              "      <script>\n",
              "        const buttonEl =\n",
              "          document.querySelector('#df-331d54af-f902-4856-9ced-77dd7a628de6 button.colab-df-convert');\n",
              "        buttonEl.style.display =\n",
              "          google.colab.kernel.accessAllowed ? 'block' : 'none';\n",
              "\n",
              "        async function convertToInteractive(key) {\n",
              "          const element = document.querySelector('#df-331d54af-f902-4856-9ced-77dd7a628de6');\n",
              "          const dataTable =\n",
              "            await google.colab.kernel.invokeFunction('convertToInteractive',\n",
              "                                                     [key], {});\n",
              "          if (!dataTable) return;\n",
              "\n",
              "          const docLinkHtml = 'Like what you see? Visit the ' +\n",
              "            '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n",
              "            + ' to learn more about interactive tables.';\n",
              "          element.innerHTML = '';\n",
              "          dataTable['output_type'] = 'display_data';\n",
              "          await google.colab.output.renderOutput(dataTable, element);\n",
              "          const docLink = document.createElement('div');\n",
              "          docLink.innerHTML = docLinkHtml;\n",
              "          element.appendChild(docLink);\n",
              "        }\n",
              "      </script>\n",
              "    </div>\n",
              "  </div>\n",
              "  "
            ],
            "text/plain": [
              "   id  ...                                       clean_tweets\n",
              "0   1  ...  father dysfunctional selfish drags kids dysfun...\n",
              "1   2  ...  thanks lyft credit cant use cause dont offer w...\n",
              "2   3  ...                                     bihday majesty\n",
              "3   4  ...                        model love u take u time ur\n",
              "4   5  ...                      factsguide society motivation\n",
              "\n",
              "[5 rows x 4 columns]"
            ]
          },
          "metadata": {},
          "execution_count": 44
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "# df[\"clean_tweets\"] =df[\"clean_tweets\"].apply(lambda x:str(x).split()) \n",
        "# df.head()"
      ],
      "metadata": {
        "id": "lPYHQXG1qdlh"
      },
      "execution_count": 45,
      "outputs": []
    },
    {
      "cell_type": "code",
      "source": [
        "from nltk.tokenize import word_tokenize \n",
        "\n",
        "df['clean_tweets'] = df['clean_tweets'].apply(nltk.word_tokenize)"
      ],
      "metadata": {
        "id": "wuKlUdbE8wlZ"
      },
      "execution_count": 46,
      "outputs": []
    },
    {
      "cell_type": "code",
      "source": [
        "import nltk\n",
        "nltk.download('wordnet')\n",
        "from nltk.stem import WordNetLemmatizer\n",
        "lemmatiser = WordNetLemmatizer()\n",
        "df[\"clean_tweets\"] = df[\"clean_tweets\"].apply(lambda tokens: [lemmatiser.lemmatize(token, pos='v') for token in tokens])\n",
        "df"
      ],
      "metadata": {
        "id": "EyEV3dOKrNuO",
        "outputId": "2d5ac34d-a23a-4f90-f984-86f944eb1b4e",
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 0
        }
      },
      "execution_count": 47,
      "outputs": [
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "[nltk_data] Downloading package wordnet to /root/nltk_data...\n",
            "[nltk_data]   Unzipping corpora/wordnet.zip.\n"
          ]
        },
        {
          "output_type": "execute_result",
          "data": {
            "text/html": [
              "\n",
              "  <div id=\"df-3e72bab1-3908-4d4b-829b-9152903448a3\">\n",
              "    <div class=\"colab-df-container\">\n",
              "      <div>\n",
              "<style scoped>\n",
              "    .dataframe tbody tr th:only-of-type {\n",
              "        vertical-align: middle;\n",
              "    }\n",
              "\n",
              "    .dataframe tbody tr th {\n",
              "        vertical-align: top;\n",
              "    }\n",
              "\n",
              "    .dataframe thead th {\n",
              "        text-align: right;\n",
              "    }\n",
              "</style>\n",
              "<table border=\"1\" class=\"dataframe\">\n",
              "  <thead>\n",
              "    <tr style=\"text-align: right;\">\n",
              "      <th></th>\n",
              "      <th>id</th>\n",
              "      <th>label</th>\n",
              "      <th>tweet</th>\n",
              "      <th>clean_tweets</th>\n",
              "    </tr>\n",
              "  </thead>\n",
              "  <tbody>\n",
              "    <tr>\n",
              "      <th>0</th>\n",
              "      <td>1</td>\n",
              "      <td>0</td>\n",
              "      <td>@user when a father is dysfunctional and is s...</td>\n",
              "      <td>[father, dysfunctional, selfish, drag, kid, dy...</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>1</th>\n",
              "      <td>2</td>\n",
              "      <td>0</td>\n",
              "      <td>@user @user thanks for #lyft credit i can't us...</td>\n",
              "      <td>[thank, lyft, credit, cant, use, cause, dont, ...</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>2</th>\n",
              "      <td>3</td>\n",
              "      <td>0</td>\n",
              "      <td>bihday your majesty</td>\n",
              "      <td>[bihday, majesty]</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>3</th>\n",
              "      <td>4</td>\n",
              "      <td>0</td>\n",
              "      <td>#model   i love u take with u all the time in ...</td>\n",
              "      <td>[model, love, u, take, u, time, ur]</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>4</th>\n",
              "      <td>5</td>\n",
              "      <td>0</td>\n",
              "      <td>factsguide: society now    #motivation</td>\n",
              "      <td>[factsguide, society, motivation]</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>...</th>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>31957</th>\n",
              "      <td>31958</td>\n",
              "      <td>0</td>\n",
              "      <td>ate @user isz that youuu?ðððððð...</td>\n",
              "      <td>[eat, isz, youuu]</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>31958</th>\n",
              "      <td>31959</td>\n",
              "      <td>0</td>\n",
              "      <td>to see nina turner on the airwaves trying to...</td>\n",
              "      <td>[see, nina, turner, airwaves, try, wrap, mantl...</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>31959</th>\n",
              "      <td>31960</td>\n",
              "      <td>0</td>\n",
              "      <td>listening to sad songs on a monday morning otw...</td>\n",
              "      <td>[listen, sad, songs, monday, morning, otw, wor...</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>31960</th>\n",
              "      <td>31961</td>\n",
              "      <td>1</td>\n",
              "      <td>@user #sikh #temple vandalised in in #calgary,...</td>\n",
              "      <td>[sikh, temple, vandalise, calgary, wso, condem...</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>31961</th>\n",
              "      <td>31962</td>\n",
              "      <td>0</td>\n",
              "      <td>thank you @user for you follow</td>\n",
              "      <td>[thank, follow]</td>\n",
              "    </tr>\n",
              "  </tbody>\n",
              "</table>\n",
              "<p>31962 rows × 4 columns</p>\n",
              "</div>\n",
              "      <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-3e72bab1-3908-4d4b-829b-9152903448a3')\"\n",
              "              title=\"Convert this dataframe to an interactive table.\"\n",
              "              style=\"display:none;\">\n",
              "        \n",
              "  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n",
              "       width=\"24px\">\n",
              "    <path d=\"M0 0h24v24H0V0z\" fill=\"none\"/>\n",
              "    <path d=\"M18.56 5.44l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94zm-11 1L8.5 8.5l.94-2.06 2.06-.94-2.06-.94L8.5 2.5l-.94 2.06-2.06.94zm10 10l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94z\"/><path d=\"M17.41 7.96l-1.37-1.37c-.4-.4-.92-.59-1.43-.59-.52 0-1.04.2-1.43.59L10.3 9.45l-7.72 7.72c-.78.78-.78 2.05 0 2.83L4 21.41c.39.39.9.59 1.41.59.51 0 1.02-.2 1.41-.59l7.78-7.78 2.81-2.81c.8-.78.8-2.07 0-2.86zM5.41 20L4 18.59l7.72-7.72 1.47 1.35L5.41 20z\"/>\n",
              "  </svg>\n",
              "      </button>\n",
              "      \n",
              "  <style>\n",
              "    .colab-df-container {\n",
              "      display:flex;\n",
              "      flex-wrap:wrap;\n",
              "      gap: 12px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert {\n",
              "      background-color: #E8F0FE;\n",
              "      border: none;\n",
              "      border-radius: 50%;\n",
              "      cursor: pointer;\n",
              "      display: none;\n",
              "      fill: #1967D2;\n",
              "      height: 32px;\n",
              "      padding: 0 0 0 0;\n",
              "      width: 32px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert:hover {\n",
              "      background-color: #E2EBFA;\n",
              "      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n",
              "      fill: #174EA6;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert {\n",
              "      background-color: #3B4455;\n",
              "      fill: #D2E3FC;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert:hover {\n",
              "      background-color: #434B5C;\n",
              "      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n",
              "      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n",
              "      fill: #FFFFFF;\n",
              "    }\n",
              "  </style>\n",
              "\n",
              "      <script>\n",
              "        const buttonEl =\n",
              "          document.querySelector('#df-3e72bab1-3908-4d4b-829b-9152903448a3 button.colab-df-convert');\n",
              "        buttonEl.style.display =\n",
              "          google.colab.kernel.accessAllowed ? 'block' : 'none';\n",
              "\n",
              "        async function convertToInteractive(key) {\n",
              "          const element = document.querySelector('#df-3e72bab1-3908-4d4b-829b-9152903448a3');\n",
              "          const dataTable =\n",
              "            await google.colab.kernel.invokeFunction('convertToInteractive',\n",
              "                                                     [key], {});\n",
              "          if (!dataTable) return;\n",
              "\n",
              "          const docLinkHtml = 'Like what you see? Visit the ' +\n",
              "            '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n",
              "            + ' to learn more about interactive tables.';\n",
              "          element.innerHTML = '';\n",
              "          dataTable['output_type'] = 'display_data';\n",
              "          await google.colab.output.renderOutput(dataTable, element);\n",
              "          const docLink = document.createElement('div');\n",
              "          docLink.innerHTML = docLinkHtml;\n",
              "          element.appendChild(docLink);\n",
              "        }\n",
              "      </script>\n",
              "    </div>\n",
              "  </div>\n",
              "  "
            ],
            "text/plain": [
              "          id  ...                                       clean_tweets\n",
              "0          1  ...  [father, dysfunctional, selfish, drag, kid, dy...\n",
              "1          2  ...  [thank, lyft, credit, cant, use, cause, dont, ...\n",
              "2          3  ...                                  [bihday, majesty]\n",
              "3          4  ...                [model, love, u, take, u, time, ur]\n",
              "4          5  ...                  [factsguide, society, motivation]\n",
              "...      ...  ...                                                ...\n",
              "31957  31958  ...                                  [eat, isz, youuu]\n",
              "31958  31959  ...  [see, nina, turner, airwaves, try, wrap, mantl...\n",
              "31959  31960  ...  [listen, sad, songs, monday, morning, otw, wor...\n",
              "31960  31961  ...  [sikh, temple, vandalise, calgary, wso, condem...\n",
              "31961  31962  ...                                    [thank, follow]\n",
              "\n",
              "[31962 rows x 4 columns]"
            ]
          },
          "metadata": {},
          "execution_count": 47
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "df.head(20)"
      ],
      "metadata": {
        "id": "VQ3osSO5rrPi",
        "outputId": "a155d9fc-98fd-4b75-ff8c-f56d3f3fb6b3",
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 0
        }
      },
      "execution_count": 48,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/html": [
              "\n",
              "  <div id=\"df-00be3e78-9e90-4b70-b1ad-4058ae991a52\">\n",
              "    <div class=\"colab-df-container\">\n",
              "      <div>\n",
              "<style scoped>\n",
              "    .dataframe tbody tr th:only-of-type {\n",
              "        vertical-align: middle;\n",
              "    }\n",
              "\n",
              "    .dataframe tbody tr th {\n",
              "        vertical-align: top;\n",
              "    }\n",
              "\n",
              "    .dataframe thead th {\n",
              "        text-align: right;\n",
              "    }\n",
              "</style>\n",
              "<table border=\"1\" class=\"dataframe\">\n",
              "  <thead>\n",
              "    <tr style=\"text-align: right;\">\n",
              "      <th></th>\n",
              "      <th>id</th>\n",
              "      <th>label</th>\n",
              "      <th>tweet</th>\n",
              "      <th>clean_tweets</th>\n",
              "    </tr>\n",
              "  </thead>\n",
              "  <tbody>\n",
              "    <tr>\n",
              "      <th>0</th>\n",
              "      <td>1</td>\n",
              "      <td>0</td>\n",
              "      <td>@user when a father is dysfunctional and is s...</td>\n",
              "      <td>[father, dysfunctional, selfish, drag, kid, dy...</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>1</th>\n",
              "      <td>2</td>\n",
              "      <td>0</td>\n",
              "      <td>@user @user thanks for #lyft credit i can't us...</td>\n",
              "      <td>[thank, lyft, credit, cant, use, cause, dont, ...</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>2</th>\n",
              "      <td>3</td>\n",
              "      <td>0</td>\n",
              "      <td>bihday your majesty</td>\n",
              "      <td>[bihday, majesty]</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>3</th>\n",
              "      <td>4</td>\n",
              "      <td>0</td>\n",
              "      <td>#model   i love u take with u all the time in ...</td>\n",
              "      <td>[model, love, u, take, u, time, ur]</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>4</th>\n",
              "      <td>5</td>\n",
              "      <td>0</td>\n",
              "      <td>factsguide: society now    #motivation</td>\n",
              "      <td>[factsguide, society, motivation]</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>5</th>\n",
              "      <td>6</td>\n",
              "      <td>0</td>\n",
              "      <td>[2/2] huge fan fare and big talking before the...</td>\n",
              "      <td>[22, huge, fan, fare, big, talk, leave, chaos,...</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>6</th>\n",
              "      <td>7</td>\n",
              "      <td>0</td>\n",
              "      <td>@user camping tomorrow @user @user @user @use...</td>\n",
              "      <td>[camp, tomorrow, danny]</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>7</th>\n",
              "      <td>8</td>\n",
              "      <td>0</td>\n",
              "      <td>the next school year is the year for exams.ð...</td>\n",
              "      <td>[next, school, year, year, exams, cant, think,...</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>8</th>\n",
              "      <td>9</td>\n",
              "      <td>0</td>\n",
              "      <td>we won!!! love the land!!! #allin #cavs #champ...</td>\n",
              "      <td>[love, land, allin, cavs, champion, cleveland,...</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>9</th>\n",
              "      <td>10</td>\n",
              "      <td>0</td>\n",
              "      <td>@user @user welcome here !  i'm   it's so #gr...</td>\n",
              "      <td>[welcome, im, gr8]</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>10</th>\n",
              "      <td>11</td>\n",
              "      <td>0</td>\n",
              "      <td>â #ireland consumer price index (mom) climb...</td>\n",
              "      <td>[ireland, consumer, price, index, mom, climb, ...</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>11</th>\n",
              "      <td>12</td>\n",
              "      <td>0</td>\n",
              "      <td>we are so selfish. #orlando #standwithorlando ...</td>\n",
              "      <td>[selfish, orlando, standwithorlando, pulseshoo...</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>12</th>\n",
              "      <td>13</td>\n",
              "      <td>0</td>\n",
              "      <td>i get to see my daddy today!!   #80days #getti...</td>\n",
              "      <td>[get, see, daddy, today, 80days, gettingfed]</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>13</th>\n",
              "      <td>14</td>\n",
              "      <td>1</td>\n",
              "      <td>@user #cnn calls #michigan middle school 'buil...</td>\n",
              "      <td>[cnn, call, michigan, middle, school, build, w...</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>14</th>\n",
              "      <td>15</td>\n",
              "      <td>1</td>\n",
              "      <td>no comment!  in #australia   #opkillingbay #se...</td>\n",
              "      <td>[comment, australia, opkillingbay, seashepherd...</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>15</th>\n",
              "      <td>16</td>\n",
              "      <td>0</td>\n",
              "      <td>ouch...junior is angryð#got7 #junior #yugyo...</td>\n",
              "      <td>[ouchjunior, angrygot7, junior, yugyoem, omg]</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>16</th>\n",
              "      <td>17</td>\n",
              "      <td>0</td>\n",
              "      <td>i am thankful for having a paner. #thankful #p...</td>\n",
              "      <td>[thankful, paner, thankful, positive]</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>17</th>\n",
              "      <td>18</td>\n",
              "      <td>1</td>\n",
              "      <td>retweet if you agree!</td>\n",
              "      <td>[retweet, agree]</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>18</th>\n",
              "      <td>19</td>\n",
              "      <td>0</td>\n",
              "      <td>its #friday! ð smiles all around via ig use...</td>\n",
              "      <td>[friday, smile, around, via, ig, cookies, make...</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>19</th>\n",
              "      <td>20</td>\n",
              "      <td>0</td>\n",
              "      <td>as we all know, essential oils are not made of...</td>\n",
              "      <td>[know, essential, oil, make, chemicals]</td>\n",
              "    </tr>\n",
              "  </tbody>\n",
              "</table>\n",
              "</div>\n",
              "      <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-00be3e78-9e90-4b70-b1ad-4058ae991a52')\"\n",
              "              title=\"Convert this dataframe to an interactive table.\"\n",
              "              style=\"display:none;\">\n",
              "        \n",
              "  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n",
              "       width=\"24px\">\n",
              "    <path d=\"M0 0h24v24H0V0z\" fill=\"none\"/>\n",
              "    <path d=\"M18.56 5.44l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94zm-11 1L8.5 8.5l.94-2.06 2.06-.94-2.06-.94L8.5 2.5l-.94 2.06-2.06.94zm10 10l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94z\"/><path d=\"M17.41 7.96l-1.37-1.37c-.4-.4-.92-.59-1.43-.59-.52 0-1.04.2-1.43.59L10.3 9.45l-7.72 7.72c-.78.78-.78 2.05 0 2.83L4 21.41c.39.39.9.59 1.41.59.51 0 1.02-.2 1.41-.59l7.78-7.78 2.81-2.81c.8-.78.8-2.07 0-2.86zM5.41 20L4 18.59l7.72-7.72 1.47 1.35L5.41 20z\"/>\n",
              "  </svg>\n",
              "      </button>\n",
              "      \n",
              "  <style>\n",
              "    .colab-df-container {\n",
              "      display:flex;\n",
              "      flex-wrap:wrap;\n",
              "      gap: 12px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert {\n",
              "      background-color: #E8F0FE;\n",
              "      border: none;\n",
              "      border-radius: 50%;\n",
              "      cursor: pointer;\n",
              "      display: none;\n",
              "      fill: #1967D2;\n",
              "      height: 32px;\n",
              "      padding: 0 0 0 0;\n",
              "      width: 32px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert:hover {\n",
              "      background-color: #E2EBFA;\n",
              "      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n",
              "      fill: #174EA6;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert {\n",
              "      background-color: #3B4455;\n",
              "      fill: #D2E3FC;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert:hover {\n",
              "      background-color: #434B5C;\n",
              "      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n",
              "      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n",
              "      fill: #FFFFFF;\n",
              "    }\n",
              "  </style>\n",
              "\n",
              "      <script>\n",
              "        const buttonEl =\n",
              "          document.querySelector('#df-00be3e78-9e90-4b70-b1ad-4058ae991a52 button.colab-df-convert');\n",
              "        buttonEl.style.display =\n",
              "          google.colab.kernel.accessAllowed ? 'block' : 'none';\n",
              "\n",
              "        async function convertToInteractive(key) {\n",
              "          const element = document.querySelector('#df-00be3e78-9e90-4b70-b1ad-4058ae991a52');\n",
              "          const dataTable =\n",
              "            await google.colab.kernel.invokeFunction('convertToInteractive',\n",
              "                                                     [key], {});\n",
              "          if (!dataTable) return;\n",
              "\n",
              "          const docLinkHtml = 'Like what you see? Visit the ' +\n",
              "            '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n",
              "            + ' to learn more about interactive tables.';\n",
              "          element.innerHTML = '';\n",
              "          dataTable['output_type'] = 'display_data';\n",
              "          await google.colab.output.renderOutput(dataTable, element);\n",
              "          const docLink = document.createElement('div');\n",
              "          docLink.innerHTML = docLinkHtml;\n",
              "          element.appendChild(docLink);\n",
              "        }\n",
              "      </script>\n",
              "    </div>\n",
              "  </div>\n",
              "  "
            ],
            "text/plain": [
              "    id  ...                                       clean_tweets\n",
              "0    1  ...  [father, dysfunctional, selfish, drag, kid, dy...\n",
              "1    2  ...  [thank, lyft, credit, cant, use, cause, dont, ...\n",
              "2    3  ...                                  [bihday, majesty]\n",
              "3    4  ...                [model, love, u, take, u, time, ur]\n",
              "4    5  ...                  [factsguide, society, motivation]\n",
              "5    6  ...  [22, huge, fan, fare, big, talk, leave, chaos,...\n",
              "6    7  ...                            [camp, tomorrow, danny]\n",
              "7    8  ...  [next, school, year, year, exams, cant, think,...\n",
              "8    9  ...  [love, land, allin, cavs, champion, cleveland,...\n",
              "9   10  ...                                 [welcome, im, gr8]\n",
              "10  11  ...  [ireland, consumer, price, index, mom, climb, ...\n",
              "11  12  ...  [selfish, orlando, standwithorlando, pulseshoo...\n",
              "12  13  ...       [get, see, daddy, today, 80days, gettingfed]\n",
              "13  14  ...  [cnn, call, michigan, middle, school, build, w...\n",
              "14  15  ...  [comment, australia, opkillingbay, seashepherd...\n",
              "15  16  ...      [ouchjunior, angrygot7, junior, yugyoem, omg]\n",
              "16  17  ...              [thankful, paner, thankful, positive]\n",
              "17  18  ...                                   [retweet, agree]\n",
              "18  19  ...  [friday, smile, around, via, ig, cookies, make...\n",
              "19  20  ...            [know, essential, oil, make, chemicals]\n",
              "\n",
              "[20 rows x 4 columns]"
            ]
          },
          "metadata": {},
          "execution_count": 48
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "test.head()"
      ],
      "metadata": {
        "id": "nw5TLG1FRaFK",
        "outputId": "aa6f8ef7-70f1-4c76-a53f-979e4fcc8e5d",
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 0
        }
      },
      "execution_count": 49,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/html": [
              "\n",
              "  <div id=\"df-abd4b109-9a5c-4130-835f-e69c90fe1f98\">\n",
              "    <div class=\"colab-df-container\">\n",
              "      <div>\n",
              "<style scoped>\n",
              "    .dataframe tbody tr th:only-of-type {\n",
              "        vertical-align: middle;\n",
              "    }\n",
              "\n",
              "    .dataframe tbody tr th {\n",
              "        vertical-align: top;\n",
              "    }\n",
              "\n",
              "    .dataframe thead th {\n",
              "        text-align: right;\n",
              "    }\n",
              "</style>\n",
              "<table border=\"1\" class=\"dataframe\">\n",
              "  <thead>\n",
              "    <tr style=\"text-align: right;\">\n",
              "      <th></th>\n",
              "      <th>id</th>\n",
              "      <th>tweet</th>\n",
              "    </tr>\n",
              "  </thead>\n",
              "  <tbody>\n",
              "    <tr>\n",
              "      <th>0</th>\n",
              "      <td>31963</td>\n",
              "      <td>#studiolife #aislife #requires #passion #dedic...</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>1</th>\n",
              "      <td>31964</td>\n",
              "      <td>@user #white #supremacists want everyone to s...</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>2</th>\n",
              "      <td>31965</td>\n",
              "      <td>safe ways to heal your #acne!!    #altwaystohe...</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>3</th>\n",
              "      <td>31966</td>\n",
              "      <td>is the hp and the cursed child book up for res...</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>4</th>\n",
              "      <td>31967</td>\n",
              "      <td>3rd #bihday to my amazing, hilarious #nephew...</td>\n",
              "    </tr>\n",
              "  </tbody>\n",
              "</table>\n",
              "</div>\n",
              "      <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-abd4b109-9a5c-4130-835f-e69c90fe1f98')\"\n",
              "              title=\"Convert this dataframe to an interactive table.\"\n",
              "              style=\"display:none;\">\n",
              "        \n",
              "  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n",
              "       width=\"24px\">\n",
              "    <path d=\"M0 0h24v24H0V0z\" fill=\"none\"/>\n",
              "    <path d=\"M18.56 5.44l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94zm-11 1L8.5 8.5l.94-2.06 2.06-.94-2.06-.94L8.5 2.5l-.94 2.06-2.06.94zm10 10l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94z\"/><path d=\"M17.41 7.96l-1.37-1.37c-.4-.4-.92-.59-1.43-.59-.52 0-1.04.2-1.43.59L10.3 9.45l-7.72 7.72c-.78.78-.78 2.05 0 2.83L4 21.41c.39.39.9.59 1.41.59.51 0 1.02-.2 1.41-.59l7.78-7.78 2.81-2.81c.8-.78.8-2.07 0-2.86zM5.41 20L4 18.59l7.72-7.72 1.47 1.35L5.41 20z\"/>\n",
              "  </svg>\n",
              "      </button>\n",
              "      \n",
              "  <style>\n",
              "    .colab-df-container {\n",
              "      display:flex;\n",
              "      flex-wrap:wrap;\n",
              "      gap: 12px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert {\n",
              "      background-color: #E8F0FE;\n",
              "      border: none;\n",
              "      border-radius: 50%;\n",
              "      cursor: pointer;\n",
              "      display: none;\n",
              "      fill: #1967D2;\n",
              "      height: 32px;\n",
              "      padding: 0 0 0 0;\n",
              "      width: 32px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert:hover {\n",
              "      background-color: #E2EBFA;\n",
              "      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n",
              "      fill: #174EA6;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert {\n",
              "      background-color: #3B4455;\n",
              "      fill: #D2E3FC;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert:hover {\n",
              "      background-color: #434B5C;\n",
              "      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n",
              "      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n",
              "      fill: #FFFFFF;\n",
              "    }\n",
              "  </style>\n",
              "\n",
              "      <script>\n",
              "        const buttonEl =\n",
              "          document.querySelector('#df-abd4b109-9a5c-4130-835f-e69c90fe1f98 button.colab-df-convert');\n",
              "        buttonEl.style.display =\n",
              "          google.colab.kernel.accessAllowed ? 'block' : 'none';\n",
              "\n",
              "        async function convertToInteractive(key) {\n",
              "          const element = document.querySelector('#df-abd4b109-9a5c-4130-835f-e69c90fe1f98');\n",
              "          const dataTable =\n",
              "            await google.colab.kernel.invokeFunction('convertToInteractive',\n",
              "                                                     [key], {});\n",
              "          if (!dataTable) return;\n",
              "\n",
              "          const docLinkHtml = 'Like what you see? Visit the ' +\n",
              "            '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n",
              "            + ' to learn more about interactive tables.';\n",
              "          element.innerHTML = '';\n",
              "          dataTable['output_type'] = 'display_data';\n",
              "          await google.colab.output.renderOutput(dataTable, element);\n",
              "          const docLink = document.createElement('div');\n",
              "          docLink.innerHTML = docLinkHtml;\n",
              "          element.appendChild(docLink);\n",
              "        }\n",
              "      </script>\n",
              "    </div>\n",
              "  </div>\n",
              "  "
            ],
            "text/plain": [
              "      id                                              tweet\n",
              "0  31963  #studiolife #aislife #requires #passion #dedic...\n",
              "1  31964   @user #white #supremacists want everyone to s...\n",
              "2  31965  safe ways to heal your #acne!!    #altwaystohe...\n",
              "3  31966  is the hp and the cursed child book up for res...\n",
              "4  31967    3rd #bihday to my amazing, hilarious #nephew..."
            ]
          },
          "metadata": {},
          "execution_count": 49
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "df1 = test.copy()\n",
        "df1.head()"
      ],
      "metadata": {
        "id": "23nikHFsRhkA",
        "outputId": "03c40e11-5a0e-48af-e5a4-b2b617f572a8",
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 0
        }
      },
      "execution_count": 50,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/html": [
              "\n",
              "  <div id=\"df-0bef9ae2-ea4b-43ab-b9ba-c6fcfb946169\">\n",
              "    <div class=\"colab-df-container\">\n",
              "      <div>\n",
              "<style scoped>\n",
              "    .dataframe tbody tr th:only-of-type {\n",
              "        vertical-align: middle;\n",
              "    }\n",
              "\n",
              "    .dataframe tbody tr th {\n",
              "        vertical-align: top;\n",
              "    }\n",
              "\n",
              "    .dataframe thead th {\n",
              "        text-align: right;\n",
              "    }\n",
              "</style>\n",
              "<table border=\"1\" class=\"dataframe\">\n",
              "  <thead>\n",
              "    <tr style=\"text-align: right;\">\n",
              "      <th></th>\n",
              "      <th>id</th>\n",
              "      <th>tweet</th>\n",
              "    </tr>\n",
              "  </thead>\n",
              "  <tbody>\n",
              "    <tr>\n",
              "      <th>0</th>\n",
              "      <td>31963</td>\n",
              "      <td>#studiolife #aislife #requires #passion #dedic...</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>1</th>\n",
              "      <td>31964</td>\n",
              "      <td>@user #white #supremacists want everyone to s...</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>2</th>\n",
              "      <td>31965</td>\n",
              "      <td>safe ways to heal your #acne!!    #altwaystohe...</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>3</th>\n",
              "      <td>31966</td>\n",
              "      <td>is the hp and the cursed child book up for res...</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>4</th>\n",
              "      <td>31967</td>\n",
              "      <td>3rd #bihday to my amazing, hilarious #nephew...</td>\n",
              "    </tr>\n",
              "  </tbody>\n",
              "</table>\n",
              "</div>\n",
              "      <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-0bef9ae2-ea4b-43ab-b9ba-c6fcfb946169')\"\n",
              "              title=\"Convert this dataframe to an interactive table.\"\n",
              "              style=\"display:none;\">\n",
              "        \n",
              "  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n",
              "       width=\"24px\">\n",
              "    <path d=\"M0 0h24v24H0V0z\" fill=\"none\"/>\n",
              "    <path d=\"M18.56 5.44l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94zm-11 1L8.5 8.5l.94-2.06 2.06-.94-2.06-.94L8.5 2.5l-.94 2.06-2.06.94zm10 10l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94z\"/><path d=\"M17.41 7.96l-1.37-1.37c-.4-.4-.92-.59-1.43-.59-.52 0-1.04.2-1.43.59L10.3 9.45l-7.72 7.72c-.78.78-.78 2.05 0 2.83L4 21.41c.39.39.9.59 1.41.59.51 0 1.02-.2 1.41-.59l7.78-7.78 2.81-2.81c.8-.78.8-2.07 0-2.86zM5.41 20L4 18.59l7.72-7.72 1.47 1.35L5.41 20z\"/>\n",
              "  </svg>\n",
              "      </button>\n",
              "      \n",
              "  <style>\n",
              "    .colab-df-container {\n",
              "      display:flex;\n",
              "      flex-wrap:wrap;\n",
              "      gap: 12px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert {\n",
              "      background-color: #E8F0FE;\n",
              "      border: none;\n",
              "      border-radius: 50%;\n",
              "      cursor: pointer;\n",
              "      display: none;\n",
              "      fill: #1967D2;\n",
              "      height: 32px;\n",
              "      padding: 0 0 0 0;\n",
              "      width: 32px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert:hover {\n",
              "      background-color: #E2EBFA;\n",
              "      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n",
              "      fill: #174EA6;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert {\n",
              "      background-color: #3B4455;\n",
              "      fill: #D2E3FC;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert:hover {\n",
              "      background-color: #434B5C;\n",
              "      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n",
              "      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n",
              "      fill: #FFFFFF;\n",
              "    }\n",
              "  </style>\n",
              "\n",
              "      <script>\n",
              "        const buttonEl =\n",
              "          document.querySelector('#df-0bef9ae2-ea4b-43ab-b9ba-c6fcfb946169 button.colab-df-convert');\n",
              "        buttonEl.style.display =\n",
              "          google.colab.kernel.accessAllowed ? 'block' : 'none';\n",
              "\n",
              "        async function convertToInteractive(key) {\n",
              "          const element = document.querySelector('#df-0bef9ae2-ea4b-43ab-b9ba-c6fcfb946169');\n",
              "          const dataTable =\n",
              "            await google.colab.kernel.invokeFunction('convertToInteractive',\n",
              "                                                     [key], {});\n",
              "          if (!dataTable) return;\n",
              "\n",
              "          const docLinkHtml = 'Like what you see? Visit the ' +\n",
              "            '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n",
              "            + ' to learn more about interactive tables.';\n",
              "          element.innerHTML = '';\n",
              "          dataTable['output_type'] = 'display_data';\n",
              "          await google.colab.output.renderOutput(dataTable, element);\n",
              "          const docLink = document.createElement('div');\n",
              "          docLink.innerHTML = docLinkHtml;\n",
              "          element.appendChild(docLink);\n",
              "        }\n",
              "      </script>\n",
              "    </div>\n",
              "  </div>\n",
              "  "
            ],
            "text/plain": [
              "      id                                              tweet\n",
              "0  31963  #studiolife #aislife #requires #passion #dedic...\n",
              "1  31964   @user #white #supremacists want everyone to s...\n",
              "2  31965  safe ways to heal your #acne!!    #altwaystohe...\n",
              "3  31966  is the hp and the cursed child book up for res...\n",
              "4  31967    3rd #bihday to my amazing, hilarious #nephew..."
            ]
          },
          "metadata": {},
          "execution_count": 50
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "# test preprocessing\n",
        "#Removing links \n",
        "df1[\"clean_tweets\"] = df1[\"tweet\"].apply(lambda s: ' '.join(re.sub(\"(w+://S+)\", \" \", s).split()))\n",
        "\n",
        "#Changing all the letter to lower case\n",
        "df1['clean_tweets'] = df1.tweet.map(lambda x: x.lower())\n",
        "\n",
        "#Removing the punctuation\n",
        "df1['clean_tweets'] = df1['clean_tweets'].apply(lambda x: re.sub('[%s]' % re.escape(string.punctuation), '' , x))\n",
        "df1['clean_tweets'] = df1['clean_tweets'].str.replace('user','')\n",
        "\n",
        "# Removing emojis\n",
        "def deEmojify(inputString):\n",
        "    return inputString.encode('ascii', 'ignore').decode('ascii')\n",
        "df1[\"clean_tweets\"] = df1[\"clean_tweets\"].apply(lambda s: deEmojify(s))\n",
        "\n",
        "# to remove stop words\n",
        "df1['clean_tweets'] = df1['clean_tweets'].apply(lambda x: ' '.join([word for word in x.split() if word not in (sw_nltk)]))\n",
        "\n",
        "# to tokenize\n",
        "df1[\"clean_tweets\"] =df1[\"clean_tweets\"].apply(lambda x:str(x).split()) \n",
        "\n",
        "# to normalize the data using lemmatization\n",
        "df1[\"clean_tweets\"] = df1[\"clean_tweets\"].apply(lambda tokens: [lemmatiser.lemmatize(token, pos='v') for token in tokens])\n",
        "df1.head()"
      ],
      "metadata": {
        "id": "m1BCQF77syZH",
        "outputId": "972b94b8-a9fa-45a9-87b6-0da6b9f3d505",
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 0
        }
      },
      "execution_count": 51,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/html": [
              "\n",
              "  <div id=\"df-abbdb5ea-5e64-47aa-88bb-2d3809963770\">\n",
              "    <div class=\"colab-df-container\">\n",
              "      <div>\n",
              "<style scoped>\n",
              "    .dataframe tbody tr th:only-of-type {\n",
              "        vertical-align: middle;\n",
              "    }\n",
              "\n",
              "    .dataframe tbody tr th {\n",
              "        vertical-align: top;\n",
              "    }\n",
              "\n",
              "    .dataframe thead th {\n",
              "        text-align: right;\n",
              "    }\n",
              "</style>\n",
              "<table border=\"1\" class=\"dataframe\">\n",
              "  <thead>\n",
              "    <tr style=\"text-align: right;\">\n",
              "      <th></th>\n",
              "      <th>id</th>\n",
              "      <th>tweet</th>\n",
              "      <th>clean_tweets</th>\n",
              "    </tr>\n",
              "  </thead>\n",
              "  <tbody>\n",
              "    <tr>\n",
              "      <th>0</th>\n",
              "      <td>31963</td>\n",
              "      <td>#studiolife #aislife #requires #passion #dedic...</td>\n",
              "      <td>[studiolife, aislife, require, passion, dedica...</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>1</th>\n",
              "      <td>31964</td>\n",
              "      <td>@user #white #supremacists want everyone to s...</td>\n",
              "      <td>[white, supremacists, want, everyone, see, new...</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>2</th>\n",
              "      <td>31965</td>\n",
              "      <td>safe ways to heal your #acne!!    #altwaystohe...</td>\n",
              "      <td>[safe, ways, heal, acne, altwaystoheal, health...</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>3</th>\n",
              "      <td>31966</td>\n",
              "      <td>is the hp and the cursed child book up for res...</td>\n",
              "      <td>[hp, curse, child, book, reservations, already...</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>4</th>\n",
              "      <td>31967</td>\n",
              "      <td>3rd #bihday to my amazing, hilarious #nephew...</td>\n",
              "      <td>[3rd, bihday, amaze, hilarious, nephew, eli, a...</td>\n",
              "    </tr>\n",
              "  </tbody>\n",
              "</table>\n",
              "</div>\n",
              "      <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-abbdb5ea-5e64-47aa-88bb-2d3809963770')\"\n",
              "              title=\"Convert this dataframe to an interactive table.\"\n",
              "              style=\"display:none;\">\n",
              "        \n",
              "  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n",
              "       width=\"24px\">\n",
              "    <path d=\"M0 0h24v24H0V0z\" fill=\"none\"/>\n",
              "    <path d=\"M18.56 5.44l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94zm-11 1L8.5 8.5l.94-2.06 2.06-.94-2.06-.94L8.5 2.5l-.94 2.06-2.06.94zm10 10l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94z\"/><path d=\"M17.41 7.96l-1.37-1.37c-.4-.4-.92-.59-1.43-.59-.52 0-1.04.2-1.43.59L10.3 9.45l-7.72 7.72c-.78.78-.78 2.05 0 2.83L4 21.41c.39.39.9.59 1.41.59.51 0 1.02-.2 1.41-.59l7.78-7.78 2.81-2.81c.8-.78.8-2.07 0-2.86zM5.41 20L4 18.59l7.72-7.72 1.47 1.35L5.41 20z\"/>\n",
              "  </svg>\n",
              "      </button>\n",
              "      \n",
              "  <style>\n",
              "    .colab-df-container {\n",
              "      display:flex;\n",
              "      flex-wrap:wrap;\n",
              "      gap: 12px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert {\n",
              "      background-color: #E8F0FE;\n",
              "      border: none;\n",
              "      border-radius: 50%;\n",
              "      cursor: pointer;\n",
              "      display: none;\n",
              "      fill: #1967D2;\n",
              "      height: 32px;\n",
              "      padding: 0 0 0 0;\n",
              "      width: 32px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert:hover {\n",
              "      background-color: #E2EBFA;\n",
              "      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n",
              "      fill: #174EA6;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert {\n",
              "      background-color: #3B4455;\n",
              "      fill: #D2E3FC;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert:hover {\n",
              "      background-color: #434B5C;\n",
              "      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n",
              "      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n",
              "      fill: #FFFFFF;\n",
              "    }\n",
              "  </style>\n",
              "\n",
              "      <script>\n",
              "        const buttonEl =\n",
              "          document.querySelector('#df-abbdb5ea-5e64-47aa-88bb-2d3809963770 button.colab-df-convert');\n",
              "        buttonEl.style.display =\n",
              "          google.colab.kernel.accessAllowed ? 'block' : 'none';\n",
              "\n",
              "        async function convertToInteractive(key) {\n",
              "          const element = document.querySelector('#df-abbdb5ea-5e64-47aa-88bb-2d3809963770');\n",
              "          const dataTable =\n",
              "            await google.colab.kernel.invokeFunction('convertToInteractive',\n",
              "                                                     [key], {});\n",
              "          if (!dataTable) return;\n",
              "\n",
              "          const docLinkHtml = 'Like what you see? Visit the ' +\n",
              "            '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n",
              "            + ' to learn more about interactive tables.';\n",
              "          element.innerHTML = '';\n",
              "          dataTable['output_type'] = 'display_data';\n",
              "          await google.colab.output.renderOutput(dataTable, element);\n",
              "          const docLink = document.createElement('div');\n",
              "          docLink.innerHTML = docLinkHtml;\n",
              "          element.appendChild(docLink);\n",
              "        }\n",
              "      </script>\n",
              "    </div>\n",
              "  </div>\n",
              "  "
            ],
            "text/plain": [
              "      id  ...                                       clean_tweets\n",
              "0  31963  ...  [studiolife, aislife, require, passion, dedica...\n",
              "1  31964  ...  [white, supremacists, want, everyone, see, new...\n",
              "2  31965  ...  [safe, ways, heal, acne, altwaystoheal, health...\n",
              "3  31966  ...  [hp, curse, child, book, reservations, already...\n",
              "4  31967  ...  [3rd, bihday, amaze, hilarious, nephew, eli, a...\n",
              "\n",
              "[5 rows x 3 columns]"
            ]
          },
          "metadata": {},
          "execution_count": 51
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "df1.head(20)"
      ],
      "metadata": {
        "id": "fUm93I10S89n",
        "outputId": "4b4d84a6-e986-4275-daf8-e3ea79533a37",
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 0
        }
      },
      "execution_count": 52,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/html": [
              "\n",
              "  <div id=\"df-708ba344-250e-4758-b107-3b72753e3bcf\">\n",
              "    <div class=\"colab-df-container\">\n",
              "      <div>\n",
              "<style scoped>\n",
              "    .dataframe tbody tr th:only-of-type {\n",
              "        vertical-align: middle;\n",
              "    }\n",
              "\n",
              "    .dataframe tbody tr th {\n",
              "        vertical-align: top;\n",
              "    }\n",
              "\n",
              "    .dataframe thead th {\n",
              "        text-align: right;\n",
              "    }\n",
              "</style>\n",
              "<table border=\"1\" class=\"dataframe\">\n",
              "  <thead>\n",
              "    <tr style=\"text-align: right;\">\n",
              "      <th></th>\n",
              "      <th>id</th>\n",
              "      <th>tweet</th>\n",
              "      <th>clean_tweets</th>\n",
              "    </tr>\n",
              "  </thead>\n",
              "  <tbody>\n",
              "    <tr>\n",
              "      <th>0</th>\n",
              "      <td>31963</td>\n",
              "      <td>#studiolife #aislife #requires #passion #dedic...</td>\n",
              "      <td>[studiolife, aislife, require, passion, dedica...</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>1</th>\n",
              "      <td>31964</td>\n",
              "      <td>@user #white #supremacists want everyone to s...</td>\n",
              "      <td>[white, supremacists, want, everyone, see, new...</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>2</th>\n",
              "      <td>31965</td>\n",
              "      <td>safe ways to heal your #acne!!    #altwaystohe...</td>\n",
              "      <td>[safe, ways, heal, acne, altwaystoheal, health...</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>3</th>\n",
              "      <td>31966</td>\n",
              "      <td>is the hp and the cursed child book up for res...</td>\n",
              "      <td>[hp, curse, child, book, reservations, already...</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>4</th>\n",
              "      <td>31967</td>\n",
              "      <td>3rd #bihday to my amazing, hilarious #nephew...</td>\n",
              "      <td>[3rd, bihday, amaze, hilarious, nephew, eli, a...</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>5</th>\n",
              "      <td>31968</td>\n",
              "      <td>choose to be   :) #momtips</td>\n",
              "      <td>[choose, momtips]</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>6</th>\n",
              "      <td>31969</td>\n",
              "      <td>something inside me dies ð¦ð¿â¨  eyes nes...</td>\n",
              "      <td>[something, inside, die, eye, ness, smokeyeyes...</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>7</th>\n",
              "      <td>31970</td>\n",
              "      <td>#finished#tattoo#inked#ink#loveitâ¤ï¸ #â¤ï¸...</td>\n",
              "      <td>[finishedtattooinkedinkloveit, thanksaleeee]</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>8</th>\n",
              "      <td>31971</td>\n",
              "      <td>@user @user @user i will never understand why...</td>\n",
              "      <td>[never, understand, dad, leave, young, deep, i...</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>9</th>\n",
              "      <td>31972</td>\n",
              "      <td>#delicious   #food #lovelife #capetown mannaep...</td>\n",
              "      <td>[delicious, food, lovelife, capetown, mannaepi...</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>10</th>\n",
              "      <td>31973</td>\n",
              "      <td>1000dayswasted - narcosis infinite ep.. make m...</td>\n",
              "      <td>[1000dayswasted, narcosis, infinite, ep, make,...</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>11</th>\n",
              "      <td>31974</td>\n",
              "      <td>one of the world's greatest spoing events   #l...</td>\n",
              "      <td>[one, worlds, greatest, spoing, events, lemans...</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>12</th>\n",
              "      <td>31975</td>\n",
              "      <td>half way through the website now and #allgoing...</td>\n",
              "      <td>[half, way, website, allgoingwell]</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>13</th>\n",
              "      <td>31976</td>\n",
              "      <td>good food, good life , #enjoy and   ððð...</td>\n",
              "      <td>[good, food, good, life, enjoy, call, garlic, ...</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>14</th>\n",
              "      <td>31977</td>\n",
              "      <td>i'll stand behind this #guncontrolplease   #se...</td>\n",
              "      <td>[ill, stand, behind, guncontrolplease, sensele...</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>15</th>\n",
              "      <td>31978</td>\n",
              "      <td>i ate,i ate and i ate...ðð   #jamaisasth...</td>\n",
              "      <td>[atei, eat, eat, jamaisasthi, fish, curry, pra...</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>16</th>\n",
              "      <td>31979</td>\n",
              "      <td>@user got my @user limited edition rain or sh...</td>\n",
              "      <td>[get, limit, edition, rain, shine, set, today]</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>17</th>\n",
              "      <td>31980</td>\n",
              "      <td>&amp;amp; #love &amp;amp; #hugs &amp;amp; #kisses too! how...</td>\n",
              "      <td>[amp, love, amp, hug, amp, kiss, keep, baby, p...</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>18</th>\n",
              "      <td>31981</td>\n",
              "      <td>ð­ðð #girls   #sun #fave @ london, uni...</td>\n",
              "      <td>[girls, sun, fave, london, unite, kingdom]</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>19</th>\n",
              "      <td>31982</td>\n",
              "      <td>thought factory: bbc neutrality on right wing ...</td>\n",
              "      <td>[think, factory, bbc, neutrality, right, wing,...</td>\n",
              "    </tr>\n",
              "  </tbody>\n",
              "</table>\n",
              "</div>\n",
              "      <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-708ba344-250e-4758-b107-3b72753e3bcf')\"\n",
              "              title=\"Convert this dataframe to an interactive table.\"\n",
              "              style=\"display:none;\">\n",
              "        \n",
              "  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n",
              "       width=\"24px\">\n",
              "    <path d=\"M0 0h24v24H0V0z\" fill=\"none\"/>\n",
              "    <path d=\"M18.56 5.44l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94zm-11 1L8.5 8.5l.94-2.06 2.06-.94-2.06-.94L8.5 2.5l-.94 2.06-2.06.94zm10 10l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94z\"/><path d=\"M17.41 7.96l-1.37-1.37c-.4-.4-.92-.59-1.43-.59-.52 0-1.04.2-1.43.59L10.3 9.45l-7.72 7.72c-.78.78-.78 2.05 0 2.83L4 21.41c.39.39.9.59 1.41.59.51 0 1.02-.2 1.41-.59l7.78-7.78 2.81-2.81c.8-.78.8-2.07 0-2.86zM5.41 20L4 18.59l7.72-7.72 1.47 1.35L5.41 20z\"/>\n",
              "  </svg>\n",
              "      </button>\n",
              "      \n",
              "  <style>\n",
              "    .colab-df-container {\n",
              "      display:flex;\n",
              "      flex-wrap:wrap;\n",
              "      gap: 12px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert {\n",
              "      background-color: #E8F0FE;\n",
              "      border: none;\n",
              "      border-radius: 50%;\n",
              "      cursor: pointer;\n",
              "      display: none;\n",
              "      fill: #1967D2;\n",
              "      height: 32px;\n",
              "      padding: 0 0 0 0;\n",
              "      width: 32px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert:hover {\n",
              "      background-color: #E2EBFA;\n",
              "      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n",
              "      fill: #174EA6;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert {\n",
              "      background-color: #3B4455;\n",
              "      fill: #D2E3FC;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert:hover {\n",
              "      background-color: #434B5C;\n",
              "      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n",
              "      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n",
              "      fill: #FFFFFF;\n",
              "    }\n",
              "  </style>\n",
              "\n",
              "      <script>\n",
              "        const buttonEl =\n",
              "          document.querySelector('#df-708ba344-250e-4758-b107-3b72753e3bcf button.colab-df-convert');\n",
              "        buttonEl.style.display =\n",
              "          google.colab.kernel.accessAllowed ? 'block' : 'none';\n",
              "\n",
              "        async function convertToInteractive(key) {\n",
              "          const element = document.querySelector('#df-708ba344-250e-4758-b107-3b72753e3bcf');\n",
              "          const dataTable =\n",
              "            await google.colab.kernel.invokeFunction('convertToInteractive',\n",
              "                                                     [key], {});\n",
              "          if (!dataTable) return;\n",
              "\n",
              "          const docLinkHtml = 'Like what you see? Visit the ' +\n",
              "            '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n",
              "            + ' to learn more about interactive tables.';\n",
              "          element.innerHTML = '';\n",
              "          dataTable['output_type'] = 'display_data';\n",
              "          await google.colab.output.renderOutput(dataTable, element);\n",
              "          const docLink = document.createElement('div');\n",
              "          docLink.innerHTML = docLinkHtml;\n",
              "          element.appendChild(docLink);\n",
              "        }\n",
              "      </script>\n",
              "    </div>\n",
              "  </div>\n",
              "  "
            ],
            "text/plain": [
              "       id  ...                                       clean_tweets\n",
              "0   31963  ...  [studiolife, aislife, require, passion, dedica...\n",
              "1   31964  ...  [white, supremacists, want, everyone, see, new...\n",
              "2   31965  ...  [safe, ways, heal, acne, altwaystoheal, health...\n",
              "3   31966  ...  [hp, curse, child, book, reservations, already...\n",
              "4   31967  ...  [3rd, bihday, amaze, hilarious, nephew, eli, a...\n",
              "5   31968  ...                                  [choose, momtips]\n",
              "6   31969  ...  [something, inside, die, eye, ness, smokeyeyes...\n",
              "7   31970  ...       [finishedtattooinkedinkloveit, thanksaleeee]\n",
              "8   31971  ...  [never, understand, dad, leave, young, deep, i...\n",
              "9   31972  ...  [delicious, food, lovelife, capetown, mannaepi...\n",
              "10  31973  ...  [1000dayswasted, narcosis, infinite, ep, make,...\n",
              "11  31974  ...  [one, worlds, greatest, spoing, events, lemans...\n",
              "12  31975  ...                 [half, way, website, allgoingwell]\n",
              "13  31976  ...  [good, food, good, life, enjoy, call, garlic, ...\n",
              "14  31977  ...  [ill, stand, behind, guncontrolplease, sensele...\n",
              "15  31978  ...  [atei, eat, eat, jamaisasthi, fish, curry, pra...\n",
              "16  31979  ...     [get, limit, edition, rain, shine, set, today]\n",
              "17  31980  ...  [amp, love, amp, hug, amp, kiss, keep, baby, p...\n",
              "18  31981  ...         [girls, sun, fave, london, unite, kingdom]\n",
              "19  31982  ...  [think, factory, bbc, neutrality, right, wing,...\n",
              "\n",
              "[20 rows x 3 columns]"
            ]
          },
          "metadata": {},
          "execution_count": 52
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "from sklearn.feature_extraction.text import CountVectorizer\n",
        "from sklearn.feature_extraction.text import TfidfVectorizer\n",
        "from sklearn.metrics import confusion_matrix\n",
        "from sklearn.linear_model import LogisticRegression\n",
        "from sklearn.model_selection import train_test_split\n",
        "from sklearn.metrics import f1_score\n",
        "from sklearn.feature_selection import SelectFromModel\n",
        "from sklearn.metrics import classification_report\n",
        "from sklearn.metrics import accuracy_score\n",
        "from sklearn.svm import LinearSVC\n",
        "from sklearn.ensemble import RandomForestClassifier\n",
        "from sklearn.naive_bayes import GaussianNB\n",
        "import warnings\n",
        "warnings.simplefilter(action='ignore', category=FutureWarning)"
      ],
      "metadata": {
        "id": "rbcyh5MM4pFG"
      },
      "execution_count": 53,
      "outputs": []
    },
    {
      "cell_type": "code",
      "source": [
        "mdf = df.copy()"
      ],
      "metadata": {
        "id": "MM4jbBT5Wxo-"
      },
      "execution_count": 54,
      "outputs": []
    },
    {
      "cell_type": "code",
      "source": [
        "#vectorizer = TfidfVectorizer(max_features=5000)\n",
        "tf_idf = TfidfVectorizer(max_features = 8000)\n",
        "# TF-IDF feature matrix\n",
        "df['clean_tweets'] = df['clean_tweets'].apply(lambda x: ' '.join(x))\n",
        "\n",
        "X = tf_idf.fit_transform(df['clean_tweets'] )\n",
        "X"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "fMYfT-w546aT",
        "outputId": "afbd4ebc-d34b-4bcc-a56f-4d28fb244adf"
      },
      "execution_count": 55,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "<31962x8000 sparse matrix of type '<class 'numpy.float64'>'\n",
              "\twith 203647 stored elements in Compressed Sparse Row format>"
            ]
          },
          "metadata": {},
          "execution_count": 55
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "X = X.toarray()"
      ],
      "metadata": {
        "id": "3o6unl75B9cw"
      },
      "execution_count": 56,
      "outputs": []
    },
    {
      "cell_type": "code",
      "source": [
        "X_train, X_test, y_train, y_test = train_test_split(X, df['label'], test_size=0.2, random_state=69)\n",
        "model = GaussianNB().fit(X_train, y_train)\n",
        "predicted = model.predict(X_test)\n",
        "report = classification_report( y_test, predicted )\n",
        "print(report)\n",
        "acc=accuracy_score(y_test,predicted)\n"
      ],
      "metadata": {
        "id": "EMIqLoD9AX5v",
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "outputId": "44892214-4af3-42f1-ecb8-851828731bd5"
      },
      "execution_count": 57,
      "outputs": [
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "              precision    recall  f1-score   support\n",
            "\n",
            "           0       0.97      0.81      0.88      5957\n",
            "           1       0.20      0.63      0.30       436\n",
            "\n",
            "    accuracy                           0.80      6393\n",
            "   macro avg       0.58      0.72      0.59      6393\n",
            "weighted avg       0.92      0.80      0.84      6393\n",
            "\n"
          ]
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "X_train, X_test, y_train, y_test = train_test_split(X, df['label'], test_size=0.2, random_state=69)\n",
        "model = LogisticRegression(class_weight='balanced').fit(X_train, y_train)\n",
        "predicted = model.predict(X_test)\n",
        "report = classification_report( y_test, predicted )\n",
        "print(report)\n",
        "acc=accuracy_score(y_test,predicted)"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "-X-nLRLFcIqh",
        "outputId": "5beae008-5236-4dec-8a82-91cfa32a7b0e"
      },
      "execution_count": 58,
      "outputs": [
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "              precision    recall  f1-score   support\n",
            "\n",
            "           0       0.98      0.94      0.96      5957\n",
            "           1       0.48      0.77      0.59       436\n",
            "\n",
            "    accuracy                           0.93      6393\n",
            "   macro avg       0.73      0.85      0.78      6393\n",
            "weighted avg       0.95      0.93      0.94      6393\n",
            "\n"
          ]
        }
      ]
    }
  ]
}